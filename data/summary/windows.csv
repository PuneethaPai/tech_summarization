command,doc_url,doc_text,man_entry,tldr_summary
attrib,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/attrib,"





































attrib | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















attrib


10/16/2017

2 minutes to read








+1





In this article


Displays, sets, or removes attributes assigned to files or directories. If used without parameters, attrib displays attributes of all files in the current directory.
Syntax
attrib [{+|-}r] [{+|-}a] [{+|-}s] [{+|-}h] [{+|-}i] [<drive>:][<path>][<filename>] [/s [/d] [/l]]

Parameters



Parameter
Description




{+|-}r
Sets (+) or clears (-) the Read-only file attribute.


{+\|-}a
Sets (+) or clears (-) the Archive file attribute. This attribute set marks files that have changed since the last time they were backed up. Note that the xcopy command uses archive attributes.


{+\|-}s
Sets (+) or clears (-) the System file attribute. If a file uses this attribute set, you must clear the attribute before you can change any other attributes for the file.


{+\|-}h
Sets (+) or clears (-) the Hidden file attribute. If a file uses this attribute set, you must clear the attribute before you can change any other attributes for the file.


{+\|-}i
Sets (+) or clears (-) the Not Content Indexed file attribute.


[<drive>:][<path>][<filename>]
Specifies the location and name of the directory, file, or group of files for which you want to display or change attributes.You can use the ? and * wildcard characters in the filename parameter to display or change the attributes for a group of files.


/s
Applies attrib and any command-line options to matching files in the current directory and all of its subdirectories.


/d
Applies attrib and any command-line options to directories.


/l
Applies attrib and any command-line options to the Symbolic Link, rather than the target of the Symbolic Link.


/?
Displays help at the command prompt.



Examples
To display the attributes of a file named News86 that is located in the current directory, type:
attrib news86

To assign the Read-only attribute to the file named report.txt, type:
attrib +r report.txt

To remove the Read-only attribute from files in the public directory and its subdirectories on a disk in drive b:, type:
attrib -r b:\public\*.* /s

To set the Archive attribute for all files on drive a:, and then clear the Archive attribute for files with the .bak extension, type:
attrib +a a:*.* & attrib -a a:*.bak

Additional References

Command-Line Syntax Key

xcopy command









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# attrib

> Displays or changes file and directory attributes.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/attrib>.

- Display the attributes of the files in the current directory:

`attrib`

- Display the attributes of the files in the current directory and sub-directories:

`attrib /S`

- Display the attributes of the files and directories in the current directory and sub-directories:

`attrib /S /D`

- Add the read-only attribute to a file:

`attrib +R {{document.txt}}`

- Remove the system and hidden attributes of a file:

`attrib -S -H {{document.txt}}`

- Add the hidden attribute to a directory:

`attrib +H {{path\to\directory}}`
"
vol,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/vol,"





































vol | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















vol


10/16/2017

2 minutes to read













In this article


Displays the disk volume label and serial number, if they exist.  If used without parameters, vol displays information for the current drive.
Syntax
vol [<Drive>:]

Parameters



Parameter
Description




<Drive>:
Specifies the drive that contains the disk for which you want to display the volume label and serial number.


/?
Displays help at the command prompt.



Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# vol

> Display information about volumes.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/vol>.

- Display the label and serial number for the current drive:

`vol`

- Display the label and serial number for a specific volume:

`vol {{D:}}`
"
findstr,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/findstr,"





































findstr | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















findstr


10/16/2017

3 minutes to read








+2





In this article


Searches for patterns of text in files.
Syntax
findstr [/b] [/e] [/l | /r] [/s] [/i] [/x] [/v] [/n] [/m] [/o] [/p] [/f:<file>] [/c:<string>] [/g:<file>] [/d:<dirlist>] [/a:<colorattribute>] [/off[line]] <strings> [<drive>:][<path>]<filename>[ ...]

Parameters



Parameter
Description




/b
Matches the text pattern if it is at the beginning of a line.


/e
Matches the text pattern if it is at the end of a line.


/l
Processes search strings literally.


/r
Processes search strings as regular expressions. This is the default setting.


/s
Searches the current directory and all subdirectories.


/i
Ignores the case of the characters when searching for the string.


/x
Prints lines that match exactly.


/v
Prints only lines that don't contain a match.


/n
Prints the line number of each line that matches.


/m
Prints only the file name if a file contains a match.


/o
Prints character offset before each matching line.


/p
Skips files with non-printable characters.


/off[line]
Does not skip files that have the offline attribute set.


/f:<file>
Gets a file list from the specified file.


/c:<string>
Uses the specified text as a literal search string.


/g:<file>
Gets search strings from the specified file.


/d:<dirlist>
Searches the specified list of directories. Each directory must be separated with a semicolon (;), for example dir1;dir2;dir3.


/a:<colorattribute>
Specifies color attributes with two hexadecimal digits. Type color /? for additional information.


<strings>
Specifies the text to search for in filename. Required.


[\<drive>:][<path>]<filename>[ ...]
Specifies the location and file or files to search. At least one file name is required.


/?
Displays Help at the command prompt.



Remarks

All findstr command-line options must precede strings and filename in the command string.

Regular expressions use both literal characters and meta-characters to find patterns of text, rather than exact strings of characters.

A literal character is a character that doesn't have a special meaning in the regular-expression syntax; instead, it matches an occurrence of that character. For example, letters and numbers are literal characters.

A meta-character is a symbol with special meaning (an operator or delimiter) in the regular-expression syntax.
The accepted meta-characters, are:



Meta-character
Value




.
Wildcard - Any character


*
Repeat - Zero or more occurrences of the previous character or class.


^
Beginning line position - Beginning of the line.


$
Ending line position - End of the line.


[class]
Character class - Any one character in a set.


[^class]
Inverse class - Any one character not in a set.


[x-y]
Range - Any characters within the specified range.


\x
Escape - Literal use of a meta-character.


<string
Beginning word position - Beginning of the word.


string>
Ending word position - End of the word.



The special characters in regular expression syntax have the most power when you use them together. For example, use the combination of the wildcard character (.) and repeat (*) character to match any string of characters: .*
Use the following expression as part of a larger expression to match any string beginning with b and ending with ing: b.*ing



To search for multiple strings in a set of files, you must create a text file that contains each search criterion on a separate line.

Use spaces to separate multiple search strings unless the argument is prefixed with /c.


Examples
To search for hello or there in file x.y, type:
findstr hello there x.y

To search for hello there in file x.y, type:
findstr /c:hello there x.y

To find all occurrences of the word Windows (with an initial capital letter W) in the file proposal.txt, type:
findstr Windows proposal.txt

To search every file in the current directory and all subdirectories that contained the word Windows, regardless of the letter case, type:
findstr /s /i Windows *.*

To find all occurrences of lines that begin with FOR and are preceded by zero or more spaces (as in a computer program loop), and to display the line number where each occurrence is found, type:
findstr /b /n /r /c:^ *FOR *.bas

To list the exact files that you want to search in a text file, use the search criteria in the file stringlist.txt, to search the files listed in filelist.txt, and then to store the results in the file results.out, type:
findstr /g:stringlist.txt /f:filelist.txt > results.out

To list every file containing the word computer within the current directory and all subdirectories, regardless of case, type:
findstr /s /i /m <computer> *.*

To list every file containing the word computer and any other words that begin with comp, (such as compliment and compete), type:
findstr /s /i /m <comp.* *.*

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# findstr

> Find specified text within one or more files.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/findstr>.

- Find space-separated string(s) in all files:

`findstr ""{{query}}"" *`

- Find space-separated string(s) in a piped command's output:

`{{dir}} | findstr ""{{query}}""`

- Find space-separated string(s) in all files recur[s]ively:

`findstr /s ""{{query}}"" *`

- Find strings using a case-insensitive search:

`findstr /i ""{{query}}"" *""`

- Find strings in all files using regular expressions:

`findstr /r ""{{expression}}"" *`

- Find a literal string (containing spaces) in all text files:

`findstr /c:""{{query}}"" *.txt`

- Display the line number before each matching line:

`findstr /n ""{{query}}"" *`

- Display only the filenames that contain a match:

`findstr /m ""{{query}}"" *`
"
showmount,https://docs.microsoft.com/windows-server/administration/windows-commands/showmount,"





































showmount | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















showmount


10/16/2017

2 minutes to read












In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

You can use showmount to display mounted directories.
Syntax
showmount {-e|-a|-d} <Server>

Description
The showmount command-line utility displays information about mounted file systems exported by Server for NFS on the computer specified by Server. If Server is not provided, showmount displays information about the computer on which the showmount command is run.
You must provide one of the following options:

-e - Displays all file systems exported on the server.
-a - Displays all Network File System (NFS) clients and the directories on the server each has mounted.
-d - Displays all directories on the server that are currently mounted by NFS clients.

See Also
Services for Network File System Command Reference







Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
SHOWMOUNT(8)		  BSD System Manager's Manual		  SHOWMOUNT(8)

NAME
     showmount -- show remote NFS mounts on host

SYNOPSIS
     showmount [-Ae36] [-a | -d] [host]

DESCRIPTION
     showmount shows status information about the NFS server on host.  By
     default it prints the names of all hosts that have NFS file systems
     mounted on the host. See NFS: Network File System Protocol Specification,
     RFC 1094, Appendix A, and NFS: Network File System Version 3 Protocol
     Specification, Appendix I, for a detailed description of the protocol.

     -A      Search for NFS servers advertised via Bonjour.

     -a      List all mount points in the form: host:dirpath

     -d      List directory paths of mount points instead of hosts.

     -e      Show the host's exports list.

     -3      Use mount protocol Version 3, compatible with NFS Version 3.

     -6      Use only IPv6 addresses to contact servers.

SEE ALSO
     mount(1), mountd(8), nfsd(8), mDNSResponder(8)

BUGS
     The mount daemon running on the server only has an idea of the actual
     mounts, since the NFS server is stateless.  showmount will only display
     the information as accurately as the mount daemon reports it.

HISTORY
     The showmount utility first appeared in 4.4BSD.

4th Berkeley Distribution     September 26, 2010     4th Berkeley Distribution
","# showmount

> Display information about NFS filesystems on Windows Server.
> More information: <https://docs.microsoft.com/windows-server/administration/windows-commands/showmount>.

- Display all exported filesystems:

`showmount -e`

- Display all NFS clients and their mounted directories:

`showmount -a`

- Display all NFS mounted directories:

`showmount -d`

- Display all exported filesystems for a remote server:

`showmount -e {{server_address}}`
"
sfc,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/sfc,"





































sfc | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















sfc


10/16/2017

2 minutes to read












In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

Scans and verifies the integrity of all protected system files and replaces incorrect versions with correct versions.
Syntax
sfc [/scannow] [/verifyonly] [/scanfile=<file>] [/verifyfile=<file>] [/offwindir=<offline windows directory> /offbootdir=<offline boot directory>]

Parameters



Parameter
Description




/scannow
Scans the integrity of all protected system files and repairs files with problems when possible.


/verifyonly
Scans integrity of all protected system files. No repair operation is performed.


/scanfile
Scans integrity of the specified file and repairs the file if problems are detected, when possible.


<file>
Specified full path and filename


/verifyfile
verifies the integrity of the specified file. No repair operation is performed.


/offwindir
Specifies the location of the offline windows directory, for offline repair.


/offbootdir
Specifies the location of the offline boot directory for offline


/?
Displays help at the command prompt.



Remarks

You must be logged on as a member of the Administrators group to run sfc.exe.
if sfc discovers that a protected file has been overwritten, it retrieves the correct version of the file from the systemroot\system32\dllcache folder, and then replaces the incorrect file.
There are functional differences between sfc on Windows Server  2003,  Windows Server  2008 , and  Windows Server  2008 R2 :
for more information about sfc on Windows Server 2003, see article 310747 in the Microsoft Knowledge Base.
for more information about sfc on  Windows Server  2008 , and  Windows Server  2008 R2 , see System File Checker.

Examples
To verify the kernel32.dll file, type:
sfc /verifyfile=c:\windows\system32\kernel32.dll

To setup offline repair of the kernel32.dll file with an offline boot directory set to d: and offline windows directory set to d:\windows, type:
sfc /scanfile=d:\windows\system32\kernel32.dll /offbootdir=d:\ /offwindir=d:\windows

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# sfc

> Scans the integrity of Windows system files.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/sfc>.

- Display information about the usage of the command:

`sfc`

- Scan all system files and, if possible, repair any problems:

`sfc /scannow`

- Scan all system files without attempting to repair any:

`sfc /verifyonly`

- Scan a specific file and, if possible, repair any problems:

`sfc /scanfile={{path/to/file}}`

- Scan a specific file without attempting to repair it:

`sfc /verifyfile={{path/to/file}}`

- When repairing offline, specify the boot directory:

`sfc /offbootdir={{path/to/dir}}`

- When repairing offline, specify the Windows directory:

`sfc /offwindir={{path/to/dir}}`
"
print,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/print,"





































print | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















print


10/16/2017

2 minutes to read













In this article


Sends a text file to a printer. A file can print in the background if you send it to a printer connected to a serial or parallel port on the local computer.

Note
You can perform many configuration tasks from the command prompt by using the Mode command, including configuring a printer connected to a parallel or a serial port, displaying printer status, or preparing a printer for code page switching.

Syntax
print [/d:<printername>] [<drive>:][<path>]<filename>[ ...]

Parameters



Parameter
Description




/d:<printername>
Specifies the printer that you want to print the job. To print to a locally connected printer, specify the port on your computer where the printer is connected. Valid values for parallel ports are LPT1, LPT2, and LPT3. Valid values for serial ports are COM1, COM2, COM3, and COM4. You can also specify a network printer by using its queue name (\\server_name\printer_name). If you don't specify a printer, the print job is sent to LPT1 by default.


<drive>:
Specifies the logical or physical drive where the file you want to print is located. This parameter isn't required if the file you want to print is located on the current drive.


<path>
Specifies the location of the file you want to print. This parameter isn't required if the file you want to print is located in the current directory.


<filename>[ ...]
Required. Specifies the file you want to print. You can include multiple files in one command.


/?
Displays help at the command prompt.



Examples
To send the report.txt file, located in the current directory, to a printer connected to lpt2 on the local computer, type:
print /d:lpt2 report.txt

To send the report.txt file, located in the c:\accounting directory, to the printer1 print queue on the /d:\copyroom server, type:
print /d:\\copyroom\printer1 c:\accounting\report.txt

Additional References

Command-Line Syntax Key

Print Command Reference

Mode command









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# print

> Print a text file to a printer.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/print>.

- Print a text file to the default printer:

`print {{path/to/file}}`

- Print a text file to a specific printer:

`print /d:{{printer}} {{path/to/file}}`
"
find,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/find,"





































find | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















find


10/16/2017

2 minutes to read








+1





In this article


Searches for a string of text in a file or files, and displays lines of text that contain the specified string.
Syntax
find [/v] [/c] [/n] [/i] [/off[line]] <string> [[<drive>:][<path>]<filename>[...]]

Parameters



Parameter
Description




/v
Displays all lines that don't contain the specified <string>.


/c
Counts the lines that contain the specified <string> and displays the total.


/n
Precedes each line with the file's line number.


/i
Specifies that the search is not case-sensitive.


[/off[line]]
Doesn't skip files that have the offline attribute set.


<string>
Required. Specifies the group of characters (enclosed in quotation marks) that you want to search for.


[<drive>:][<path>]<filename>
Specifies the location and name of the file in which to search for the specified string.


/?
Displays help at the command prompt.



Remarks

If you don't use /i, this command searches for exactly what you specify for string. For example, this command treats the characters a and A differently. If you use /i, however, the search becomes non-case-sensitive, and it treats a and A as the same character.

If the string you want to search for contains quotation marks, you must use double quotation marks for each quotation mark contained within the string (for example, """"This string contains quotation marks"""").

If you omit a file name, this command acts as a filter, taking input from the standard input source (usually the keyboard, a pipe (|), or a redirected file) and then displays any lines that contain string.

You can type parameters and command-line options for the find command in any order.

You can't use wildcards (* and ?) in file names or extensions that you specify while using this command. To search for a string in a set of files that you specify with wildcards, you can use this command within a for command.

If you use /c and /v in the same command line, this command displays a count of the lines that don't contain the specified string. If you specify /c and /n in the same command line, find ignores /n.

This command doesn't recognize carriage returns. When you use this command to search for text in a file that includes carriage returns, you must limit the search string to text that can be found between carriage returns (that is, a string that is not likely to be interrupted by a carriage return). For example, this command doesn't report a match for the string tax file if a carriage return occurs between the words tax and file.


Examples
To display all lines from pencil.ad that contain the string pencil sharpener, type:
find pencil sharpener pencil.ad

To find the text, ""The scientists labeled their paper for discussion only. It is not a final report."" in the report.doc file, type:
find """"The scientists labeled their paper for discussion only. It is not a final report."""" report.doc

To search for a set of files, you can use the find command within the for command. To search the current directory for files that have the extension .bat and that contain the string PROMPT, type:
for %f in (*.bat) do find PROMPT %f

To search your hard disk to find and display the file names on drive C that contain the string CPU, use the pipe (|) to direct the output of the dir command to the find command as follows:
dir c:\ /s /b | find CPU

Because find searches are case-sensitive and dir produces uppercase output, you must either type the string CPU in uppercase letters or use the /i command-line option with find.
Additional References

Command-Line Syntax Key

for command









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
FIND(1) 		  BSD General Commands Manual		       FIND(1)

NAME
     find -- walk a file hierarchy

SYNOPSIS
     find [-H | -L | -P] [-EXdsx] [-f path] path ... [expression]
     find [-H | -L | -P] [-EXdsx] -f path [path ...] [expression]

DESCRIPTION
     The find utility recursively descends the directory tree for each path
     listed, evaluating an expression (composed of the ``primaries'' and
     ``operands'' listed below) in terms of each file in the tree.

     The options are as follows:

     -E      Interpret regular expressions followed by -regex and -iregex pri-
	     maries as extended (modern) regular expressions rather than basic
	     regular expressions (BRE's).  The re_format(7) manual page fully
	     describes both formats.

     -H      Cause the file information and file type (see stat(2)) returned
	     for each symbolic link specified on the command line to be those
	     of the file referenced by the link, not the link itself.  If the
	     referenced file does not exist, the file information and type
	     will be for the link itself.  File information of all symbolic
	     links not on the command line is that of the link itself.

     -L      Cause the file information and file type (see stat(2)) returned
	     for each symbolic link to be those of the file referenced by the
	     link, not the link itself.  If the referenced file does not
	     exist, the file information and type will be for the link itself.

	     This option is equivalent to the deprecated -follow primary.

     -P      Cause the file information and file type (see stat(2)) returned
	     for each symbolic link to be those of the link itself.  This is
	     the default.

     -X      Permit find to be safely used in conjunction with xargs(1).  If a
	     file name contains any of the delimiting characters used by
	     xargs(1), a diagnostic message is displayed on standard error,
	     and the file is skipped.  The delimiting characters include sin-
	     gle (`` ' '') and double (`` "" '') quotes, backslash (``\''),
	     space, tab and newline characters.

	     However, you may wish to consider the -print0 primary in conjunc-
	     tion with ``xargs -0'' as an effective alternative.

     -d      Cause find to perform a depth-first traversal, i.e., directories
	     are visited in post-order and all entries in a directory will be
	     acted on before the directory itself.  By default, find visits
	     directories in pre-order, i.e., before their contents.  Note, the
	     default is not a breadth-first traversal.

	     This option is equivalent to the -depth primary of IEEE Std
	     1003.1-2001 (``POSIX.1'').  The -d option can be useful when find
	     is used with cpio(1) to process files that are contained in
	     directories with unusual permissions.  It ensures that you have
	     write permission while you are placing files in a directory, then
	     sets the directory's permissions as the last thing.

     -f      Specify a file hierarchy for find to traverse.  File hierarchies
	     may also be specified as the operands immediately following the
	     options.

     -s      Cause find to traverse the file hierarchies in lexicographical
	     order, i.e., alphabetical order within each directory.  Note:
	     `find -s' and `find | sort' may give different results.

     -x      Prevent find from descending into directories that have a device
	     number different than that of the file from which the descent
	     began.

	     This option is equivalent to the deprecated -xdev primary.

PRIMARIES
     All primaries which take a numeric argument allow the number to be pre-
     ceded by a plus sign (``+'') or a minus sign (``-'').  A preceding plus
     sign means ``more than n'', a preceding minus sign means ``less than n''
     and neither means ``exactly n''.

     -Bmin n
	     True if the difference between the time of a file's inode cre-
	     ation and the time find was started, rounded up to the next full
	     minute, is n minutes.

     -Bnewer file
	     Same as -newerBm.

     -Btime n[smhdw]
	     If no units are specified, this primary evaluates to true if the
	     difference between the time of a file's inode creation and the
	     time find was started, rounded up to the next full 24-hour
	     period, is n 24-hour periods.

	     If units are specified, this primary evaluates to true if the
	     difference between the time of a file's inode creation and the
	     time find was started is exactly n units.	Please refer to the
	     -atime primary description for information on supported time
	     units.

     -acl    May be used in conjunction with other primaries to locate files
	     with extended ACLs.  See acl(3) for more information.

     -amin n
	     True if the difference between the file last access time and the
	     time find was started, rounded up to the next full minute, is n
	     minutes.

     -anewer file
	     Same as -neweram.

     -atime n[smhdw]
	     If no units are specified, this primary evaluates to true if the
	     difference between the file last access time and the time find
	     was started, rounded up to the next full 24-hour period, is n
	     24-hour periods.

	     If units are specified, this primary evaluates to true if the
	     difference between the file last access time and the time find
	     was started is exactly n units.  Possible time units are as fol-
	     lows:

	     s	     second
	     m	     minute (60 seconds)
	     h	     hour (60 minutes)
	     d	     day (24 hours)
	     w	     week (7 days)

	     Any number of units may be combined in one -atime argument, for
	     example, ``-atime -1h30m''.  Units are probably only useful when
	     used in conjunction with the + or - modifier.

     -cmin n
	     True if the difference between the time of last change of file
	     status information and the time find was started, rounded up to
	     the next full minute, is n minutes.

     -cnewer file
	     Same as -newercm.

     -ctime n[smhdw]
	     If no units are specified, this primary evaluates to true if the
	     difference between the time of last change of file status infor-
	     mation and the time find was started, rounded up to the next full
	     24-hour period, is n 24-hour periods.

	     If units are specified, this primary evaluates to true if the
	     difference between the time of last change of file status infor-
	     mation and the time find was started is exactly n units.  Please
	     refer to the -atime primary description for information on sup-
	     ported time units.

     -d      Same as depth.  GNU find implements this as a primary in mistaken
	     emulation of FreeBSD find(1).

     -delete
	     Delete found files and/or directories.  Always returns true.
	     This executes from the current working directory as find recurses
	     down the tree.  It will not attempt to delete a filename with a
	     ``/'' character in its pathname relative to ``.'' for security
	     reasons.  Depth-first traversal processing is implied by this
	     option.  Following symlinks is incompatible with this option.

     -depth  Always true; same as the -d option.

     -depth n
	     True if the depth of the file relative to the starting point of
	     the traversal is n.

     -empty  True if the current file or directory is empty.

     -exec utility [argument ...] ;
	     True if the program named utility returns a zero value as its
	     exit status.  Optional arguments may be passed to the utility.
	     The expression must be terminated by a semicolon (``;'').	If you
	     invoke find from a shell you may need to quote the semicolon if
	     the shell would otherwise treat it as a control operator.	If the
	     string ``{}'' appears anywhere in the utility name or the argu-
	     ments it is replaced by the pathname of the current file.
	     Utility will be executed from the directory from which find was
	     executed.	Utility and arguments are not subject to the further
	     expansion of shell patterns and constructs.

     -exec utility [argument ...] {} +
	     Same as -exec, except that ``{}'' is replaced with as many path-
	     names as possible for each invocation of utility.	This behaviour
	     is similar to that of xargs(1).

     -execdir utility [argument ...] ;
	     The -execdir primary is identical to the -exec primary with the
	     exception that utility will be executed from the directory that
	     holds the current file.  The filename substituted for the string
	     ``{}'' is not qualified.

     -execdir utility [argument ...] {} +
	     Same as -execdir, except that ``{}'' is replaced with as many
	     pathnames as possible for each invocation of utility.  This be-
	     haviour is similar to that of xargs(1).

     -flags [-|+]flags,notflags
	     The flags are specified using symbolic names (see chflags(1)).
	     Those with the ""no"" prefix (except ""nodump"") are said to be
	     notflags.	Flags in flags are checked to be set, and flags in
	     notflags are checked to be not set.  Note that this is different
	     from -perm, which only allows the user to specify mode bits that
	     are set.

	     If flags are preceded by a dash (``-''), this primary evaluates
	     to true if at least all of the bits in flags and none of the bits
	     in notflags are set in the file's flags bits.  If flags are pre-
	     ceded by a plus (``+''), this primary evaluates to true if any of
	     the bits in flags is set in the file's flags bits, or any of the
	     bits in notflags is not set in the file's flags bits.  Otherwise,
	     this primary evaluates to true if the bits in flags exactly match
	     the file's flags bits, and none of the flags bits match those of
	     notflags.

     -fstype type
	     True if the file is contained in a file system of type type.  The
	     lsvfs(1) command can be used to find out the types of file sys-
	     tems that are available on the system.  In addition, there are
	     two pseudo-types, ``local'' and ``rdonly''.  The former matches
	     any file system physically mounted on the system where the find
	     is being executed and the latter matches any file system which is
	     mounted read-only.

     -gid gname
	     The same thing as -group gname for compatibility with GNU find.
	     GNU find imposes a restriction that gname is numeric, while
	     find(1) does not.

     -group gname
	     True if the file belongs to the group gname.  If gname is numeric
	     and there is no such group name, then gname is treated as a group
	     ID.

     -ignore_readdir_race
	     This option is for GNU find compatibility and is ignored.

     -ilname pattern
	     Like -lname, but the match is case insensitive.  This is a GNU
	     find extension.

     -iname pattern
	     Like -name, but the match is case insensitive.

     -inum n
	     True if the file has inode number n.

     -ipath pattern
	     Like -path, but the match is case insensitive.

     -iregex pattern
	     Like -regex, but the match is case insensitive.

     -iwholename pattern
	     The same thing as -ipath, for GNU find compatibility.

     -links n
	     True if the file has n links.

     -lname pattern
	     Like -name, but the contents of the symbolic link are matched
	     instead of the file name.	Note that this only matches broken
	     symbolic links if symbolic links are being followed.  This is a
	     GNU find extension.

     -ls     This primary always evaluates to true.  The following information
	     for the current file is written to standard output: its inode
	     number, size in 512-byte blocks, file permissions, number of hard
	     links, owner, group, size in bytes, last modification time, and
	     pathname.	If the file is a block or character special file, the
	     device number will be displayed instead of the size in bytes.  If
	     the file is a symbolic link, the pathname of the linked-to file
	     will be displayed preceded by ``->''.  The format is identical to
	     that produced by ``ls -dgils''.

     -maxdepth n
	     Always true; descend at most n directory levels below the command
	     line arguments.  If any -maxdepth primary is specified, it
	     applies to the entire expression even if it would not normally be
	     evaluated.  ``-maxdepth 0'' limits the whole search to the com-
	     mand line arguments.

     -mindepth n
	     Always true; do not apply any tests or actions at levels less
	     than n.  If any -mindepth primary is specified, it applies to the
	     entire expression even if it would not normally be evaluated.
	     ``-mindepth 1'' processes all but the command line arguments.

     -mmin n
	     True if the difference between the file last modification time
	     and the time find was started, rounded up to the next full
	     minute, is n minutes.

     -mnewer file
	     Same as -newer.

     -mount  The same thing as -xdev, for GNU find compatibility.

     -mtime n[smhdw]
	     If no units are specified, this primary evaluates to true if the
	     difference between the file last modification time and the time
	     find was started, rounded up to the next full 24-hour period, is
	     n 24-hour periods.

	     If units are specified, this primary evaluates to true if the
	     difference between the file last modification time and the time
	     find was started is exactly n units.  Please refer to the -atime
	     primary description for information on supported time units.

     -name pattern
	     True if the last component of the pathname being examined matches
	     pattern.  Special shell pattern matching characters (``['',
	     ``]'', ``*'', and ``?'') may be used as part of pattern.  These
	     characters may be matched explicitly by escaping them with a
	     backslash (``\'').

     -newer file
	     True if the current file has a more recent last modification time
	     than file.

     -newerXY file
	     True if the current file has a more recent last access time
	     (X=a), inode creation time (X=B), change time (X=c), or modifica-
	     tion time (X=m) than the last access time (Y=a), inode creation
	     time (Y=B), change time (Y=c), or modification time (Y=m) of
	     file.  In addition, if Y=t, then file is instead interpreted as a
	     direct date specification of the form understood by cvs(1).  Note
	     that -newermm is equivalent to -newer.

     -nogroup
	     True if the file belongs to an unknown group.

     -noignore_readdir_race
	     This option is for GNU find compatibility and is ignored.

     -noleaf
	     This option is for GNU find compatibility.  In GNU find it dis-
	     ables an optimization not relevant to find(1), so it is ignored.

     -nouser
	     True if the file belongs to an unknown user.

     -ok utility [argument ...] ;
	     The -ok primary is identical to the -exec primary with the excep-
	     tion that find requests user affirmation for the execution of the
	     utility by printing a message to the terminal and reading a
	     response.	If the response is not affirmative (`y' in the
	     ``POSIX'' locale), the command is not executed and the value of
	     the -ok expression is false.

     -okdir utility [argument ...] ;
	     The -okdir primary is identical to the -execdir primary with the
	     same exception as described for the -ok primary.

     -path pattern
	     True if the pathname being examined matches pattern.  Special
	     shell pattern matching characters (``['', ``]'', ``*'', and
	     ``?'') may be used as part of pattern.  These characters may be
	     matched explicitly by escaping them with a backslash (``\'').
	     Slashes (``/'') are treated as normal characters and do not have
	     to be matched explicitly.

     -perm [-|+]mode
	     The mode may be either symbolic (see chmod(1)) or an octal num-
	     ber.  If the mode is symbolic, a starting value of zero is
	     assumed and the mode sets or clears permissions without regard to
	     the process' file mode creation mask.  If the mode is octal, only
	     bits 07777 (S_ISUID | S_ISGID | S_ISTXT | S_IRWXU | S_IRWXG |
	     S_IRWXO) of the file's mode bits participate in the comparison.
	     If the mode is preceded by a dash (``-''), this primary evaluates
	     to true if at least all of the bits in the mode are set in the
	     file's mode bits.	If the mode is preceded by a plus (``+''),
	     this primary evaluates to true if any of the bits in the mode are
	     set in the file's mode bits.  Otherwise, this primary evaluates
	     to true if the bits in the mode exactly match the file's mode
	     bits.  Note, the first character of a symbolic mode may not be a
	     dash (``-'').

     -print  This primary always evaluates to true.  It prints the pathname of
	     the current file to standard output.  If none of -exec, -ls,
	     -print, -print0, or -ok is specified, the given expression shall
	     be effectively replaced by ( given expression ) -print.

     -print0
	     This primary always evaluates to true.  It prints the pathname of
	     the current file to standard output, followed by an ASCII NUL
	     character (character code 0).

     -prune  This primary always evaluates to true.  It causes find to not
	     descend into the current file.  Note, the -prune primary has no
	     effect if the -d option was specified.

     -regex pattern
	     True if the whole path of the file matches pattern using regular
	     expression.  To match a file named ``./foo/xyzzy'', you can use
	     the regular expression ``.*/[xyz]*'' or ``.*/foo/.*'', but not
	     ``xyzzy'' or ``/foo/''.

     -samefile name
	     True if the file is a hard link to name.  If the command option
	     -L is specified, it is also true if the file is a symbolic link
	     and points to name.

     -size n[ckMGTP]
	     True if the file's size, rounded up, in 512-byte blocks is n.  If
	     n is followed by a c, then the primary is true if the file's size
	     is n bytes (characters).  Similarly if n is followed by a scale
	     indicator then the file's size is compared to n scaled as:

	     k	     kilobytes (1024 bytes)
	     M	     megabytes (1024 kilobytes)
	     G	     gigabytes (1024 megabytes)
	     T	     terabytes (1024 gigabytes)
	     P	     petabytes (1024 terabytes)

     -type t
	     True if the file is of the specified type.  Possible file types
	     are as follows:

	     b	     block special
	     c	     character special
	     d	     directory
	     f	     regular file
	     l	     symbolic link
	     p	     FIFO
	     s	     socket

     -uid uname
	     The same thing as -user uname for compatibility with GNU find.
	     GNU find imposes a restriction that uname is numeric, while
	     find(1) does not.

     -user uname
	     True if the file belongs to the user uname.  If uname is numeric
	     and there is no such user name, then uname is treated as a user
	     ID.

     -wholename pattern
	     The same thing as -path, for GNU find compatibility.

     -xattr  True if the file has any extended attributes.

     -xattrname name
	     True if the file has an extended attribute with the specified
	     name.

OPERATORS
     The primaries may be combined using the following operators.  The opera-
     tors are listed in order of decreasing precedence.

     ( expression )
	     This evaluates to true if the parenthesized expression evaluates
	     to true.

     ! expression
     -not expression
	     This is the unary NOT operator.  It evaluates to true if the
	     expression is false.

     -false  Always false.
     -true   Always true.

     expression -and expression
     expression expression
	     The -and operator is the logical AND operator.  As it is implied
	     by the juxtaposition of two expressions it does not have to be
	     specified.  The expression evaluates to true if both expressions
	     are true.	The second expression is not evaluated if the first
	     expression is false.

     expression -or expression
	     The -or operator is the logical OR operator.  The expression
	     evaluates to true if either the first or the second expression is
	     true.  The second expression is not evaluated if the first
	     expression is true.

     All operands and primaries must be separate arguments to find.  Primaries
     which themselves take arguments expect each argument to be a separate
     argument to find.

ENVIRONMENT
     The LANG, LC_ALL, LC_COLLATE, LC_CTYPE, LC_MESSAGES and LC_TIME environ-
     ment variables affect the execution of the find utility as described in
     environ(7).

EXAMPLES
     The following examples are shown as given to the shell:

     find / \! -name ""*.c"" -print
	     Print out a list of all the files whose names do not end in .c.

     find / -newer ttt -user wnj -print
	     Print out a list of all the files owned by user ``wnj'' that are
	     newer than the file ttt.

     find / \! \( -newer ttt -user wnj \) -print
	     Print out a list of all the files which are not both newer than
	     ttt and owned by ``wnj''.

     find / \( -newer ttt -or -user wnj \) -print
	     Print out a list of all the files that are either owned by
	     ``wnj'' or that are newer than ttt.

     find / -newerct '1 minute ago' -print
	     Print out a list of all the files whose inode change time is more
	     recent than the current time minus one minute.

     find / -type f -exec echo {} \;
	     Use the echo(1) command to print out a list of all the files.

     find -L /usr/ports/packages -type l -exec rm -- {} +
	     Delete all broken symbolic links in /usr/ports/packages.

     find /usr/src -name CVS -prune -o -depth +6 -print
	     Find files and directories that are at least seven levels deep in
	     the working directory /usr/src.

     find /usr/src -name CVS -prune -o -mindepth 7 -print
	     Is not equivalent to the previous example, since -prune is not
	     evaluated below level seven.

COMPATIBILITY
     The -follow primary is deprecated; the -L option should be used instead.
     See the STANDARDS section below for details.

SEE ALSO
     chflags(1), chmod(1), cvs(1), locate(1), lsvfs(1), whereis(1), which(1),
     xargs(1), stat(2), acl(3), fts(3), getgrent(3), getpwent(3), strmode(3),
     re_format(7), symlink(7)

STANDARDS
     The find utility syntax is a superset of the syntax specified by the IEEE
     Std 1003.1-2001 (``POSIX.1'') standard.

     All the single character options except -H and -L as well as -amin,
     -anewer, -cmin, -cnewer, -delete, -empty, -fstype, -iname, -inum,
     -iregex, -ls, -maxdepth, -mindepth, -mmin, -path, -print0, -regex and all
     of the -B* birthtime related primaries are extensions to IEEE Std
     1003.1-2001 (``POSIX.1'').

     Historically, the -d, -L and -x options were implemented using the pri-
     maries -depth, -follow, and -xdev.  These primaries always evaluated to
     true.  As they were really global variables that took effect before the
     traversal began, some legal expressions could have unexpected results.
     An example is the expression -print -o -depth.  As -print always evalu-
     ates to true, the standard order of evaluation implies that -depth would
     never be evaluated.  This is not the case.

     The operator -or was implemented as -o, and the operator -and was imple-
     mented as -a.

     Historic implementations of the -exec and -ok primaries did not replace
     the string ``{}'' in the utility name or the utility arguments if it had
     preceding or following non-whitespace characters.	This version replaces
     it no matter where in the utility name or arguments it appears.

     The -E option was inspired by the equivalent grep(1) and sed(1) options.

HISTORY
     A find command appeared in Version 1 AT&T UNIX.

BUGS
     The special characters used by find are also special characters to many
     shell programs.  In particular, the characters ``*'', ``['', ``]'',
     ``?'', ``('', ``)'', ``!'', ``\'' and ``;'' may have to be escaped from
     the shell.

     As there is no delimiter separating options and file names or file names
     and the expression, it is difficult to specify files named -xdev or !.
     These problems are handled by the -f option and the getopt(3) ``--'' con-
     struct.

     The -delete primary does not interact well with other options that cause
     the file system tree traversal options to be changed.

     The -mindepth and -maxdepth primaries are actually global options (as
     documented above).  They should probably be replaced by options which
     look like options.

BSD			      September 28, 2011			   BSD
","# find

> Find a specified string in one or more files.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/find>.

- Find lines that contain a specified string:

`find {{string}} {{path/to/file_or_directory}}`

- Display lines that do not contain the specified string:

`find {{string}} {{path/to/file_or_directory}} /v`

- Display the count of lines that contain the specified string:

`find {{string}} {{path/to/file_or_directory}} /c`

- Display line numbers with the list of lines:

`find {{string}} {{path/to/file_or_directory}} /n`
"
choco-install,https://chocolatey.org/docs/commands-install,"




Chocolatey Software | Commands Install






































Here's how we're responding to COVID-19 plus resources to help

×













Resources
Watch videos, read documentation, and hear Chocolatey success stories from companies you trust.
View Resources






Events
Find past and upcoming webinars, workshops, and conferences. New events have recently been added!
View Events






Courses
Step-by-step guides for all things Chocolatey! Earn badges as you learn through interactive digital courses.
View Courses











Tuesday, 22 September 20203 PM BST/GMT+1 / 4 PM CEST / 9 AM Central / 10 AM Eastern

            Standardising tool sets across different Teams is not always easy... especially when different Teams have traditionally used different approaches and methodologies.
            In this webinar we will unpack the advantages of a more standard, consistent approach with Puppet & Chocolatey.
        
Register Now






Webinar Replay fromTuesday, 23 June 2020
Chocolatey Central Management now includes the premiere feature of managing endpoints through a Chocolatey-centered solution aka Deployments. We are excited to share what Deployments is all about!
Learn More
Watch Now



COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.
Find Resources






Chocolatey for Business Feature Video Series

            In this video series, come take a tour of the many features available in our Chocolatey for Business offering.
            Many organizations choose Chocolatey for Business when they want to scale out their solution across thousands of nodes, deploy rapidly and reliably every time,
            mitigate risks with a greatly-simplified patching workflow, and access a Support Team that will guide you on your automation journey.
        
Watch the Series

































id:searchValue search by id only
tag:searchValue search by tags













Overview




 Go Back
Overview




Why Chocolatey?
Chocolatey is a software management solution unlike anything else you've ever experienced on Windows. Chocolatey brings the concepts of true package management to allow you to version things, manage dependencies and installation order, better inventory management, and other features.

How Chocolatey Works




Use Cases
Server
Desktop
Cloud / Containers
Integrations




Customer Stories
Puppet
Yelp
CME Group







Product




 Go Back
Product




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.


Pro Edition
Pro is a personal, named license that grants having licensed versions of Chocolatey on up to 8 machines and provides the ultimate Chocolatey experience!


Open Source
Chocolatey has the largest online registry of Windows packages. Learn how Open Source Chocolatey can support your next project.






Compare Editions
Learn the difference between the Chocolatey Editions and what will fit your needs the best.

Pricing
Try Chocolatey for Business Free

Purchase
I'm ready to get started now!

Support





Events
Find past and upcoming webinars, workshops, and conferences.








Solutions




 Go Back
Solutions




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.






Self-Service Anywhere

                                                Chocolatey provides a unique approach to managing your end-user software (desktops / laptops) and can be combined with your existing solutions.
                                                Chocolatey for Business (C4B) enables better security, enhanced visibility with centralized reporting, and a self-service GUI. Self-Service Anywhere allows non-administrators to easily access and manage IT approved software from the office, from home, or anywhere they have an internet connection.
                                            






Quick Deployment Environment (QDE)

                                                The Quick Deployment Environment (QDE) provides a single virtual machine appliance to be imported into your hypervisor-of-choice, which contains most of the various components of a Chocolatey organizational solution. Deploy recommended architecture in 2-3 hours.
                                            








Community




 Go Back
Community




Community Packages
Search the largest online registry of Windows packages. Chocolatey packages encapsulate everything required to manage a particular piece of software into one deployment artifact by wrapping installers, executables, zips, and scripts into a compiled package file.





Community Resources
Chocolatey on GitHub
Blog





Events
Find past and upcoming webinars, workshops, and conferences.








Learn




 Go Back
Learn




Install Chocolatey
Get step-by-step instructions on how to install Chocolatey.


Getting Started Course
New to Chocolatey? Learn the requirements and how to get Chocolatey up and running in no time!





Resource Library
Docs
Videos
Case Studies
Courses
Media Kit





Events
Find past and upcoming webinars, workshops, and conferences.


COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.


Support
Need help? Read our Support FAQ to find out the next steps.

Blog
Newsletter







Partners




 Go Back
Partners



Overview
Become a Partner




Technology Partners
Resellers







About




 Go Back
About




About Chocolatey
Chocolatey Software is focused on helping our community, customers, and partners with solutions that help fill the gaps that are often ignored. We offer a simple, pragmatic, and open approach to software management.





Careers
Contact







Install Now
Install Now












Videos





Featured Series





Success Stories





Case Studies





Docs





Blog










Documentation Table of Contents


















id:searchValue search by id only
tag:searchValue search by tags





Docs Home
Why Chocolatey?
Security

Features



Free


Create your own packages
Host packages internally
Integrates with everything
Package Shims
Custom Package Templates
Package Extensions




Paid


Self-Service / Background Mode (C4B)
Chocolatey Central Management (C4B)
Package Internalizer (C4B)
Package Builder (C4B)
Package Audit (C4B)
Branding Chocolatey Applications (C4B)
Runtime Malware Protection (Pro+)
Download CDN Cache (Pro+)
Package Reducer (Pro+)
Ubiquitous Install Directory Option (Pro+)
Package Throttle (Pro+)
Package Synchronizer (Pro+ Auto / C4B Sync Command)
Windows Service Management PowerShell Functions (C4B)





General


Release Notes
Licensed Release Notes
Troubleshooting
FAQs
Chocolatey.org Moderation
Chocolatey.org Packages Disclaimer
Software Vendor?


Usage


How to install
How to install licensed edition
Configuration / chocolatey.config
How to uninstall
Getting Started
Proxy Settings

Commands


Passing args to choco
Complete Reference
List / Search
Info
Install
Pin
Outdated
Upgrade
Uninstall
Config
Source / Sources
Feature
Download





Creating Packages


Create Packages
Quick Start

Commands


New
Pack
Apikey
Push




PowerShell References


Function and Variable Reference
Install-ChocolateyPackage
Install-ChocolateyZipPackage
Install-ChocolateyPowershellCommand
Install-ChocolateyVsixPackage
Get-ChocolateyWebFile
Install-ChocolateyInstallPackage



Automatic Packaging


How To's


Use Chocolatey w/Proxy Server
Change Download Cache Location aka Don't use TEMP for downloads
Install/Upgrade a Package w/out running install scripts
Request Package Fixes/Updates
Manually Recompile Packages, Embedding/Internalizing Remote Resources
Request Package
Maintain Packages for My Software
Become a Maintainer
Take Over Package Maintenance Exclusively
Parse Package Parameters
Mount Iso
Create Custom Package Templates
Extend Chocolatey With PowerShell Modules (extensions)
Deprecate a Package
Install licensed edition
Host Your Own Package Repository Server
Set up the Chocolatey.Server
Set up Chocolatey for internal/organizational use
Automate Package Internalizer (MSP/C4B)
C4B Quick Start Guide


Chocolatey GUI


Chocolatey GUI Overview
Chocolatey GUI Branding
Chocolatey GUI Known Issues


Quick Deployment Environment (QDE)


QDE Overview
QDE Setup
QDE Desktop ReadMe Files
QDE SSL/TLS Setup
QDE Firewall Changes
QDE Client Setup
QDE Internet Setup

QDE v1


QDE Setup v1
QDE Desktop ReadMe Files v1
QDE SSL/TLS Setup v1
QDE Firewall Changes v1
QDE Client Setup v1





Chocolatey Central Management (CCM)


Central Management Overview
Central Management Setup
Central Management Client Setup
Central Management Upgrade
Central Management Deployments


Use Cases


Development Environment
Host on MyGet


Learning Resources


Resources
Videos
Presentations


Additional Information


Legal
History









Install Command (choco install)
Installs a package or a list of packages (sometimes specified as a
packages.config). Some may prefer to use cinst as a shortcut for
choco install.
NOTE: 100% compatible with older chocolatey client (0.9.8.32 and below)
with options and switches. Add -y for previous behavior with no
prompt. In most cases you can still pass options and switches with one
dash (-). For more details, see how to pass arguments (choco -?).


Usage
Examples
Exit Codes
See It In Action
Packages.config
Alternative Sources

Ruby
WebPI
Cygwin
Python
Windows Features


Resources
Options and Switches


Usage
choco install <pkg|packages.config> [<pkg2> <pkgN>] [<options/switches>]
cinst <pkg|packages.config> [<pkg2> <pkgN>] [<options/switches>]

NOTE: all is a special package keyword that will allow you to install
all packages from a custom feed. Will not work with Chocolatey default
feed. THIS IS NOT YET REIMPLEMENTED.
NOTE: Any package name ending with .config is considered a
'packages.config' file. Please see https://bit.ly/packages_config
NOTE: Chocolatey Pro / Business builds on top of a great open source
experience with quite a few features that enhance the your use of the
community package repository (when using Pro), and really enhance the
Chocolatey experience all around. If you are an organization looking
for a better ROI, look no further than Business - automatic package
creation from installer files, automatic recompile support, runtime
malware protection, private CDN download cache, synchronize with
Programs and Features, etc - https://chocolatey.org/compare.
Examples
choco install sysinternals
choco install notepadplusplus googlechrome atom 7zip
choco install notepadplusplus --force --force-dependencies
choco install notepadplusplus googlechrome atom 7zip -dvfy
choco install git -y --params=""'/GitAndUnixToolsOnPath /NoAutoCrlf'""
choco install git -y --params=""'/GitAndUnixToolsOnPath /NoAutoCrlf'"" --install-args=""'/DIR=C:\git'""
# Params are package parameters, passed to the package
# Install args are installer arguments, appended to the silentArgs
#  in the package for the installer itself
choco install nodejs.install --version 0.10.35
choco install git -s ""'https://somewhere/out/there'""
choco install git -s ""'https://somewhere/protected'"" -u user -p pass

Choco can also install directly from a nuspec/nupkg file. This aids in
testing packages:
choco install <path/to/nuspec>
choco install <path/to/nupkg>

Install multiple versions of a package using -m (AllowMultiple versions)
choco install ruby --version 1.9.3.55100 -my
choco install ruby --version 2.0.0.59800 -my
choco install ruby --version 2.1.5 -my

What is -my? See option bundling in how to pass arguments
(choco -?).
NOTE: All of these will add to PATH variable. We'll be adding a special
option to not allow PATH changes. Until then you will need to manually
go modify Path to just one Ruby and then use something like uru
(https://bitbucket.org/jonforums/uru) or pik
(https://chocolatey.org/packages/pik) to switch between versions.
NOTE: See scripting in how to pass arguments (choco -?) for how to
write proper scripts and integrations.
Exit Codes
Exit codes that normally result from running this command.
Normal:

0: operation was successful, no issues detected
-1 or 1: an error has occurred

Package Exit Codes:

1641: success, reboot initiated
3010: success, reboot required
other (not listed): likely an error has occurred

In addition to normal exit codes, packages are allowed to exit
with their own codes when the feature 'usePackageExitCodes' is
turned on. Uninstall command has additional valid exit codes.
Available in v0.9.10+.
Reboot Exit Codes:

350: pending reboot detected, no action has occurred
1604: install suspended, incomplete

In addition to the above exit codes, you may also see reboot exit codes
when the feature 'exitOnRebootDetected' is turned on. It typically requires
the feature 'usePackageExitCodes' to also be turned on to work properly.
Available in v0.10.12+.
See It In Action
Chocolatey FOSS install showing tab completion and refreshenv (a way
to update environment variables without restarting the shell).

Chocolatey Professional showing private download cache and virus scan
protection.

Packages.config
Alternative to PackageName. This is a list of packages in an xml manifest for Chocolatey to install. This is like the packages.config that NuGet uses except it also adds other options and switches. This can also be the path to the packages.config file if it is not in the current working directory.
NOTE: The filename is only required to end in .config, the name is not required to be packages.config.
    <?xml version=""1.0"" encoding=""utf-8""?>
    <packages>
      <package id=""apackage"" />
      <package id=""anotherPackage"" version=""1.1"" />
      <package id=""chocolateytestpackage"" version=""0.1"" source=""somelocation"" />
      <package id=""alloptions"" version=""0.1.1""
               source=""https://somewhere/api/v2/"" installArguments=""""
               packageParameters="""" forceX86=""false"" allowMultipleVersions=""false""
               ignoreDependencies=""false""
               />
    </packages>

Alternative Sources
Available in 0.9.10+.
Ruby
This specifies the source is Ruby Gems and that we are installing a
gem. If you do not have ruby installed prior to running this command,
the command will install that first.
e.g. choco install compass -source ruby
WebPI
This specifies the source is Web PI (Web Platform Installer) and that
we are installing a WebPI product, such as IISExpress. If you do not
have the Web PI command line installed, it will install that first and
then the product requested.
e.g. choco install IISExpress --source webpi
Cygwin
This specifies the source is Cygwin and that we are installing a cygwin
package, such as bash. If you do not have Cygwin installed, it will
install that first and then the product requested.
e.g. choco install bash --source cygwin
Python
This specifies the source is Python and that we are installing a python
package, such as Sphinx. If you do not have easy_install and Python
installed, it will install those first and then the product requested.
e.g. choco install sphinx --source python
Windows Features
This specifies that the source is a Windows Feature and we should
install via the Deployment Image Servicing and Management tool (DISM)
on the local machine.
e.g. choco install IIS-WebServerRole --source windowsfeatures
Resources

How-To: A complete example of how you can use the PackageParameters argument
when creating a Chocolatey Package can be seen at
https://chocolatey.org/docs/how-to-parse-package-parameters-argument
One may want to override the default installation directory of a
piece of software. See
https://chocolatey.org/docs/getting-started#overriding-default-install-directory-or-other-advanced-install-concepts.

Options and Switches
NOTE: Options and switches apply to all items passed, so if you are
running a command like install that allows installing multiple
packages, and you use --version=1.0.0, it is going to look for and
try to install version 1.0.0 of every package passed. So please split
out multiple package calls when wanting to pass specific options.
Includes default options/switches (included below for completeness).



 -?, --help, -h
     Prints out the help menu.

 -d, --debug
     Debug - Show debug messaging.

 -v, --verbose
     Verbose - Show verbose messaging. Very verbose messaging, avoid using
       under normal circumstances.

     --trace
     Trace - Show trace messaging. Very, very verbose trace messaging. Avoid
       except when needing super low-level .NET Framework debugging. Available
       in 0.10.4+.

     --nocolor, --no-color
     No Color - Do not show colorization in logging output. This overrides
       the feature 'logWithoutColor', set to 'False'. Available in 0.10.9+.

     --acceptlicense, --accept-license
     AcceptLicense - Accept license dialogs automatically. Reserved for
       future use.

 -y, --yes, --confirm
     Confirm all prompts - Chooses affirmative answer instead of prompting.
       Implies --accept-license

 -f, --force
     Force - force the behavior. Do not use force during normal operation -
       it subverts some of the smart behavior for commands.

     --noop, --whatif, --what-if
     NoOp / WhatIf - Don't actually do anything.

 -r, --limitoutput, --limit-output
     LimitOutput - Limit the output to essential information

     --timeout, --execution-timeout=VALUE
     CommandExecutionTimeout (in seconds) - The time to allow a command to
       finish before timing out. Overrides the default execution timeout in the
       configuration of 2700 seconds. '0' for infinite starting in 0.10.4.

 -c, --cache, --cachelocation, --cache-location=VALUE
     CacheLocation - Location for download cache, defaults to %TEMP% or value
       in chocolatey.config file.

     --allowunofficial, --allow-unofficial, --allowunofficialbuild, --allow-unofficial-build
     AllowUnofficialBuild - When not using the official build you must set
       this flag for choco to continue.

     --failstderr, --failonstderr, --fail-on-stderr, --fail-on-standard-error, --fail-on-error-output
     FailOnStandardError - Fail on standard error output (stderr), typically
       received when running external commands during install providers. This
       overrides the feature failOnStandardError.

     --use-system-powershell
     UseSystemPowerShell - Execute PowerShell using an external process
       instead of the built-in PowerShell host. Should only be used when
       internal host is failing. Available in 0.9.10+.

     --no-progress
     Do Not Show Progress - Do not show download progress percentages.
       Available in 0.10.4+.

     --proxy=VALUE
     Proxy Location - Explicit proxy location. Overrides the default proxy
       location of ''. Available for config settings in 0.9.9.9+, this CLI
       option available in 0.10.4+.

     --proxy-user=VALUE
     Proxy User Name - Explicit proxy user (optional). Requires explicity
       proxy (`--proxy` or config setting). Overrides the default proxy user of
       '123'. Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-password=VALUE
     Proxy Password - Explicit proxy password (optional) to be used with
       username. Requires explicity proxy (`--proxy` or config setting) and
       user name.  Overrides the default proxy password (encrypted in settings
       if set). Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-bypass-list=VALUE
     ProxyBypassList - Comma separated list of regex locations to bypass on
       proxy. Requires explicity proxy (`--proxy` or config setting). Overrides
       the default proxy bypass list of ''. Available in 0.10.4+.

     --proxy-bypass-on-local
     Proxy Bypass On Local - Bypass proxy for local connections. Requires
       explicity proxy (`--proxy` or config setting). Overrides the default
       proxy bypass on local setting of 'True'. Available in 0.10.4+.

     --log-file=VALUE
     Log File to output to in addition to regular loggers. Available in 0.1-
       0.8+.

 -s, --source=VALUE
     Source - The source to find the package(s) to install. Special sources
       include: ruby, webpi, cygwin, windowsfeatures, and python. To specify
       more than one source, pass it with a semi-colon separating the values (-
       e.g. ""'source1;source2'""). Defaults to default feeds.

     --version=VALUE
     Version - A specific version to install. Defaults to unspecified.

     --pre, --prerelease
     Prerelease - Include Prereleases? Defaults to false.

     --x86, --forcex86
     ForceX86 - Force x86 (32bit) installation on 64 bit systems. Defaults to
       false.

     --ia, --installargs, --installarguments, --install-arguments=VALUE
     InstallArguments - Install Arguments to pass to the native installer in
       the package. Defaults to unspecified.

 -o, --override, --overrideargs, --overridearguments, --override-arguments
     OverrideArguments - Should install arguments be used exclusively without
       appending to current package passed arguments? Defaults to false.

     --notsilent, --not-silent
     NotSilent - Do not install this silently. Defaults to false.

     --params, --parameters, --pkgparameters, --packageparameters, --package-parameters=VALUE
     PackageParameters - Parameters to pass to the package. Defaults to
       unspecified.

     --argsglobal, --args-global, --installargsglobal, --install-args-global, --applyargstodependencies, --apply-args-to-dependencies, --apply-install-arguments-to-dependencies
     Apply Install Arguments To Dependencies  - Should install arguments be
       applied to dependent packages? Defaults to false.

     --paramsglobal, --params-global, --packageparametersglobal, --package-parameters-global, --applyparamstodependencies, --apply-params-to-dependencies, --apply-package-parameters-to-dependencies
     Apply Package Parameters To Dependencies  - Should package parameters be
       applied to dependent packages? Defaults to false.

     --allowdowngrade, --allow-downgrade
     AllowDowngrade - Should an attempt at downgrading be allowed? Defaults
       to false.

 -m, --sxs, --sidebyside, --side-by-side, --allowmultiple, --allow-multiple, --allowmultipleversions, --allow-multiple-versions
     AllowMultipleVersions - Should multiple versions of a package be
       installed? Defaults to false.

 -i, --ignoredependencies, --ignore-dependencies
     IgnoreDependencies - Ignore dependencies when installing package(s).
       Defaults to false.

 -x, --forcedependencies, --force-dependencies
     ForceDependencies - Force dependencies to be reinstalled when force
       installing package(s). Must be used in conjunction with --force.
       Defaults to false.

 -n, --skippowershell, --skip-powershell, --skipscripts, --skip-scripts, --skip-automation-scripts
     Skip Powershell - Do not run chocolateyInstall.ps1. Defaults to false.

 -u, --user=VALUE
     User - used with authenticated feeds. Defaults to empty.

 -p, --password=VALUE
     Password - the user's password to the source. Defaults to empty.

     --cert=VALUE
     Client certificate - PFX pathname for an x509 authenticated feeds.
       Defaults to empty. Available in 0.9.10+.

     --cp, --certpassword=VALUE
     Certificate Password - the client certificate's password to the source.
       Defaults to empty. Available in 0.9.10+.

     --ignorechecksum, --ignore-checksum, --ignorechecksums, --ignore-checksums
     IgnoreChecksums - Ignore checksums provided by the package. Overrides
       the default feature 'checksumFiles' set to 'True'. Available in 0.9.9.9+.

     --allowemptychecksum, --allowemptychecksums, --allow-empty-checksums
     Allow Empty Checksums - Allow packages to have empty/missing checksums
       for downloaded resources from non-secure locations (HTTP, FTP). Use this
       switch is not recommended if using sources that download resources from
       the internet. Overrides the default feature 'allowEmptyChecksums' set to
       'False'. Available in 0.10.0+.

     --allowemptychecksumsecure, --allowemptychecksumssecure, --allow-empty-checksums-secure
     Allow Empty Checksums Secure - Allow packages to have empty checksums
       for downloaded resources from secure locations (HTTPS). Overrides the
       default feature 'allowEmptyChecksumsSecure' set to 'True'. Available in
       0.10.0+.

     --requirechecksum, --requirechecksums, --require-checksums
     Require Checksums - Requires packages to have checksums for downloaded
       resources (both non-secure and secure). Overrides the default feature
       'allowEmptyChecksums' set to 'False' and 'allowEmptyChecksumsSecure' set
       to 'True'. Available in 0.10.0+.

     --checksum, --downloadchecksum, --download-checksum=VALUE
     Download Checksum - a user provided checksum for downloaded resources
       for the package. Overrides the package checksum (if it has one).
       Defaults to empty. Available in 0.10.0+.

     --checksum64, --checksumx64, --downloadchecksumx64, --download-checksum-x64=VALUE
     Download Checksum 64bit - a user provided checksum for 64bit downloaded
       resources for the package. Overrides the package 64-bit checksum (if it
       has one). Defaults to same as Download Checksum. Available in 0.10.0+.

     --checksumtype, --checksum-type, --downloadchecksumtype, --download-checksum-type=VALUE
     Download Checksum Type - a user provided checksum type. Overrides the
       package checksum type (if it has one). Used in conjunction with Download
       Checksum. Available values are 'md5', 'sha1', 'sha256' or 'sha512'.
       Defaults to 'md5'. Available in 0.10.0+.

     --checksumtype64, --checksumtypex64, --checksum-type-x64, --downloadchecksumtypex64, --download-checksum-type-x64=VALUE
     Download Checksum Type 64bit - a user provided checksum for 64bit
       downloaded resources for the package. Overrides the package 64-bit
       checksum (if it has one). Used in conjunction with Download Checksum
       64bit. Available values are 'md5', 'sha1', 'sha256' or 'sha512'.
       Defaults to same as Download Checksum Type. Available in 0.10.0+.

     --ignorepackagecodes, --ignorepackageexitcodes, --ignore-package-codes, --ignore-package-exit-codes
     IgnorePackageExitCodes - Exit with a 0 for success and 1 for non-succes-
       s, no matter what package scripts provide for exit codes. Overrides the
       default feature 'usePackageExitCodes' set to 'True'. Available in 0.-
       9.10+.

     --usepackagecodes, --usepackageexitcodes, --use-package-codes, --use-package-exit-codes
     UsePackageExitCodes - Package scripts can provide exit codes. Use those
       for choco's exit code when non-zero (this value can come from a
       dependency package). Chocolatey defines valid exit codes as 0, 1605,
       1614, 1641, 3010.  Overrides the default feature 'usePackageExitCodes'
       set to 'True'. Available in 0.9.10+.

     --stoponfirstfailure, --stop-on-first-failure, --stop-on-first-package-failure
     Stop On First Package Failure - stop running install, upgrade or
       uninstall on first package failure instead of continuing with others.
       Overrides the default feature 'stopOnFirstPackageFailure' set to 'False-
       '. Available in 0.10.4+.

     --exitwhenrebootdetected, --exit-when-reboot-detected
     Exit When Reboot Detected - Stop running install, upgrade, or uninstall
       when a reboot request is detected. Requires 'usePackageExitCodes'
       feature to be turned on. Will exit with either 350 or 1604.  Overrides
       the default feature 'exitOnRebootDetected' set to 'False'.  Available in
       0.10.12+.

     --ignoredetectedreboot, --ignore-detected-reboot
     Ignore Detected Reboot - Ignore any detected reboots if found. Overrides
       the default feature 'exitOnRebootDetected' set to 'False'.  Available in
       0.10.12+.

     --sdc, --skipdownloadcache, --skip-download-cache
     Skip Download Cache - Use the original download even if a private CDN
       cache is available for a package. Overrides the default feature
       'downloadCache' set to 'True'. Available in 0.9.10+. [Licensed editions](https://chocolatey.org/compare)
       only. See https://chocolatey.org/docs/features-private-cdn

     --dc, --downloadcache, --download-cache, --use-download-cache
     Use Download Cache - Use private CDN cache if available for a package.
       Overrides the default feature 'downloadCache' set to 'True'. Available
       in 0.9.10+. [Licensed editions](https://chocolatey.org/compare) only. See https://chocolate-
       y.org/docs/features-private-cdn

     --svc, --skipvirus, --skip-virus, --skipviruscheck, --skip-virus-check
     Skip Virus Check - Skip the virus check for downloaded files on this ru-
       n. Overrides the default feature 'virusCheck' set to 'True'. Available
       in 0.9.10+. [Licensed editions](https://chocolatey.org/compare) only. See https://chocolate-
       y.org/docs/features-virus-check

     --virus, --viruscheck, --virus-check
     Virus Check - check downloaded files for viruses. Overrides the default
       feature 'virusCheck' set to 'True'. Available in 0.9.10+. Licensed
       editions only. See https://chocolatey.org/docs/features-virus-check

     --viruspositivesmin, --virus-positives-minimum=VALUE
     Virus Check Minimum Scan Result Positives - the minimum number of scan
       result positives required to flag a package. Used when virusScannerType
       is VirusTotal. Overrides the default configuration value
       'virusCheckMinimumPositives' set to '5'. Available in 0.9.10+. Licensed
       editions only. See https://chocolatey.org/docs/features-virus-check

     --install-arguments-sensitive=VALUE
     InstallArgumentsSensitive - Install Arguments to pass to the native
       installer in the package that are sensitive and you do not want logged.
       Defaults to unspecified. Available in 0.10.1+. [Licensed editions](https://chocolatey.org/compare) only.

     --package-parameters-sensitive=VALUE
     PackageParametersSensitive - Package Parameters to pass the package that
       are sensitive and you do not want logged. Defaults to unspecified.
       Available in 0.10.1+. [Licensed editions](https://chocolatey.org/compare) only.

     --dir, --directory, --installdir, --installdirectory, --install-dir, --install-directory=VALUE
     Install Directory Override - Override the default installation director-
       y. Chocolatey will automatically determine the type of installer and
       pass the appropriate arguments to override the install directory. The
       package must use Chocolatey install helpers and be installing an
       installer for software. Available in 0.9.10+. [Licensed editions](https://chocolatey.org/compare) only.
       See https://chocolatey.org/docs/features-install-directory-override

     --bps, --maxdownloadrate, --max-download-rate, --maxdownloadbitspersecond, --max-download-bits-per-second, --maximumdownloadbitspersecond, --maximum-download-bits-per-second=VALUE
     Maximum Download Rate Bits Per Second - The maximum download rate in
       bits per second. '0' or empty means no maximum. A number means that will
       be the maximum download rate in bps. Defaults to config setting of '0'.
       Available in [licensed editions](https://chocolatey.org/compare) v1.10+ only. See https://chocolate-
       y.org/docs/features-package-throttle

     --reduce, --reduce-package-size, --deflate, --deflate-package-size
     Reducer Installed Package Size (Package Reducer) - Reduce size of the
       nupkg file to very small and remove extracted archives and installers.
       Overrides the default feature 'reduceInstalledPackageSpaceUsage' set to
       'True'. [Licensed editions](https://chocolatey.org/compare) only (version 1.12.0+). See https://chocolate-
       y.org/docs/features-package-reducer

     --no-reduce, --no-reduce-package-size, --no-deflate, --no-deflate-package-size
     Do Not Reduce Installed Package Size - Leave the nupkg and files alone
       in the package. Overrides the default feature
       'reduceInstalledPackageSpaceUsage' set to 'True'. [Licensed editions](https://chocolatey.org/compare) only
       (version 1.12.0+). See https://chocolatey.org/docs/features-package-
       reducer

     --reduce-nupkg-only, --deflate-nupkg-only
     Reduce Only Nupkg File Size - reduce only the size of nupkg file when
       using Package Reducer. Overrides the default feature
       'reduceOnlyNupkgSize' set to 'False'. [Licensed editions](https://chocolatey.org/compare) only (version -
       1.12.0+). See https://chocolatey.org/docs/features-package-reducer


Command Reference
NOTE: This documentation has been automatically generated from choco install -h.












Overview

About
Getting Started Guide
Why Chocolatey
How Chocolatey Works
Security
Privacy Policy
Kickstarter
Partner
Customer Stories




Product

Solution: Self-Service Anywhere
Solution: Quick Deployment Environment (QDE)
Chocolatey for Business
Pro Edition
Open Source
C4B Trial
Pricing
Support
Community Packages
Events




Learn

Resource Library
Events
COVID-19 Resources
Docs
Videos
Case Studies
Courses
Blog 
Media Kit
Sitemap




Connect

Contact Us
Support
Newsletter
Shop
Report a Bug
Status
Careers



Follow Chocolatey Software on Twitter



Follow Chocolatey Software on Facebook



Find Chocolatey Software on GitHub



Subscribe to Chocolatey Software on YouTube









© 2020 Chocolatey Software, Inc.
Deployed from 16d5ee0bdb. You are on web.3. Page generated 25 Sep 2020 08:27:26 +00:00.





Chocolatey.org uses cookies to enhance the user experience of the site.

        I accept
    

        I accept
    









",,"# choco install

> Install one or more packages with Chocolatey.
> More information: <https://chocolatey.org/docs/commands-install>.

- Install one or more space-separated packages:

`choco install {{package(s)}}`

- Install packages from a custom configuration file:

`choco install {{path/to/packages.config}}`

- Install a specific ""nuspec"" or ""nupkg"" file:

`choco install {{path/to/file}}`

- Install a specific version of a package:

`choco install {{package}} --version {{version}}`

- Allow installing multiple versions of a package:

`choco install {{package}} --allow-multiple`

- Confirm all prompts automatically:

`choco install {{package}} --yes`

- Specify a custom source to receive packages from:

`choco install {{package}} --source {{source_url|alias}}`

- Provide a username and password for authentication:

`choco install {{package}} --user {{username}} --password {{password}}`
"
ver,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/ver,"





































ver | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















ver


10/16/2017

2 minutes to read








+1





In this article


Displays the operating system version number.
This command is supported in the Windows Command prompt (Cmd.exe), but not in PowerShell.
Syntax
ver

Parameters



Parameter
Description




/?
Displays help at the command prompt.



Examples
To obtain the version number of the operating system from the Command shell (cmd.exe), type:
ver

The ver command does not work in PowerShell. To obtain the OS version from PowerShell, type:
$PSVersionTable.BuildVersion

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# ver

> Display the current Windows or MS-DOS version number.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/ver>.

- Display the current version number:

`ver`
"
tasklist,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/tasklist,"





































tasklist | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















tasklist


10/16/2017

2 minutes to read








+1





In this article


Displays a list of currently running processes on the local computer or on a remote computer. Tasklist replaces the tlist tool.
Syntax
tasklist [/s <Computer> [/u [<Domain>\]<UserName> [/p <Password>]]] [{/m <Module> | /svc | /v}] [/fo {table | list | csv}] [/nh] [/fi <Filter> [/fi <Filter> [ ... ]]]

Parameters



Parameter
Description




/s <Computer>
Specifies the name or IP address of a remote computer (do not use backslashes). The default is the local computer.


/u [<Domain>\]<UserName>
Runs the command with the account permissions of the user who is specified by UserName or Domain*UserName. **/u* can be specified only if /s is specified. The default is the permissions of the user who is currently logged on to the computer that is issuing the command.


/p <Password>
Specifies the password of the user account that is specified in the /u parameter.


/m <Module>
Lists all tasks with DLL modules loaded that match the given pattern name. If the module name is not specified, this option displays all modules loaded by each task.


/svc
Lists all the service information for each process without truncation. Valid when the /fo parameter is set to table.


/v
Displays verbose task information in the output. For complete verbose output without truncation, use /v and /svc together.


/fo {table | list | csv}
Specifies the format to use for the output. Valid values are table, list, and csv. The default format for output is table.


/nh
Suppresses column headers in the output. Valid when the /fo parameter is set to table or csv.


/fi <Filter>
Specifies the types of processes to include in or exclude from the query. See the following table for valid filter names, operators, and values.


/?
Displays help at the command prompt.



Filter names, operators, and values



Filter Name
Valid Operators
Valid Values




STATUS
eq, ne
RUNNING


IMAGENAME
eq, ne
Image name


PID
eq, ne, gt, lt, ge, le
PID value


SESSION
eq, ne, gt, lt, ge, le
Session number


SESSIONNAME
eq, ne
Session name


CPUTIME
eq, ne, gt, lt, ge, le
CPU time in the format HH:MM:SS, where MM and SS are between 0 and 59 and HH is any unsigned number


MEMUSAGE
eq, ne, gt, lt, ge, le
Memory usage in KB


USERNAME
eq, ne
Any valid user name


SERVICES
eq, ne
Service name


WINDOWTITLE
eq, ne
Window title


MODULES
eq, ne
DLL name



Remarks
The WINDOWTITLE and STATUS filters are not supported when a remote system is specified.
Examples
To list all tasks with a process ID greater than 1000, and display them in CSV format, type:
tasklist /v /fi ""PID gt 1000"" /fo csv

To list the system processes that are currently running, type:
tasklist /fi ""USERNAME ne NT AUTHORITY\SYSTEM"" /fi ""STATUS eq running""

To list detailed information for all processes that are currently running, type:
tasklist /v /fi ""STATUS eq running""

To list all the service information for processes on the remote computer ""Srvmain"" that have a DLL name beginning with ""ntdll,"" type:
tasklist /s srvmain /svc /fi ""MODULES eq ntdll*""

To list the processes on the remote computer ""Srvmain,"" using the credentials of your currently logged-on user account, type:
tasklist /s srvmain

To list the processes on the remote computer ""Srvmain,"" using the credentials of the user account Hiropln, type:
tasklist /s srvmain /u maindom\hiropln /p p@ssW23

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# tasklist

> Display a list of currently running processes on a local or remote machine.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/tasklist>.

- Display currently running processes:

`tasklist`

- Display running processes in a specified output format:

`tasklist /fo {{table|list|csv}}`

- Display running processes using the specified `.exe` or `.dll` file name:

`tasklist /m {{module_pattern}}`

- Display processes running on a remote machine:

`tasklist /s {{remote_name}} /u {{username}} /p {{password}}`

- Display services using each process:

`tasklist /svc`
"
robocopy,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/robocopy,"





































robocopy | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















robocopy


06/07/2020

7 minutes to read








+6





In this article


Copies file data from one location to another.
Syntax
robocopy <source> <destination> [<file>[ ...]] [<options>]

For example, to copy a file named yearly-report.mov from c:\reports to a file share \marketing\videos while enabling multi-threading for higher performance (with the /mt parameter) and the ability to restart the transfer in case it's interrupted (with the /z parameter), type:
robocopy c:\reports '\\marketing\videos' yearly-report.mov /mt /z

Parameters



Parameter
Description




<source>
Specifies the path to the source directory.


<destination>
Specifies the path to the destination directory.


<file>
Specifies the file or files to be copied. Wildcard characters (* or ?) are supported. If you don't specify this parameter, *. is used as the default value.


<options>
Specifies the options to use with the robocopy command, including copy, file, retry, logging, and job options.



Copy options



Option
Description




/s
Copies subdirectories. This option automatically excludes empty directories.


/e
Copies subdirectories. This option automatically includes empty directories.


/lev:<n>
Copies only the top n levels of the source directory tree.


/z
Copies files in restartable mode.


/b
Copies files in Backup mode.


/zb
Uses restartable mode. If access is denied, this option uses Backup mode.


/efsraw
Copies all encrypted files in EFS RAW mode.


/copy:<copyflags>
Specifies which file properties to copy. The valid values for this option are:D - DataA - AttributesT - Time stampsS - NTFS access control list (ACL)O - Owner informationU - Auditing informationThe default value for this option is DAT (data, attributes, and time stamps).


/dcopy:<copyflags>
Specifies what to copy in directories. The valid values for this option are:D - DataA - AttributesT - Time stampsThe default value for this option is DA (data and attributes).


/sec
Copies files with security (equivalent to /copy:DATS).


/copyall
Copies all file information (equivalent to /copy:DATSOU).


/nocopy
Copies no file information (useful with /purge).


/secfix
Fixes file security on all files, even skipped ones.


/timfix
Fixes file times on all files, even skipped ones.


/purge
Deletes destination files and directories that no longer exist in the source. Using this option with the /e option and a destination directory, allows the destination directory security settings to not be overwritten.


/mir
Mirrors a directory tree (equivalent to /e plus /purge). Using this option with the /e option and a destination directory, overwrites the destination directory security settings.


/mov
Moves files, and deletes them from the source after they are copied.


/move
Moves files and directories, and deletes them from the source after they are copied.


/a+:[RASHCNET]
Adds the specified attributes to copied files.  The valid values for this option are: R - Read onlyA - ArchiveS - SystemH - HiddenC - CompressedN - Not content indexedE - EncryptedT - Temporary


/a-:[RASHCNET]
Removes the specified attributes from copied files. The valid values for this option are: R - Read onlyA - ArchiveS - SystemH - HiddenC - CompressedN - Not content indexedE - EncryptedT - Temporary


/create
Creates a directory tree and zero-length files only.


/fat
Creates destination files by using 8.3 character-length FAT file names only.


/256
Turns off support for paths longer than 256 characters.


/mon:<n>
Monitors the source, and runs again when more than n changes are detected.


/mot:<m>
Monitors the source, and runs again in m minutes, if changes are detected.


/MT[:n]
Creates multi-threaded copies with n threads. n must be an integer between 1 and 128. The default value for n is 8. For better performance, redirect your output using /log option.The /mt parameter can't be used with the /ipg and /efsraw parameters.


/rh:hhmm-hhmm
Specifies run times when new copies may be started.


/pf
Checks run times on a per-file (not per-pass) basis.


/ipg:n
Specifies the inter-packet gap to free bandwidth on slow lines.


/sl
Don't follow symbolic links and instead create a copy of the link.




Important
When using the /secfix copy option, specify the type of security information you want to copy, using one of these additional copy options:

/copyall
/copy:o
/copy:s
/copy:u
/sec


File selection options



Option
Description




/a
Copies only files for which the Archive attribute is set.


/m
Copies only files for which the Archive attribute is set, and resets the Archive attribute.


/ia:[RASHCNETO]
Includes only files for which any of the specified attributes are set.  The valid values for this option are: R - Read onlyA - ArchiveS - SystemH - HiddenC - CompressedN - Not content indexedE - EncryptedT - TemporaryO - Offline


/xa:[RASHCNETO]
Excludes files for which any of the specified attributes are set. The valid values for this option are: R - Read onlyA - ArchiveS - SystemH - HiddenC - CompressedN - Not content indexedE - EncryptedT - TemporaryO - Offline


/xf <filename>[ ...]
Excludes files that match the specified names or paths. Wildcard characters (* and ?) are supported.


/xd <directory>[ ...]
Excludes directories that match the specified names and paths.


/xc
Excludes changed files.


/xn
Excludes newer files.


/xo
Excludes older files.


/xx
Excludes extra files and directories.


/xl
Excludes ""lonely"" files and directories.


/is
Includes the same files.


/it
Includes modified files.


/max:<n>
Specifies the maximum file size (to exclude files bigger than n bytes).


/min:<n>
Specifies the minimum file size (to exclude files smaller than n bytes).


/maxage:<n>
Specifies the maximum file age (to exclude files older than n days or date).


/minage:<n>
Specifies the minimum file age (exclude files newer than n days or date).


/maxlad:<n>
Specifies the maximum last access date (excludes files unused since n).


/minlad:<n>
Specifies the minimum last access date (excludes files used since n) If n is less than 1900, n specifies the number of days. Otherwise, n specifies a date in the format YYYYMMDD.


/xj
Excludes junction points, which are normally included by default.


/fft
Assumes FAT file times (two-second precision).


/dst
Compensates for one-hour DST time differences.


/xjd
Excludes junction points for directories.


/xjf
Excludes junction points for files.



Retry options



Option
Description




/r:<n>
Specifies the number of retries on failed copies. The default value of n is 1,000,000 (one million retries).


/w:<n>
Specifies the wait time between retries, in seconds. The default value of n is 30 (wait time 30 seconds).


/reg
Saves the values specified in the /r and /w options as default settings in the registry.


/tbd
Specifies that the system will wait for share names to be defined (retry error 67).



Logging options



Option
Description




/l
Specifies that files are to be listed only (and not copied, deleted, or time stamped).


/x
Reports all extra files, not just those that are selected.


/v
Produces verbose output, and shows all skipped files.


/ts
Includes source file time stamps in the output.


/fp
Includes the full path names of the files in the output.


/bytes
Prints sizes, as bytes.


/ns
Specifies that file sizes are not to be logged.


/nc
Specifies that file classes are not to be logged.


/nfl
Specifies that file names are not to be logged.


/ndl
Specifies that directory names are not to be logged.


/np
Specifies that the progress of the copying operation (the number of files or directories copied so far) will not be displayed.


/eta
Shows the estimated time of arrival (ETA) of the copied files.


/log:<logfile>
Writes the status output to the log file (overwrites the existing log file).


/log+:<logfile>
Writes the status output to the log file (appends the output to the existing log file).


/unicode
Displays the status output as Unicode text.


/unilog:<logfile>
Writes the status output to the log file as Unicode text (overwrites the existing log file).


/unilog+:<logfile>
Writes the status output to the log file as Unicode text (appends the output to the existing log file).


/tee
Writes the status output to the console window, as well as to the log file.


/njh
Specifies that there is no job header.


/njs
Specifies that there is no job summary.



Job options



Option
Description




/job:<jobname>
Specifies that parameters are to be derived from the named job file.


/save:<jobname>
Specifies that parameters are to be saved to the named job file.


/quit
Quits after processing command line (to view parameters).


/nosd
Indicates that no source directory is specified.


/nodd
Indicates that no destination directory is specified.


/if
Includes the specified files.



Exit (return) codes



Value
Description




0
No files were copied. No failure was encountered. No files were mismatched. The files already exist in the destination directory; therefore, the copy operation was skipped.


1
All files were copied successfully.


2
There are some additional files in the destination directory that are not present in the source directory. No files were copied.


3
Some files were copied. Additional files were present. No failure was encountered.


5
Some files were copied. Some files were mismatched. No failure was encountered.


6
Additional files and mismatched files exist. No files were copied and no failures were encountered. This means that the files already exist in the destination directory.


7
Files were copied, a file mismatch was present, and additional files were present.


8
Several files did not copy.




Note
Any value greater than 8 indicates that there was at least one failure during the copy operation.

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# robocopy

> Robust File and Folder Copy.
> By default files will only be copied if the source and destination have different time stamps or different file sizes.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/robocopy>.

- Copy all .jpg and .bmp files from one directory to another:

`robocopy {{path/to/source}} {{path/to/destination}} {{*.jpg}} {{*.bmp}}`

- Copy all files and subdirectories, including empty ones:

`robocopy {{path/to/source}} {{path/to/destination}} /E`

- Mirror/Sync a directory, deleting anything not in source and include all attributes and permissions:

`robocopy {{path/to/source}} {{path/to/destination}} /MIR /COPYALL`

- Copy all files and subdirectories, excluding source files that are older than destination files:

`robocopy {{path/to/source}} {{path/to/destination}} /E /XO`

- List all files 50 MBytes or larger in size instead of copying them:

`robocopy {{path/to/source}} {{path/to/destination}} /MIN:52428800 /L`

- Allow resuming if network connection is lost and limit retries to 5 and wait time to 15 sec:

`robocopy {{path/to/source}} {{path/to/destination}} /Z /R:5 /W:15`

- Display detailed usage information:

`robocopy /?`
"
choco-list,https://chocolatey.org/docs/commands-list,"




Chocolatey Software | Commands List






































Here's how we're responding to COVID-19 plus resources to help

×













Resources
Watch videos, read documentation, and hear Chocolatey success stories from companies you trust.
View Resources






Events
Find past and upcoming webinars, workshops, and conferences. New events have recently been added!
View Events






Courses
Step-by-step guides for all things Chocolatey! Earn badges as you learn through interactive digital courses.
View Courses











Tuesday, 22 September 20203 PM BST/GMT+1 / 4 PM CEST / 9 AM Central / 10 AM Eastern

            Standardising tool sets across different Teams is not always easy... especially when different Teams have traditionally used different approaches and methodologies.
            In this webinar we will unpack the advantages of a more standard, consistent approach with Puppet & Chocolatey.
        
Register Now






Webinar Replay fromTuesday, 23 June 2020
Chocolatey Central Management now includes the premiere feature of managing endpoints through a Chocolatey-centered solution aka Deployments. We are excited to share what Deployments is all about!
Learn More
Watch Now



COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.
Find Resources






Chocolatey for Business Feature Video Series

            In this video series, come take a tour of the many features available in our Chocolatey for Business offering.
            Many organizations choose Chocolatey for Business when they want to scale out their solution across thousands of nodes, deploy rapidly and reliably every time,
            mitigate risks with a greatly-simplified patching workflow, and access a Support Team that will guide you on your automation journey.
        
Watch the Series

































id:searchValue search by id only
tag:searchValue search by tags













Overview




 Go Back
Overview




Why Chocolatey?
Chocolatey is a software management solution unlike anything else you've ever experienced on Windows. Chocolatey brings the concepts of true package management to allow you to version things, manage dependencies and installation order, better inventory management, and other features.

How Chocolatey Works




Use Cases
Server
Desktop
Cloud / Containers
Integrations




Customer Stories
Puppet
Yelp
CME Group







Product




 Go Back
Product




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.


Pro Edition
Pro is a personal, named license that grants having licensed versions of Chocolatey on up to 8 machines and provides the ultimate Chocolatey experience!


Open Source
Chocolatey has the largest online registry of Windows packages. Learn how Open Source Chocolatey can support your next project.






Compare Editions
Learn the difference between the Chocolatey Editions and what will fit your needs the best.

Pricing
Try Chocolatey for Business Free

Purchase
I'm ready to get started now!

Support





Events
Find past and upcoming webinars, workshops, and conferences.








Solutions




 Go Back
Solutions




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.






Self-Service Anywhere

                                                Chocolatey provides a unique approach to managing your end-user software (desktops / laptops) and can be combined with your existing solutions.
                                                Chocolatey for Business (C4B) enables better security, enhanced visibility with centralized reporting, and a self-service GUI. Self-Service Anywhere allows non-administrators to easily access and manage IT approved software from the office, from home, or anywhere they have an internet connection.
                                            






Quick Deployment Environment (QDE)

                                                The Quick Deployment Environment (QDE) provides a single virtual machine appliance to be imported into your hypervisor-of-choice, which contains most of the various components of a Chocolatey organizational solution. Deploy recommended architecture in 2-3 hours.
                                            








Community




 Go Back
Community




Community Packages
Search the largest online registry of Windows packages. Chocolatey packages encapsulate everything required to manage a particular piece of software into one deployment artifact by wrapping installers, executables, zips, and scripts into a compiled package file.





Community Resources
Chocolatey on GitHub
Blog





Events
Find past and upcoming webinars, workshops, and conferences.








Learn




 Go Back
Learn




Install Chocolatey
Get step-by-step instructions on how to install Chocolatey.


Getting Started Course
New to Chocolatey? Learn the requirements and how to get Chocolatey up and running in no time!





Resource Library
Docs
Videos
Case Studies
Courses
Media Kit





Events
Find past and upcoming webinars, workshops, and conferences.


COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.


Support
Need help? Read our Support FAQ to find out the next steps.

Blog
Newsletter







Partners




 Go Back
Partners



Overview
Become a Partner




Technology Partners
Resellers







About




 Go Back
About




About Chocolatey
Chocolatey Software is focused on helping our community, customers, and partners with solutions that help fill the gaps that are often ignored. We offer a simple, pragmatic, and open approach to software management.





Careers
Contact







Install Now
Install Now












Videos





Featured Series





Success Stories





Case Studies





Docs





Blog










Documentation Table of Contents


















id:searchValue search by id only
tag:searchValue search by tags





Docs Home
Why Chocolatey?
Security

Features



Free


Create your own packages
Host packages internally
Integrates with everything
Package Shims
Custom Package Templates
Package Extensions




Paid


Self-Service / Background Mode (C4B)
Chocolatey Central Management (C4B)
Package Internalizer (C4B)
Package Builder (C4B)
Package Audit (C4B)
Branding Chocolatey Applications (C4B)
Runtime Malware Protection (Pro+)
Download CDN Cache (Pro+)
Package Reducer (Pro+)
Ubiquitous Install Directory Option (Pro+)
Package Throttle (Pro+)
Package Synchronizer (Pro+ Auto / C4B Sync Command)
Windows Service Management PowerShell Functions (C4B)





General


Release Notes
Licensed Release Notes
Troubleshooting
FAQs
Chocolatey.org Moderation
Chocolatey.org Packages Disclaimer
Software Vendor?


Usage


How to install
How to install licensed edition
Configuration / chocolatey.config
How to uninstall
Getting Started
Proxy Settings

Commands


Passing args to choco
Complete Reference
List / Search
Info
Install
Pin
Outdated
Upgrade
Uninstall
Config
Source / Sources
Feature
Download





Creating Packages


Create Packages
Quick Start

Commands


New
Pack
Apikey
Push




PowerShell References


Function and Variable Reference
Install-ChocolateyPackage
Install-ChocolateyZipPackage
Install-ChocolateyPowershellCommand
Install-ChocolateyVsixPackage
Get-ChocolateyWebFile
Install-ChocolateyInstallPackage



Automatic Packaging


How To's


Use Chocolatey w/Proxy Server
Change Download Cache Location aka Don't use TEMP for downloads
Install/Upgrade a Package w/out running install scripts
Request Package Fixes/Updates
Manually Recompile Packages, Embedding/Internalizing Remote Resources
Request Package
Maintain Packages for My Software
Become a Maintainer
Take Over Package Maintenance Exclusively
Parse Package Parameters
Mount Iso
Create Custom Package Templates
Extend Chocolatey With PowerShell Modules (extensions)
Deprecate a Package
Install licensed edition
Host Your Own Package Repository Server
Set up the Chocolatey.Server
Set up Chocolatey for internal/organizational use
Automate Package Internalizer (MSP/C4B)
C4B Quick Start Guide


Chocolatey GUI


Chocolatey GUI Overview
Chocolatey GUI Branding
Chocolatey GUI Known Issues


Quick Deployment Environment (QDE)


QDE Overview
QDE Setup
QDE Desktop ReadMe Files
QDE SSL/TLS Setup
QDE Firewall Changes
QDE Client Setup
QDE Internet Setup

QDE v1


QDE Setup v1
QDE Desktop ReadMe Files v1
QDE SSL/TLS Setup v1
QDE Firewall Changes v1
QDE Client Setup v1





Chocolatey Central Management (CCM)


Central Management Overview
Central Management Setup
Central Management Client Setup
Central Management Upgrade
Central Management Deployments


Use Cases


Development Environment
Host on MyGet


Learning Resources


Resources
Videos
Presentations


Additional Information


Legal
History









List/Search Command (choco list)
Chocolatey will perform a search for a package local or remote. Some
may prefer to use clist as a shortcut for choco list.
NOTE: 100% compatible with older Chocolatey client (0.9.8.x and below)
with options and switches. In most cases you can still pass options
and switches  with one dash (-). For more details, see
how to pass arguments (choco -?).


Usage
Examples
Exit Codes
See It In Action
Alternative Sources

WebPI
Windows Features


Options and Switches


Usage
choco search <filter> [<options/switches>]
choco list <filter> [<options/switches>]
clist <filter> [<options/switches>]

Examples
choco list --local-only
choco list -li
choco list -lai
choco list --page=0 --page-size=25
choco search git
choco search git --source=""'https://somewhere/out/there'""
choco search bob -s ""'https://somewhere/protected'"" -u user -p pass

NOTE: See scripting in how to pass arguments (choco -?) for how to
write proper scripts and integrations.
Exit Codes
Exit codes that normally result from running this command.
Normal:

0: operation was successful, no issues detected
-1 or 1: an error has occurred

Enhanced:

0: operation was successful, no issues detected
-1 or 1: an error has occurred
2: no results (enhanced)

NOTE: Starting in v0.10.12, if you have the feature 'useEnhancedExitCodes'
turned on, then choco will provide enhanced exit codes that allow
better integration and scripting.
If you find other exit codes that we have not yet documented, please
file a ticket so we can document it at
https://github.com/chocolatey/choco/issues/new/choose.
See It In Action

Alternative Sources
Available in 0.9.10+.
WebPI
This specifies the source is Web PI (Web Platform Installer) and that
we are searching for a WebPI product, such as IISExpress. If you do
not have the Web PI command line installed, it will install that first
and then perform the search requested.
e.g. choco list --source webpi
Windows Features
This specifies that the source is a Windows Feature and we should
install via the Deployment Image Servicing and Management tool (DISM)
on the local machine.
e.g. choco list --source windowsfeatures
Options and Switches
NOTE: Options and switches apply to all items passed, so if you are
running a command like install that allows installing multiple
packages, and you use --version=1.0.0, it is going to look for and
try to install version 1.0.0 of every package passed. So please split
out multiple package calls when wanting to pass specific options.
Includes default options/switches (included below for completeness).

 -?, --help, -h
     Prints out the help menu.

 -d, --debug
     Debug - Show debug messaging.

 -v, --verbose
     Verbose - Show verbose messaging. Very verbose messaging, avoid using
       under normal circumstances.

     --trace
     Trace - Show trace messaging. Very, very verbose trace messaging. Avoid
       except when needing super low-level .NET Framework debugging. Available
       in 0.10.4+.

     --nocolor, --no-color
     No Color - Do not show colorization in logging output. This overrides
       the feature 'logWithoutColor', set to 'False'. Available in 0.10.9+.

     --acceptlicense, --accept-license
     AcceptLicense - Accept license dialogs automatically. Reserved for
       future use.

 -y, --yes, --confirm
     Confirm all prompts - Chooses affirmative answer instead of prompting.
       Implies --accept-license

 -f, --force
     Force - force the behavior. Do not use force during normal operation -
       it subverts some of the smart behavior for commands.

     --noop, --whatif, --what-if
     NoOp / WhatIf - Don't actually do anything.

 -r, --limitoutput, --limit-output
     LimitOutput - Limit the output to essential information

     --timeout, --execution-timeout=VALUE
     CommandExecutionTimeout (in seconds) - The time to allow a command to
       finish before timing out. Overrides the default execution timeout in the
       configuration of 2700 seconds. '0' for infinite starting in 0.10.4.

 -c, --cache, --cachelocation, --cache-location=VALUE
     CacheLocation - Location for download cache, defaults to %TEMP% or value
       in chocolatey.config file.

     --allowunofficial, --allow-unofficial, --allowunofficialbuild, --allow-unofficial-build
     AllowUnofficialBuild - When not using the official build you must set
       this flag for choco to continue.

     --failstderr, --failonstderr, --fail-on-stderr, --fail-on-standard-error, --fail-on-error-output
     FailOnStandardError - Fail on standard error output (stderr), typically
       received when running external commands during install providers. This
       overrides the feature failOnStandardError.

     --use-system-powershell
     UseSystemPowerShell - Execute PowerShell using an external process
       instead of the built-in PowerShell host. Should only be used when
       internal host is failing. Available in 0.9.10+.

     --no-progress
     Do Not Show Progress - Do not show download progress percentages.
       Available in 0.10.4+.

     --proxy=VALUE
     Proxy Location - Explicit proxy location. Overrides the default proxy
       location of ''. Available for config settings in 0.9.9.9+, this CLI
       option available in 0.10.4+.

     --proxy-user=VALUE
     Proxy User Name - Explicit proxy user (optional). Requires explicity
       proxy (`--proxy` or config setting). Overrides the default proxy user of
       '123'. Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-password=VALUE
     Proxy Password - Explicit proxy password (optional) to be used with
       username. Requires explicity proxy (`--proxy` or config setting) and
       user name.  Overrides the default proxy password (encrypted in settings
       if set). Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-bypass-list=VALUE
     ProxyBypassList - Comma separated list of regex locations to bypass on
       proxy. Requires explicity proxy (`--proxy` or config setting). Overrides
       the default proxy bypass list of ''. Available in 0.10.4+.

     --proxy-bypass-on-local
     Proxy Bypass On Local - Bypass proxy for local connections. Requires
       explicity proxy (`--proxy` or config setting). Overrides the default
       proxy bypass on local setting of 'True'. Available in 0.10.4+.

     --log-file=VALUE
     Log File to output to in addition to regular loggers. Available in 0.1-
       0.8+.

 -s, --source=VALUE
     Source - Source location for install. Can use special 'webpi' or
       'windowsfeatures' sources. Defaults to sources.

 -l, --lo, --localonly, --local-only
     LocalOnly - Only search against local machine items.

     --idonly, --id-only
     Id Only - Only return Package Ids in the list results. Available in 0.1-
       0.6+.

     --pre, --prerelease
     Prerelease - Include Prereleases? Defaults to false.

 -i, --includeprograms, --include-programs
     IncludePrograms - Used in conjunction with LocalOnly, filters out apps
       chocolatey has listed as packages and includes those in the list.
       Defaults to false.

 -a, --all, --allversions, --all-versions
     AllVersions - include results from all versions.

     --version=VALUE
     Version - Specific version of a package to return.

 -u, --user=VALUE
     User - used with authenticated feeds. Defaults to empty.

 -p, --password=VALUE
     Password - the user's password to the source. Defaults to empty.

     --cert=VALUE
     Client certificate - PFX pathname for an x509 authenticated feeds.
       Defaults to empty. Available in 0.9.10+.

     --cp, --certpassword=VALUE
     Certificate Password - the client certificate's password to the source.
       Defaults to empty. Available in 0.9.10+.

     --page=VALUE
     Page - the 'page' of results to return. Defaults to return all results.
       Available in 0.9.10+.

     --page-size=VALUE
     Page Size - the amount of package results to return per page. Defaults
       to 25. Available in 0.9.10+.

 -e, --exact
     Exact - Only return packages with this exact name. Available in 0.9.10+.

     --by-id-only
     ByIdOnly - Only return packages where the id contains the search filter.
       Available in 0.9.10+.

     --by-tag-only, --by-tags-only
     ByTagOnly - Only return packages where the search filter matches on the
       tags. Available in 0.10.6+.

     --id-starts-with
     IdStartsWith - Only return packages where the id starts with the search
       filter. Available in 0.9.10+.

     --order-by-popularity
     OrderByPopularity - Sort by package results by popularity. Available in
       0.9.10+.

     --approved-only
     ApprovedOnly - Only return approved packages - this option will filter
       out results not from the [community repository](https://chocolatey.org/packages). Available in 0.9.10+.

     --download-cache, --download-cache-only
     DownloadCacheAvailable - Only return packages that have a download cache
       available - this option will filter out results not from the community
       repository. Available in 0.9.10+.

     --not-broken
     NotBroken - Only return packages that are not failing testing - this
       option only filters out failing results from the [community feed](https://chocolatey.org/packages). It will
       not filter against other sources. Available in 0.9.10+.

     --detail, --detailed
     Detailed - Alias for verbose. Available in 0.9.10+.

     --audit, --showaudit, --show-audit, --show-audit-info
     Show Audit Information - Display auditing information for a package.
       Available in business editions 1.12.0+.


Command Reference
NOTE: This documentation has been automatically generated from choco list -h.












Overview

About
Getting Started Guide
Why Chocolatey
How Chocolatey Works
Security
Privacy Policy
Kickstarter
Partner
Customer Stories




Product

Solution: Self-Service Anywhere
Solution: Quick Deployment Environment (QDE)
Chocolatey for Business
Pro Edition
Open Source
C4B Trial
Pricing
Support
Community Packages
Events




Learn

Resource Library
Events
COVID-19 Resources
Docs
Videos
Case Studies
Courses
Blog 
Media Kit
Sitemap




Connect

Contact Us
Support
Newsletter
Shop
Report a Bug
Status
Careers



Follow Chocolatey Software on Twitter



Follow Chocolatey Software on Facebook



Find Chocolatey Software on GitHub



Subscribe to Chocolatey Software on YouTube









© 2020 Chocolatey Software, Inc.
Deployed from 16d5ee0bdb. You are on web.2. Page generated 25 Sep 2020 08:27:27 +00:00.





Chocolatey.org uses cookies to enhance the user experience of the site.

        I accept
    

        I accept
    









",,"# choco list

> Display a list of packages with Chocolatey.
> More information: <https://chocolatey.org/docs/commands-list>.

- Display all available packages:

`choco list`

- Display all locally installed packages:

`choco list --local-only`

- Display a list including local programs:

`choco list --include-programs`

- Display only approved packages:

`choco list --approved-only`

- Specify a custom source to display packages from:

`choco list --source {{source_url|alias}}`

- Provide a username and password for authentication:

`choco list --user {{username}} --password {{password}}`
"
whoami,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/whoami,"





































whoami | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















whoami


10/16/2017

2 minutes to read













In this article


Displays user, group and privileges information for the user who is currently logged on to the local system. If used without parameters, whoami displays the current domain and user name.
Syntax
whoami [/upn | /fqdn | /logonid]
whoami {[/user] [/groups] [/priv]} [/fo <Format>] [/nh]
whoami /all [/fo <Format>] [/nh]

Parameters



Parameter
Description




/upn
Displays the user name in user principal name (UPN) format.


/fqdn
Displays the user name in fully qualified domain name (FQDN) format.


/logonid
Displays the logon ID of the current user.


/user
Displays the current domain and user name and the security identifier (SID).


/groups
Displays the user groups to which the current user belongs.


/priv
Displays the security privileges of the current user.


/fo <Format>
Specifies the output format. Valid values include:table Displays output in a table. This is the default value.list Displays output in a list.csv Displays output in comma-separated value (CSV) format.


/all
Displays all information in the current access token, including the current user name, security identifiers (SID), privileges, and groups that the current user belongs to.


/nh
Specifies that the column header should not be displayed in the output. This is valid only for table and CSV formats.


/?
Displays help at the command prompt.



Examples
To display the domain and user name of the person who is currently logged on to this computer, type:
whoami

Output similar to the following appears:
DOMAIN1\administrator

To display all of the information in the current access token, type:
whoami /all

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
WHOAMI(1)		  BSD General Commands Manual		     WHOAMI(1)

NAME
     whoami -- display effective user id

SYNOPSIS
     whoami

DESCRIPTION
     The whoami utility has been obsoleted by the id(1) utility, and is equiv-
     alent to ``id -un''.  The command ``id -p'' is suggested for normal
     interactive use.

     The whoami utility displays your effective user ID as a name.

EXIT STATUS
     The whoami utility exits 0 on success, and >0 if an error occurs.

SEE ALSO
     id(1)

BSD				 June 6, 1993				   BSD
","# whoami

> Display details about the current user.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/whoami>.

- Display the username of the current user:

`whoami`

- Display the groups that the current user is a member of:

`whoami /groups`

- Display the privileges of the current user:

`whoami /priv`

- Display the user principal name (UPN) of the current user:

`whoami /upn`

- Display the logon id of the current user:

`whoami /logonid`
"
more,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/more,"





































more | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















more


07/26/2019

2 minutes to read








+4





In this article


Displays one screen of output at a time.

Note
The more command, with different parameters, is also available from the Recovery Console.

Syntax
<command> | more [/c] [/p] [/s] [/t<n>] [+<n>]
more [[/c] [/p] [/s] [/t<n>] [+<n>]] < [<drive>:][<path>]<filename>
more [/c] [/p] [/s] [/t<n>] [+<n>] [<files>]

Parameters



Parameter
Description




<command>
Specifies a command for which you want to display the output.


/c
Clears the screen before displaying a page.


/p
Expands form-feed characters.


/s
Displays multiple blank lines as a single blank line.


/t<n>
Displays tabs as the number of spaces specified by n.


+<n>
Displays the first file, beginning at the line specified by n.


[<drive>:][<path>]<filename>
Specifies the location and name of a file to display.


<files>
Specifies a list of files to display. Files must be separated using spaces.


/?
Displays help at the command prompt.



Remarks

The following subcommands are accepted at the more prompt (-- More --), including:



Key
Action




SPACEBAR
Press the SPACEBAR to display the next screen.


ENTER
Press ENTER to display the file one line at a time.


f
Press F to display the next file listed on the command line.


q
Press Q to quit the more command.


=
Shows the line number.


p <n>
Press P to display the next n lines.


s <n>
Press S to skip the next n lines.


?
Press ? to show the commands that are available at the more prompt.




If you use the redirection character (<), you must also specify a file name as the source.

If you use the pipe (|), you can use such commands as dir, sort, and type.


Examples
To view the first screen of information of a file named Clients.new, type one of the following commands:
more < clients.new
type clients.new | more

The more command displays the first screen of information from Clients.new, and you can press the SPACEBAR to see the next screen of information.
To clear the screen and remove all extra blank lines before displaying the file Clients.new, type one of the following commands:
more /c /s < clients.new
type clients.new | more /c /s

To display the current line number at the more prompt, type:
more =

The current line number is added to the more prompt, as -- More [Line: 24] --
To display a specific number of lines at the more prompt, type:
more p

The more prompt asks you for the number of lines to display, as follows: -- More -- Lines:. Type the number of lines to display, and then press ENTER. The screen changes to show only that number of lines.
To skip a specific number of lines at the more prompt, type:
more s

The more prompt asks you for the number of lines to skip, as follows: -- More -- Lines:. Type the number of lines to skip, and then press ENTER. The screen changes to show that those lines are skipped.
Additional References

Command-Line Syntax Key

Windows Recovery Environment (WinRE)









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","LESS(1) 							       LESS(1)



NAME
       less - opposite of more

SYNOPSIS
       less -?
       less --help
       less -V
       less --version
       less [-[+]aABcCdeEfFgGiIJKLmMnNqQrRsSuUVwWX~]
	    [-b space] [-h lines] [-j line] [-k keyfile]
	    [-{oO} logfile] [-p pattern] [-P prompt] [-t tag]
	    [-T tagsfile] [-x tab,...] [-y lines] [-[z] lines]
	    [-# shift] [+[+]cmd] [--] [filename]...
       (See  the  OPTIONS section for alternate option syntax with long option
       names.)


DESCRIPTION
       Less is a program similar to more (1), but which allows backward  move-
       ment in the file as well as forward movement.  Also, less does not have
       to read the entire input file before  starting,	so  with  large  input
       files  it  starts  up  faster than text editors like vi (1).  Less uses
       termcap (or terminfo on some systems), so it can run on	a  variety  of
       terminals.   There is even limited support for hardcopy terminals.  (On
       a hardcopy terminal, lines which should be printed at the  top  of  the
       screen are prefixed with a caret.)

       Commands  are based on both more and vi.  Commands may be preceded by a
       decimal number, called N in the descriptions below.  The number is used
       by some commands, as indicated.


COMMANDS
       In  the following descriptions, ^X means control-X.  ESC stands for the
       ESCAPE  key;  for  example  ESC-v  means  the  two  character  sequence
       ""ESCAPE"", then ""v"".

       h or H Help:  display  a  summary of these commands.  If you forget all
	      the other commands, remember this one.

       SPACE or ^V or f or ^F
	      Scroll forward N	lines,	default  one  window  (see  option  -z
	      below).	If  N  is  more  than  the screen size, only the final
	      screenful is displayed.  Warning: some systems use ^V as a  spe-
	      cial literalization character.

       z      Like  SPACE,  but  if  N is specified, it becomes the new window
	      size.

       ESC-SPACE
	      Like SPACE, but scrolls a full screenful,  even  if  it  reaches
	      end-of-file in the process.

       ENTER or RETURN or ^N or e or ^E or j or ^J
	      Scroll  forward N lines, default 1.  The entire N lines are dis-
	      played, even if N is more than the screen size.

       d or ^D
	      Scroll forward N lines, default one half of the screen size.  If
	      N  is specified, it becomes the new default for subsequent d and
	      u commands.

       b or ^B or ESC-v
	      Scroll backward N lines,	default  one  window  (see  option  -z
	      below).	If  N  is  more  than  the screen size, only the final
	      screenful is displayed.

       w      Like ESC-v, but if N is specified, it  becomes  the  new	window
	      size.

       y or ^Y or ^P or k or ^K
	      Scroll backward N lines, default 1.  The entire N lines are dis-
	      played, even if N is more than the screen size.	Warning:  some
	      systems use ^Y as a special job control character.

       u or ^U
	      Scroll  backward	N  lines, default one half of the screen size.
	      If N is specified, it becomes the new default for  subsequent  d
	      and u commands.

       J      Like j, but continues to scroll beyond the end of the file.

       K or Y Like  k,	but  continues	to  scroll beyond the beginning of the
	      file.

       ESC-) or RIGHTARROW
	      Scroll horizontally right N characters, default half the	screen
	      width  (see  the	-#  option).   If  a number N is specified, it
	      becomes the default for future  RIGHTARROW  and  LEFTARROW  com-
	      mands.   While  the  text  is scrolled, it acts as though the -S
	      option (chop lines) were in effect.

       ESC-( or LEFTARROW
	      Scroll horizontally left N characters, default half  the	screen
	      width  (see  the	-#  option).   If  a number N is specified, it
	      becomes the default for future  RIGHTARROW  and  LEFTARROW  com-
	      mands.

       ESC-} or ^RIGHTARROW
	      Scroll  horizontally  right  to show the end of the longest dis-
	      played line.

       ESC-{ or ^LEFTARROW
	      Scroll horizontally left back to the first column.

       r or ^R or ^L
	      Repaint the screen.

       R      Repaint the screen, discarding any buffered  input.   Useful  if
	      the file is changing while it is being viewed.

       F      Scroll  forward, and keep trying to read when the end of file is
	      reached.	Normally this command would be used  when  already  at
	      the  end of the file.  It is a way to monitor the tail of a file
	      which is growing while it is being  viewed.   (The  behavior  is
	      similar to the ""tail -f"" command.)

       ESC-F  Like  F,	but  as soon as a line is found which matches the last
	      search pattern, the terminal bell is rung and forward  scrolling
	      stops.

       g or < or ESC-<
	      Go to line N in the file, default 1 (beginning of file).	(Warn-
	      ing: this may be slow if N is large.)

       G or > or ESC->
	      Go to line N in the file, default the end of the	file.	(Warn-
	      ing:  this  may  be slow if N is large, or if N is not specified
	      and standard input, rather than a file, is being read.)

       ESC-G  Same as G, except if no number N is specified and the  input  is
	      standard	input,	goes  to  the  last  line  which  is currently
	      buffered.

       p or % Go to a position N percent into the file.  N should be between 0
	      and 100, and may contain a decimal point.

       P      Go to the line containing byte offset N in the file.

       {      If a left curly bracket appears in the top line displayed on the
	      screen, the { command  will  go  to  the	matching  right  curly
	      bracket.	 The matching right curly bracket is positioned on the
	      bottom line of the screen.  If there is more than one left curly
	      bracket  on  the top line, a number N may be used to specify the
	      N-th bracket on the line.

       }      If a right curly bracket appears in the bottom line displayed on
	      the  screen,  the  }  command will go to the matching left curly
	      bracket.	The matching left curly bracket is positioned  on  the
	      top  line  of the screen.  If there is more than one right curly
	      bracket on the top line, a number N may be used to  specify  the
	      N-th bracket on the line.

       (      Like {, but applies to parentheses rather than curly brackets.

       )      Like }, but applies to parentheses rather than curly brackets.

       [      Like  {, but applies to square brackets rather than curly brack-
	      ets.

       ]      Like }, but applies to square brackets rather than curly	brack-
	      ets.

       ESC-^F Followed	by two characters, acts like {, but uses the two char-
	      acters as open and close brackets, respectively.	 For  example,
	      ""ESC  ^F < >"" could be used to go forward to the > which matches
	      the < in the top displayed line.

       ESC-^B Followed by two characters, acts like }, but uses the two  char-
	      acters  as  open and close brackets, respectively.  For example,
	      ""ESC ^B < >"" could be used to go backward to the < which matches
	      the > in the bottom displayed line.

       m      Followed	by  any  lowercase  letter, marks the current position
	      with that letter.

       '      (Single quote.)  Followed by any lowercase  letter,  returns  to
	      the position which was previously marked with that letter.  Fol-
	      lowed by another single quote, returns to the position at  which
	      the last ""large"" movement command was executed.  Followed by a ^
	      or $, jumps to the beginning or end of  the  file  respectively.
	      Marks  are  preserved when a new file is examined, so the ' com-
	      mand can be used to switch between input files.

       ^X^X   Same as single quote.

       /pattern
	      Search forward in the file for the N-th line containing the pat-
	      tern.  N defaults to 1.  The pattern is a regular expression, as
	      recognized by the regular expression library  supplied  by  your
	      system.	The search starts at the first line displayed (but see
	      the -a and -j options, which change this).

	      Certain characters are special if entered at  the  beginning  of
	      the  pattern;  they modify the type of search rather than become
	      part of the pattern:

	      ^N or !
		     Search for lines which do NOT match the pattern.

	      ^E or *
		     Search multiple files.  That is, if  the  search  reaches
		     the  END of the current file without finding a match, the
		     search continues in the next file	in  the  command  line
		     list.

	      ^F or @
		     Begin  the  search at the first line of the FIRST file in
		     the command line list, regardless of  what  is  currently
		     displayed	on  the screen or the settings of the -a or -j
		     options.

	      ^K     Highlight any text which matches the pattern on the  cur-
		     rent screen, but don't move to the first match (KEEP cur-
		     rent position).

	      ^R     Don't interpret regular expression  metacharacters;  that
		     is, do a simple textual comparison.

       ?pattern
	      Search  backward	in  the  file for the N-th line containing the
	      pattern.	The search starts at the last line displayed (but  see
	      the -a and -j options, which change this).

	      Certain characters are special as in the / command:

	      ^N or !
		     Search for lines which do NOT match the pattern.

	      ^E or *
		     Search  multiple  files.	That is, if the search reaches
		     the beginning of  the  current  file  without  finding  a
		     match,  the  search continues in the previous file in the
		     command line list.

	      ^F or @
		     Begin the search at the last line of the last file in the
		     command  line  list, regardless of what is currently dis-
		     played on the screen or the settings  of  the  -a	or  -j
		     options.

	      ^K     As in forward searches.

	      ^R     As in forward searches.

       ESC-/pattern
	      Same as ""/*"".

       ESC-?pattern
	      Same as ""?*"".

       n      Repeat  previous	search, for N-th line containing the last pat-
	      tern.  If the previous search was modified by ^N, the search  is
	      made  for the N-th line NOT containing the pattern.  If the pre-
	      vious search was modified by ^E, the  search  continues  in  the
	      next  (or  previous)  file if not satisfied in the current file.
	      If the previous search was modified by ^R, the  search  is  done
	      without  using  regular  expressions.  There is no effect if the
	      previous search was modified by ^F or ^K.

       N      Repeat previous search, but in the reverse direction.

       ESC-n  Repeat previous  search,	but  crossing  file  boundaries.   The
	      effect is as if the previous search were modified by *.

       ESC-N  Repeat  previous search, but in the reverse direction and cross-
	      ing file boundaries.

       ESC-u  Undo search highlighting.   Turn	off  highlighting  of  strings
	      matching the current search pattern.  If highlighting is already
	      off because of a previous ESC-u command, turn highlighting  back
	      on.   Any  search  command  will also turn highlighting back on.
	      (Highlighting can also be disabled by toggling the -G option; in
	      that case search commands do not turn highlighting back on.)

       &pattern
	      Display  only  lines which match the pattern; lines which do not
	      match the pattern are not displayed.  If pattern	is  empty  (if
	      you  type  &  immediately  followed  by ENTER), any filtering is
	      turned off, and all lines are displayed.	While filtering is  in
	      effect,  an  ampersand  is  displayed  at  the  beginning of the
	      prompt, as a reminder that some lines in the file may be hidden.

	      Certain characters are special as in the / command:

	      ^N or !
		     Display only lines which do NOT match the pattern.

	      ^R     Don't  interpret  regular expression metacharacters; that
		     is, do a simple textual comparison.

       :e [filename]
	      Examine a new file.  If the filename is missing,	the  ""current""
	      file  (see  the :n and :p commands below) from the list of files
	      in the command line is re-examined.  A percent sign (%)  in  the
	      filename	is  replaced by the name of the current file.  A pound
	      sign (#) is replaced by the  name  of  the  previously  examined
	      file.    However,  two  consecutive  percent  signs  are	simply
	      replaced with a single percent sign.  This allows you to enter a
	      filename	that  contains a percent sign in the name.  Similarly,
	      two consecutive pound signs are replaced	with  a  single  pound
	      sign.   The  filename  is inserted into the command line list of
	      files so that it can be seen by subsequent :n and  :p  commands.
	      If the filename consists of several files, they are all inserted
	      into the list of files and the first one is  examined.   If  the
	      filename contains one or more spaces, the entire filename should
	      be enclosed in double quotes (also see the -"" option).

       ^X^V or E
	      Same as :e.  Warning: some systems use ^V as a special  literal-
	      ization  character.  On such systems, you may not be able to use
	      ^V.

       :n     Examine the next file (from the list of files given in the  com-
	      mand  line).   If a number N is specified, the N-th next file is
	      examined.

       :p     Examine the previous file in the command line list.  If a number
	      N is specified, the N-th previous file is examined.

       :x     Examine  the first file in the command line list.  If a number N
	      is specified, the N-th file in the list is examined.

       :d     Remove the current file from the list of files.

       t      Go to the next tag, if there were more than one matches for  the
	      current tag.  See the -t option for more details about tags.

       T      Go  to the previous tag, if there were more than one matches for
	      the current tag.

       = or ^G or :f
	      Prints some information about the file being  viewed,  including
	      its  name and the line number and byte offset of the bottom line
	      being displayed.	If possible, it also prints the length of  the
	      file,  the  number  of  lines in the file and the percent of the
	      file above the last displayed line.

       -      Followed by one of the command line option letters (see  OPTIONS
	      below),  this will change the setting of that option and print a
	      message describing the new setting.   If	a  ^P  (CONTROL-P)  is
	      entered immediately after the dash, the setting of the option is
	      changed but no message is printed.  If the option letter	has  a
	      numeric  value (such as -b or -h), or a string value (such as -P
	      or -t), a new value may be entered after the option letter.   If
	      no  new  value is entered, a message describing the current set-
	      ting is printed and nothing is changed.

       --     Like the - command, but takes a long option  name  (see  OPTIONS
	      below) rather than a single option letter.  You must press ENTER
	      or RETURN after typing the option name.  A ^P immediately  after
	      the  second dash suppresses printing of a message describing the
	      new setting, as in the - command.

       -+     Followed by one of the command line  option  letters  this  will
	      reset  the  option  to  its  default setting and print a message
	      describing the new setting.  (The ""-+X"" command  does  the  same
	      thing  as  ""-+X""	on  the command line.)	This does not work for
	      string-valued options.

       --+    Like the -+ command, but takes a long option name rather than  a
	      single option letter.

       -!     Followed	by  one  of the command line option letters, this will
	      reset the option to the ""opposite"" of its  default  setting  and
	      print  a message describing the new setting.  This does not work
	      for numeric or string-valued options.

       --!    Like the -! command, but takes a long option name rather than  a
	      single option letter.

       _      (Underscore.)   Followed	by one of the command line option let-
	      ters, this will print a message describing the  current  setting
	      of that option.  The setting of the option is not changed.

       __     (Double underscore.)  Like the _ (underscore) command, but takes
	      a long option name rather than a single option letter.  You must
	      press ENTER or RETURN after typing the option name.

       +cmd   Causes  the specified cmd to be executed each time a new file is
	      examined.  For example, +G causes less to initially display each
	      file starting at the end rather than the beginning.

       V      Prints the version number of less being run.

       q or Q or :q or :Q or ZZ
	      Exits less.

       The  following four commands may or may not be valid, depending on your
       particular installation.


       v      Invokes an editor to edit the current file  being  viewed.   The
	      editor is taken from the environment variable VISUAL if defined,
	      or EDITOR if VISUAL is not defined, or defaults to ""vi"" if  nei-
	      ther  VISUAL  nor EDITOR is defined.  See also the discussion of
	      LESSEDIT under the section on PROMPTS below.

       ! shell-command
	      Invokes a shell to run the shell-command given.  A percent  sign
	      (%)  in the command is replaced by the name of the current file.
	      A pound sign (#) is replaced by the name of the previously exam-
	      ined  file.   ""!!""  repeats the last shell command.  ""!"" with no
	      shell command simply invokes a  shell.   On  Unix  systems,  the
	      shell  is taken from the environment variable SHELL, or defaults
	      to ""sh"".	On MS-DOS and OS/2 systems, the shell  is  the	normal
	      command processor.

       | <m> shell-command
	      <m>  represents  any  mark letter.  Pipes a section of the input
	      file to the given shell command.	The section of the file to  be
	      piped  is  between  the first line on the current screen and the
	      position marked by the letter.  <m> may also be ^ or $ to  indi-
	      cate beginning or end of file respectively.  If <m> is . or new-
	      line, the current screen is piped.

       s filename
	      Save the input to a file.  This only works if  the  input  is  a
	      pipe, not an ordinary file.


OPTIONS
       Command	line options are described below.  Most options may be changed
       while less is running, via the ""-"" command.

       Most options may be given in one of two forms: either a	dash  followed
       by  a  single  letter, or two dashes followed by a long option name.  A
       long option name may be abbreviated as  long  as  the  abbreviation  is
       unambiguous.  For example, --quit-at-eof may be abbreviated --quit, but
       not --qui, since both --quit-at-eof and --quiet begin with --qui.  Some
       long  option names are in uppercase, such as --QUIT-AT-EOF, as distinct
       from --quit-at-eof.  Such option names need only have their first  let-
       ter  capitalized; the remainder of the name may be in either case.  For
       example, --Quit-at-eof is equivalent to --QUIT-AT-EOF.

       Options are also taken from the environment variable ""LESS"".  For exam-
       ple, to avoid typing ""less -options ..."" each time less is invoked, you
       might tell csh:

       setenv LESS ""-options""

       or if you use sh:

       LESS=""-options""; export LESS

       On MS-DOS, you don't need the quotes, but you should replace  any  per-
       cent signs in the options string by double percent signs.

       The  environment variable is parsed before the command line, so command
       line options override the LESS  environment  variable.	If  an	option
       appears	in  the LESS variable, it can be reset to its default value on
       the command line by beginning the command line option with ""-+"".

       Some options like -k or -D require a string to follow the  option  let-
       ter.   The  string  for	that option is considered to end when a dollar
       sign ($) is found.  For example, you can set two -D options  on	MS-DOS
       like this:

       LESS=""Dn9.1$Ds4.1""

       If  the	--use-backslash  option appears earlier in the options, then a
       dollar sign or backslash may be included literally in an option	string
       by preceding it with a backslash.  If the --use-backslash option is not
       in effect, then backslashes are not treated specially, and there is  no
       way to include a dollar sign in the option string.

       -? or --help
	      This  option displays a summary of the commands accepted by less
	      (the same as the h  command).   (Depending  on  how  your  shell
	      interprets  the  question mark, it may be necessary to quote the
	      question mark, thus: ""-\?"".)

       -a or --search-skip-screen
	      By default, forward searches start at the top of	the  displayed
	      screen  and  backwards  searches start at the bottom of the dis-
	      played screen (except for repeated searches invoked by the n  or
	      N  commands,  which  start  after  or  before  the ""target"" line
	      respectively; see the -j option for more about the target line).
	      The  -a  option  causes forward searches to instead start at the
	      bottom of the screen and backward searches to start at  the  top
	      of  the screen, thus skipping all lines displayed on the screen.

       -A or --SEARCH-SKIP-SCREEN
	      Causes all forward searches (not just non-repeated searches)  to
	      start  just  after the target line, and all backward searches to
	      start just before the target line.  Thus, forward searches  will
	      skip part of the displayed screen (from the first line up to and
	      including the target line).  Similarly backwards	searches  will
	      skip the displayed screen from the last line up to and including
	      the target line.	This was the default behavior in less versions
	      prior to 441.

       -bn or --buffers=n
	      Specifies  the  amount  of  buffer  space less will use for each
	      file, in units of kilobytes (1024 bytes).  By  default  64 K  of
	      buffer  space  is used for each file (unless the file is a pipe;
	      see the -B option).  The -b  option  specifies  instead  that  n
	      kilobytes of buffer space should be used for each file.  If n is
	      -1, buffer space is unlimited; that is, the entire file  can  be
	      read into memory.

       -B or --auto-buffers
	      By default, when data is read from a pipe, buffers are allocated
	      automatically as needed.	If a large amount of data is read from
	      the  pipe,  this	can cause a large amount of memory to be allo-
	      cated.  The -B option  disables  this  automatic	allocation  of
	      buffers  for  pipes,  so	that only 64 K (or the amount of space
	      specified by the -b option) is used for the pipe.  Warning:  use
	      of  -B  can  result  in  erroneous  display, since only the most
	      recently viewed part of the piped data is kept  in  memory;  any
	      earlier data is lost.

       -c or --clear-screen
	      Causes  full  screen  repaints  to  be painted from the top line
	      down.  By default, full screen repaints are  done  by  scrolling
	      from the bottom of the screen.

       -C or --CLEAR-SCREEN
	      Same as -c, for compatibility with older versions of less.

       -d or --dumb
	      The -d option suppresses the error message normally displayed if
	      the terminal is dumb; that is, lacks some important  capability,
	      such as the ability to clear the screen or scroll backward.  The
	      -d option does not otherwise change the behavior of  less  on  a
	      dumb terminal.

       -Dxcolor or --color=xcolor
	      [MS-DOS only] Sets the color of the text displayed.  x is a sin-
	      gle character which selects the type  of	text  whose  color  is
	      being  set: n=normal, s=standout, d=bold, u=underlined, k=blink.
	      color is a pair of numbers separated by  a  period.   The  first
	      number  selects  the foreground color and the second selects the
	      background color of the text.  A single number N is the same  as
	      N.M, where M is the normal background color.  x may also be a to
	      toggle strict ANSI sequence rendering (SGR mode).


       -e or --quit-at-eof
	      Causes less to automatically exit the  second  time  it  reaches
	      end-of-file.   By  default, the only way to exit less is via the
	      ""q"" command.

       -E or --QUIT-AT-EOF
	      Causes less to automatically exit the first time it reaches end-
	      of-file.

       -f or --force
	      Forces non-regular files to be opened.  (A non-regular file is a
	      directory or a device special file.)  Also suppresses the  warn-
	      ing message when a binary file is opened.  By default, less will
	      refuse to open non-regular files.  Note that some operating sys-
	      tems will not allow directories to be read, even if -f is set.

       -F or --quit-if-one-screen
	      Causes less to automatically exit if the entire file can be dis-
	      played on the first screen.

       -g or --hilite-search
	      Normally, less will highlight ALL strings which match  the  last
	      search  command.	 The  -g option changes this behavior to high-
	      light only the particular string which was  found  by  the  last
	      search command.  This can cause less to run somewhat faster than
	      the default.

       -G or --HILITE-SEARCH
	      The -G option suppresses all highlighting of  strings  found  by
	      search commands.

       -hn or --max-back-scroll=n
	      Specifies  a  maximum number of lines to scroll backward.  If it
	      is necessary to scroll backward more than n lines, the screen is
	      repainted in a forward direction instead.  (If the terminal does
	      not have the ability to scroll backward, -h0 is implied.)

       -i or --ignore-case
	      Causes searches to ignore case; that is, uppercase and lowercase
	      are  considered identical.  This option is ignored if any upper-
	      case letters appear in the search pattern; in other words, if  a
	      pattern  contains  uppercase  letters, then that search does not
	      ignore case.

       -I or --IGNORE-CASE
	      Like -i, but searches ignore case even if the  pattern  contains
	      uppercase letters.

       -jn or --jump-target=n
	      Specifies  a line on the screen where the ""target"" line is to be
	      positioned.  The target line is the line specified by  any  com-
	      mand  to	search for a pattern, jump to a line number, jump to a
	      file percentage or jump to a tag.  The screen line may be speci-
	      fied  by	a number: the top line on the screen is 1, the next is
	      2, and so on.  The number may be negative to specify a line rel-
	      ative to the bottom of the screen: the bottom line on the screen
	      is -1, the second to the bottom is -2, and so on.   Alternately,
	      the  screen line may be specified as a fraction of the height of
	      the screen, starting with a decimal point: .5 is in  the	middle
	      of  the screen, .3 is three tenths down from the first line, and
	      so on.  If the line is specified as a fraction, the actual  line
	      number  is  recalculated	if  the terminal window is resized, so
	      that the target line remains at the specified  fraction  of  the
	      screen  height.	If any form of the -j option is used, repeated
	      forward searches (invoked with ""n"" or ""N"")  begin  at  the  line
	      immediately   after  the	target	line,  and  repeated  backward
	      searches begin at the target line, unless changed by -a  or  -A.
	      For  example,  if  ""-j4""	is used, the target line is the fourth
	      line on the screen, so forward searches begin at the fifth  line
	      on  the  screen.	However nonrepeated searches (invoked with ""/""
	      or ""?"")  always begin at the start or end of the current	screen
	      respectively.

       -J or --status-column
	      Displays	a  status  column at the left edge of the screen.  The
	      status column shows the lines that matched the  current  search.
	      The  status  column  is  also  used if the -w or -W option is in
	      effect.

       -kfilename or --lesskey-file=filename
	      Causes less to open and interpret the named file	as  a  lesskey
	      (1) file.  Multiple -k options may be specified.	If the LESSKEY
	      or LESSKEY_SYSTEM environment variable is set, or if  a  lesskey
	      file is found in a standard place (see KEY BINDINGS), it is also
	      used as a lesskey file.

       -K or --quit-on-intr
	      Causes less to exit immediately (with status 2) when  an	inter-
	      rupt  character  (usually  ^C) is typed.	Normally, an interrupt
	      character causes less to stop whatever it is doing and return to
	      its  command  prompt.   Note  that  use  of this option makes it
	      impossible to return to the command prompt from the ""F"" command.

       -L or --no-lessopen
	      Ignore  the  LESSOPEN  environment  variable (see the INPUT PRE-
	      PROCESSOR section below).  This option can be  set  from	within
	      less,  but  it will apply only to files opened subsequently, not
	      to the file which is currently open.

       -m or --long-prompt
	      Causes less to prompt verbosely (like more),  with  the  percent
	      into the file.  By default, less prompts with a colon.

       -M or --LONG-PROMPT
	      Causes less to prompt even more verbosely than more.

       -n or --line-numbers
	      Suppresses  line numbers.  The default (to use line numbers) may
	      cause less to run more slowly in some cases, especially  with  a
	      very  large  input  file.   Suppressing line numbers with the -n
	      option will avoid this problem.  Using line numbers  means:  the
	      line number will be displayed in the verbose prompt and in the =
	      command, and the v command will pass the current line number  to
	      the  editor  (see  also  the  discussion	of LESSEDIT in PROMPTS
	      below).

       -N or --LINE-NUMBERS
	      Causes a line number to be displayed at the  beginning  of  each
	      line in the display.

       -ofilename or --log-file=filename
	      Causes  less  to copy its input to the named file as it is being
	      viewed.  This applies only when the input file is a pipe, not an
	      ordinary	file.	If  the file already exists, less will ask for
	      confirmation before overwriting it.

       -Ofilename or --LOG-FILE=filename
	      The -O option is like -o, but it will overwrite an existing file
	      without asking for confirmation.

	      If  no log file has been specified, the -o and -O options can be
	      used from within less to specify a log  file.   Without  a  file
	      name, they will simply report the name of the log file.  The ""s""
	      command is equivalent to specifying -o from within less.

       -ppattern or --pattern=pattern
	      The -p option on the command line is  equivalent	to  specifying
	      +/pattern;  that	is, it tells less to start at the first occur-
	      rence of pattern in the file.

       -Pprompt or --prompt=prompt
	      Provides a way to tailor the three prompt  styles  to  your  own
	      preference.  This option would normally be put in the LESS envi-
	      ronment variable, rather than being typed in with each less com-
	      mand.  Such an option must either be the last option in the LESS
	      variable, or be terminated by a dollar sign.
	       -Ps followed by a string changes the default (short) prompt  to
	      that string.
	       -Pm changes the medium (-m) prompt.
	       -PM changes the long (-M) prompt.
	       -Ph changes the prompt for the help screen.
	       -P= changes the message printed by the = command.
	       -Pw  changes the message printed while waiting for data (in the
	      F command).  All prompt strings consist of a sequence of letters
	      and  special  escape  sequences.	See the section on PROMPTS for
	      more details.

       -q or --quiet or --silent
	      Causes moderately ""quiet"" operation: the terminal  bell  is  not
	      rung if an attempt is made to scroll past the end of the file or
	      before the beginning of the file.  If the terminal has a ""visual
	      bell"",  it  is  used  instead.  The bell will be rung on certain
	      other errors, such as typing an invalid character.  The  default
	      is to ring the terminal bell in all such cases.

       -Q or --QUIET or --SILENT
	      Causes  totally  ""quiet""	operation:  the terminal bell is never
	      rung.

       -r or --raw-control-chars
	      Causes ""raw"" control characters to be displayed.	The default is
	      to  display  control  characters	using  the caret notation; for
	      example, a control-A (octal 001) is displayed as ""^A"".  Warning:
	      when the -r option is used, less cannot keep track of the actual
	      appearance of the screen (since this depends on how  the	screen
	      responds to each type of control character).  Thus, various dis-
	      play problems may result, such as long lines being split in  the
	      wrong place.

       -R or --RAW-CONTROL-CHARS
	      Like  -r,  but  only ANSI ""color"" escape sequences are output in
	      ""raw"" form.  Unlike -r, the screen appearance is maintained cor-
	      rectly  in  most	cases.	 ANSI  ""color""	escape	sequences  are
	      sequences of the form:

		   ESC [ ... m

	      where the ""..."" is zero or more color  specification  characters
	      For  the	purpose  of  keeping  track of screen appearance, ANSI
	      color escape sequences are assumed to not move the cursor.   You
	      can  make less think that characters other than ""m"" can end ANSI
	      color escape  sequences  by  setting  the  environment  variable
	      LESSANSIENDCHARS to the list of characters which can end a color
	      escape sequence.	And you can make less  think  that  characters
	      other  than the standard ones may appear between the ESC and the
	      m by setting the environment variable  LESSANSIMIDCHARS  to  the
	      list of characters which can appear.

       -s or --squeeze-blank-lines
	      Causes  consecutive  blank  lines  to  be squeezed into a single
	      blank line.  This is useful when viewing nroff output.

       -S or --chop-long-lines
	      Causes lines longer than the screen width to be  chopped	(trun-
	      cated) rather than wrapped.  That is, the portion of a long line
	      that does not fit in the screen width is not shown.  The default
	      is  to  wrap  long  lines; that is, display the remainder on the
	      next line.

       -ttag or --tag=tag
	      The -t option, followed immediately by a TAG, will edit the file
	      containing  that tag.  For this to work, tag information must be
	      available; for example, there may  be  a	file  in  the  current
	      directory called ""tags"", which was previously built by ctags (1)
	      or an equivalent command.  If the environment variable LESSGLOB-
	      ALTAGS  is set, it is taken to be the name of a command compati-
	      ble with global (1), and that command is executed  to  find  the
	      tag.  (See http://www.gnu.org/software/global/global.html).  The
	      -t option may also be specified from within less	(using	the  -
	      command)	as a way of examining a new file.  The command "":t"" is
	      equivalent to specifying -t from within less.

       -Ttagsfile or --tag-file=tagsfile
	      Specifies a tags file to be used instead of ""tags"".

       -u or --underline-special
	      Causes backspaces and carriage returns to be treated  as	print-
	      able  characters;  that  is,  they are sent to the terminal when
	      they appear in the input.

       -U or --UNDERLINE-SPECIAL
	      Causes backspaces, tabs and carriage returns to  be  treated  as
	      control  characters;  that  is, they are handled as specified by
	      the -r option.

	      By default, if neither -u nor  -U  is  given,  backspaces  which
	      appear  adjacent	to  an	underscore  character are treated spe-
	      cially: the underlined text is displayed	using  the  terminal's
	      hardware	underlining capability.  Also, backspaces which appear
	      between two identical  characters  are  treated  specially:  the
	      overstruck  text	is printed using the terminal's hardware bold-
	      face capability.	Other backspaces are deleted, along  with  the
	      preceding character.  Carriage returns immediately followed by a
	      newline are deleted.  Other  carriage  returns  are  handled  as
	      specified  by the -r option.  Text which is overstruck or under-
	      lined can be searched for if neither -u nor -U is in effect.

       -V or --version
	      Displays the version number of less.

       -w or --hilite-unread
	      Temporarily highlights the first	""new""  line  after  a  forward
	      movement of a full page.	The first ""new"" line is the line imme-
	      diately following the line  previously  at  the  bottom  of  the
	      screen.  Also highlights the target line after a g or p command.
	      The highlight is removed at the next command which causes  move-
	      ment.   The  entire line is highlighted, unless the -J option is
	      in effect, in which case only the status column is  highlighted.

       -W or --HILITE-UNREAD
	      Like -w, but temporarily highlights the first new line after any
	      forward movement command larger than one line.

       -xn,... or --tabs=n,...
	      Sets tab stops.  If only one n is specified, tab stops  are  set
	      at  multiples  of n.  If multiple values separated by commas are
	      specified, tab stops are set at those positions, and  then  con-
	      tinue  with  the	same  spacing  as  the last two.  For example,
	      -x9,17 will set tabs at positions  9,  17,  25,  33,  etc.   The
	      default for n is 8.

       -X or --no-init
	      Disables sending the termcap initialization and deinitialization
	      strings to the terminal.	This is  sometimes  desirable  if  the
	      deinitialization	string does something unnecessary, like clear-
	      ing the screen.

       -yn or --max-forw-scroll=n
	      Specifies a maximum number of lines to scroll forward.  If it is
	      necessary  to  scroll  forward  more than n lines, the screen is
	      repainted instead.  The -c or -C option may be used  to  repaint
	      from  the top of the screen if desired.  By default, any forward
	      movement causes scrolling.

       -[z]n or --window=n
	      Changes the default scrolling  window  size  to  n  lines.   The
	      default is one screenful.  The z and w commands can also be used
	      to change the window size.  The ""z"" may be omitted for  compati-
	      bility with some versions of more.  If the number n is negative,
	      it indicates n lines less than the  current  screen  size.   For
	      example, if the screen is 24 lines, -z-4 sets the scrolling win-
	      dow to 20 lines.	If the screen is  resized  to  40  lines,  the
	      scrolling window automatically changes to 36 lines.

       -""cc or --quotes=cc
	      Changes  the  filename quoting character.  This may be necessary
	      if you are trying to name a file which contains both spaces  and
	      quote  characters.  Followed by a single character, this changes
	      the quote character to that character.  Filenames  containing  a
	      space should then be surrounded by that character rather than by
	      double quotes.  Followed by two  characters,  changes  the  open
	      quote  to the first character, and the close quote to the second
	      character.  Filenames containing a space should then be preceded
	      by  the  open  quote  character  and followed by the close quote
	      character.  Note	that  even  after  the	quote  characters  are
	      changed,	this  option  remains  -"" (a dash followed by a double
	      quote).

       -~ or --tilde
	      Normally lines after end of file are displayed as a single tilde
	      (~).  This option causes lines after end of file to be displayed
	      as blank lines.

       -# or --shift
	      Specifies the default number of positions to scroll horizontally
	      in  the RIGHTARROW and LEFTARROW commands.  If the number speci-
	      fied is zero, it sets the default number	of  positions  to  one
	      half of the screen width.  Alternately, the number may be speci-
	      fied as a fraction of the width of the screen, starting  with  a
	      decimal  point:  .5  is  half  of  the screen width, .3 is three
	      tenths of the screen width, and so on.  If the number is	speci-
	      fied  as	a  fraction,  the actual number of scroll positions is
	      recalculated if the terminal window  is  resized,  so  that  the
	      actual  scroll  remains  at the specified fraction of the screen
	      width.

       --follow-name
	      Normally, if the input file is renamed while  an	F  command  is
	      executing,  less	will  continue	to display the contents of the
	      original file despite its  name  change.	 If  --follow-name  is
	      specified, during an F command less will periodically attempt to
	      reopen the file by name.	If the reopen succeeds and the file is
	      a  different file from the original (which means that a new file
	      has been created	with  the  same  name  as  the	original  (now
	      renamed) file), less will display the contents of that new file.

       --no-keypad
	      Disables sending the keypad initialization and  deinitialization
	      strings to the terminal.	This is sometimes useful if the keypad
	      strings make the numeric keypad behave in an undesirable manner.

       --use-backslash
	      This  option changes the interpretations of options which follow
	      this one.  After the --use-backslash option, any backslash in an
	      option  string  is  removed and the following character is taken
	      literally.  This allows a dollar sign to be included  in	option
	      strings.

       --     A  command  line	argument of ""--"" marks the end of option argu-
	      ments.  Any arguments following this are	interpreted  as  file-
	      names.  This can be useful when viewing a file whose name begins
	      with a ""-"" or ""+"".

       +      If a command line option begins with +, the  remainder  of  that
	      option  is taken to be an initial command to less.  For example,
	      +G tells less to start at the end of the file  rather  than  the
	      beginning,  and  +/xyz tells it to start at the first occurrence
	      of ""xyz"" in the file.  As a special case,  +<number>  acts  like
	      +<number>g; that is, it starts the display at the specified line
	      number (however, see the caveat under the  ""g""  command  above).
	      If  the  option  starts  with ++, the initial command applies to
	      every file being viewed, not just the first one.	The +  command
	      described previously may also be used to set (or change) an ini-
	      tial command for every file.


LINE EDITING
       When entering command line at the bottom of the screen (for example,  a
       filename for the :e command, or the pattern for a search command), cer-
       tain keys can be used to manipulate the command	line.	Most  commands
       have  an alternate form in [ brackets ] which can be used if a key does
       not exist on a particular keyboard.  (Note  that  the  forms  beginning
       with  ESC do not work in some MS-DOS and Windows systems because ESC is
       the line erase character.)  Any of these special keys  may  be  entered
       literally  by  preceding  it with the ""literal"" character, either ^V or
       ^A.  A backslash itself may also be entered literally by  entering  two
       backslashes.

       LEFTARROW [ ESC-h ]
	      Move the cursor one space to the left.

       RIGHTARROW [ ESC-l ]
	      Move the cursor one space to the right.

       ^LEFTARROW [ ESC-b or ESC-LEFTARROW ]
	      (That  is, CONTROL and LEFTARROW simultaneously.)  Move the cur-
	      sor one word to the left.

       ^RIGHTARROW [ ESC-w or ESC-RIGHTARROW ]
	      (That is, CONTROL and RIGHTARROW simultaneously.)  Move the cur-
	      sor one word to the right.

       HOME [ ESC-0 ]
	      Move the cursor to the beginning of the line.

       END [ ESC-$ ]
	      Move the cursor to the end of the line.

       BACKSPACE
	      Delete  the  character  to the left of the cursor, or cancel the
	      command if the command line is empty.

       DELETE or [ ESC-x ]
	      Delete the character under the cursor.

       ^BACKSPACE [ ESC-BACKSPACE ]
	      (That is, CONTROL and  BACKSPACE	simultaneously.)   Delete  the
	      word to the left of the cursor.

       ^DELETE [ ESC-X or ESC-DELETE ]
	      (That  is,  CONTROL and DELETE simultaneously.)  Delete the word
	      under the cursor.

       UPARROW [ ESC-k ]
	      Retrieve the previous command line.  If  you  first  enter  some
	      text  and then press UPARROW, it will retrieve the previous com-
	      mand which begins with that text.

       DOWNARROW [ ESC-j ]
	      Retrieve the next command line.  If you first  enter  some  text
	      and  then  press	DOWNARROW,  it	will retrieve the next command
	      which begins with that text.

       TAB    Complete the partial filename to the left of the cursor.	If  it
	      matches  more than one filename, the first match is entered into
	      the command line.  Repeated  TABs  will  cycle  thru  the  other
	      matching filenames.  If the completed filename is a directory, a
	      ""/"" is appended to the filename.	(On MS-DOS systems, a  ""\""  is
	      appended.)   The	environment variable LESSSEPARATOR can be used
	      to specify a different character to append to a directory  name.

       BACKTAB [ ESC-TAB ]
	      Like, TAB, but cycles in the reverse direction thru the matching
	      filenames.

       ^L     Complete the partial filename to the left of the cursor.	If  it
	      matches more than one filename, all matches are entered into the
	      command line (if they fit).

       ^U (Unix and OS/2) or ESC (MS-DOS)
	      Delete the entire command line, or cancel  the  command  if  the
	      command line is empty.  If you have changed your line-kill char-
	      acter in Unix to something other than ^U, that character is used
	      instead of ^U.

       ^G     Delete the entire command line and return to the main prompt.


KEY BINDINGS
       You  may define your own less commands by using the program lesskey (1)
       to create a lesskey file.  This file specifies a set  of  command  keys
       and  an	action	associated with each key.  You may also use lesskey to
       change the line-editing keys (see LINE EDITING), and to set environment
       variables.   If the environment variable LESSKEY is set, less uses that
       as the name of the lesskey file.  Otherwise, less looks in  a  standard
       place  for  the lesskey file: On Unix systems, less looks for a lesskey
       file called ""$HOME/.less"".  On MS-DOS and Windows systems,  less  looks
       for  a lesskey file called ""$HOME/_less"", and if it is not found there,
       then looks for a lesskey file called ""_less"" in any directory specified
       in  the	PATH  environment variable.  On OS/2 systems, less looks for a
       lesskey file called ""$HOME/less.ini"", and if  it  is  not  found,  then
       looks  for  a lesskey file called ""less.ini"" in any directory specified
       in the INIT environment variable, and if it not found there, then looks
       for  a lesskey file called ""less.ini"" in any directory specified in the
       PATH environment variable.   See  the  lesskey  manual  page  for  more
       details.

       A  system-wide lesskey file may also be set up to provide key bindings.
       If a key is defined in both a local lesskey file and in the system-wide
       file,  key bindings in the local file take precedence over those in the
       system-wide file.  If the environment variable LESSKEY_SYSTEM  is  set,
       less uses that as the name of the system-wide lesskey file.  Otherwise,
       less looks in a standard place for the  system-wide  lesskey  file:  On
       Unix  systems,  the system-wide lesskey file is /usr/local/etc/sysless.
       (However, if less was built with a  different  sysconf  directory  than
       /usr/local/etc, that directory is where the sysless file is found.)  On
       MS-DOS and Windows systems, the system-wide lesskey  file  is  c:\_sys-
       less.  On OS/2 systems, the system-wide lesskey file is c:\sysless.ini.


INPUT PREPROCESSOR
       You may define an ""input preprocessor"" for less.  Before less  opens  a
       file, it first gives your input preprocessor a chance to modify the way
       the contents of the file are displayed.	An input preprocessor is  sim-
       ply  an executable program (or shell script), which writes the contents
       of the file to a different file, called the replacement file.  The con-
       tents  of  the replacement file are then displayed in place of the con-
       tents of the original file.  However, it will appear to the user as  if
       the  original  file  is opened; that is, less will display the original
       filename as the name of the current file.

       An input preprocessor receives one command line argument, the  original
       filename,  as  entered  by  the user.  It should create the replacement
       file, and when finished, print the name of the replacement file to  its
       standard  output.  If the input preprocessor does not output a replace-
       ment filename, less uses the original file, as normal.  The input  pre-
       processor  is  not  called  when  viewing standard input.  To set up an
       input preprocessor, set the LESSOPEN environment variable to a  command
       line  which  will  invoke  your	input preprocessor.  This command line
       should include one  occurrence  of  the	string	""%s"",  which  will  be
       replaced  by  the  filename  when  the  input  preprocessor  command is
       invoked.

       When less closes a file opened in such a way, it will call another pro-
       gram,  called  the  input  postprocessor, which may perform any desired
       clean-up action (such as  deleting  the	replacement  file  created  by
       LESSOPEN).  This program receives two command line arguments, the orig-
       inal filename as entered by the user, and the name of  the  replacement
       file.   To set up an input postprocessor, set the LESSCLOSE environment
       variable to a command line which will invoke your input	postprocessor.
       It  may	include  two  occurrences  of  the  string  ""%s""; the first is
       replaced with the original name of the file and	the  second  with  the
       name of the replacement file, which was output by LESSOPEN.

       For  example, on many Unix systems, these two scripts will allow you to
       keep files in compressed format, but still let less view them directly:

       lessopen.sh:
	    #! /bin/sh
	    case ""$1"" in
	    *.Z) uncompress -c $1  >/tmp/less.$$  2>/dev/null
		 if [ -s /tmp/less.$$ ]; then
		      echo /tmp/less.$$
		 else
		      rm -f /tmp/less.$$
		 fi
		 ;;
	    esac

       lessclose.sh:
	    #! /bin/sh
	    rm $2

       To  use these scripts, put them both where they can be executed and set
       LESSOPEN=""lessopen.sh %s"",  and	LESSCLOSE=""lessclose.sh %s %s"".   More
       complex	LESSOPEN  and LESSCLOSE scripts may be written to accept other
       types of compressed files, and so on.

       It is also possible to set up an input preprocessor to  pipe  the  file
       data  directly to less, rather than putting the data into a replacement
       file.  This avoids the need to decompress the entire file before start-
       ing to view it.	An input preprocessor that works this way is called an
       input pipe.  An input pipe, instead of writing the name of  a  replace-
       ment  file  on  its  standard output, writes the entire contents of the
       replacement file on its standard output.  If the input  pipe  does  not
       write  any characters on its standard output, then there is no replace-
       ment file and less uses the original file, as normal.  To use an  input
       pipe,  make  the first character in the LESSOPEN environment variable a
       vertical bar (|) to signify that the input  preprocessor  is  an  input
       pipe.

       For  example, on many Unix systems, this script will work like the pre-
       vious example scripts:

       lesspipe.sh:
	    #! /bin/sh
	    case ""$1"" in
	    *.Z) uncompress -c $1  2>/dev/null
	    *)	 exit 1
		 ;;
	    esac
	    exit $?

       To  use	this  script,  put  it	where  it  can	be  executed  and  set
       LESSOPEN=""|lesspipe.sh %s"".

       Note  that  a  preprocessor  cannot output an empty file, since that is
       interpreted as meaning there is no replacement, and the	original  file
       is used.  To avoid this, if LESSOPEN starts with two vertical bars, the
       exit status of the script becomes meaningful.  If the  exit  status  is
       zero,  the  output  is  considered  to  be replacement text, even if it
       empty.  If the exit status is nonzero, any output is  ignored  and  the
       original  file  is  used.   For compatibility with previous versions of
       less, if LESSOPEN starts with only one vertical bar, the exit status of
       the preprocessor is ignored.

       When  an input pipe is used, a LESSCLOSE postprocessor can be used, but
       it is usually not necessary since there is no replacement file to clean
       up.   In  this  case, the replacement file name passed to the LESSCLOSE
       postprocessor is ""-"".

       For compatibility with previous versions of less, the input  preproces-
       sor or pipe is not used if less is viewing standard input.  However, if
       the first character of LESSOPEN is a dash (-), the  input  preprocessor
       is  used  on  standard input as well as other files.  In this case, the
       dash is not considered to be part  of  the  preprocessor  command.   If
       standard input is being viewed, the input preprocessor is passed a file
       name consisting of a single dash.  Similarly, if the first two  charac-
       ters  of  LESSOPEN  are vertical bar and dash (|-) or two vertical bars
       and a dash (||-), the input pipe is used on standard input as  well  as
       other files.  Again, in this case the dash is not considered to be part
       of the input pipe command.


NATIONAL CHARACTER SETS
       There are three types of characters in the input file:

       normal characters
	      can be displayed directly to the screen.

       control characters
	      should not be displayed directly, but are expected to  be  found
	      in ordinary text files (such as backspace and tab).

       binary characters
	      should  not  be  displayed  directly  and are not expected to be
	      found in text files.

       A ""character set"" is simply a description of which characters are to be
       considered  normal,  control,  and binary.  The LESSCHARSET environment
       variable may be used to select a character set.	 Possible  values  for
       LESSCHARSET are:

       ascii  BS,  TAB, NL, CR, and formfeed are control characters, all chars
	      with values between 32 and 126 are normal, and  all  others  are
	      binary.

       iso8859
	      Selects  an  ISO 8859 character set.  This is the same as ASCII,
	      except characters between 160 and  255  are  treated  as	normal
	      characters.

       latin1 Same as iso8859.

       latin9 Same as iso8859.

       dos    Selects a character set appropriate for MS-DOS.

       ebcdic Selects an EBCDIC character set.

       IBM-1047
	      Selects  an  EBCDIC  character set used by OS/390 Unix Services.
	      This is the EBCDIC analogue of latin1.  You get similar  results
	      by setting either LESSCHARSET=IBM-1047 or LC_CTYPE=en_US in your
	      environment.

       koi8-r Selects a Russian character set.

       next   Selects a character set appropriate for NeXT computers.

       utf-8  Selects the UTF-8 encoding  of  the  ISO	10646  character  set.
	      UTF-8  is  special  in that it supports multi-byte characters in
	      the input file.  It is the  only	character  set	that  supports
	      multi-byte characters.

       windows
	      Selects  a  character  set appropriate for Microsoft Windows (cp
	      1251).

       In rare cases, it may be desired to tailor less to use a character  set
       other  than the ones definable by LESSCHARSET.  In this case, the envi-
       ronment variable LESSCHARDEF can be used to define a character set.  It
       should be set to a string where each character in the string represents
       one character in the character set.  The character ""."" is  used	for  a
       normal  character, ""c"" for control, and ""b"" for binary.	A decimal num-
       ber may be used for repetition.	 For  example,	""bccc4b.""  would  mean
       character  0  is  binary,  1,  2  and  3 are control, 4, 5, 6 and 7 are
       binary, and 8 is normal.  All characters after the last are taken to be
       the  same  as  the  last,  so characters 9 through 255 would be normal.
       (This is an example, and does not necessarily represent any real  char-
       acter set.)

       This  table  shows the value of LESSCHARDEF which is equivalent to each
       of the possible values for LESSCHARSET:

	    ascii     8bcccbcc18b95.b
	    dos       8bcccbcc12bc5b95.b.
	    ebcdic    5bc6bcc7bcc41b.9b7.9b5.b..8b6.10b6.b9.7b
		      9.8b8.17b3.3b9.7b9.8b8.6b10.b.b.b.
	    IBM-1047  4cbcbc3b9cbccbccbb4c6bcc5b3cbbc4bc4bccbc
		      191.b
	    iso8859   8bcccbcc18b95.33b.
	    koi8-r    8bcccbcc18b95.b128.
	    latin1    8bcccbcc18b95.33b.
	    next      8bcccbcc18b95.bb125.bb

       If neither LESSCHARSET nor LESSCHARDEF is set, but any of  the  strings
       ""UTF-8"",  ""UTF8"", ""utf-8"" or ""utf8"" is found in the LC_ALL, LC_CTYPE or
       LANG environment variables, then the default character set is utf-8.

       If that string is not found, but your  system  supports	the  setlocale
       interface,  less  will  use  setlocale  to determine the character set.
       setlocale is controlled by setting the  LANG  or  LC_CTYPE  environment
       variables.

       Finally,  if the setlocale interface is also not available, the default
       character set is latin1.

       Control and  binary  characters	are  displayed	in  standout  (reverse
       video).	Each such character is displayed in caret notation if possible
       (e.g. ^A for control-A).  Caret notation is used only if inverting  the
       0100 bit results in a normal printable character.  Otherwise, the char-
       acter is displayed as a hex number in angle brackets.  This format  can
       be  changed by setting the LESSBINFMT environment variable.  LESSBINFMT
       may begin with a ""*"" and one character to select the display attribute:
       ""*k""  is  blinking, ""*d"" is bold, ""*u"" is underlined, ""*s"" is standout,
       and ""*n"" is normal.  If LESSBINFMT does not begin with  a  ""*"",	normal
       attribute  is  assumed.	 The remainder of LESSBINFMT is a string which
       may include one printf-style escape sequence (a % followed by x, X,  o,
       d,  etc.).   For  example, if LESSBINFMT is ""*u[%x]"", binary characters
       are displayed in underlined hexadecimal surrounded  by  brackets.   The
       default	if  no	LESSBINFMT  is	specified is ""*s<%02X>"".  Warning: the
       result of expanding the character via LESSBINFMT must be less  than  31
       characters.

       When the character set is utf-8, the LESSUTFBINFMT environment variable
       acts similarly to LESSBINFMT but it applies to Unicode code points that
       were  successfully  decoded but are unsuitable for display (e.g., unas-
       signed code points).  Its default  value  is  ""<U+%04lX>"".   Note  that
       LESSUTFBINFMT  and  LESSBINFMT  share  their  display attribute setting
       (""*x"") so specifying one will affect both; LESSUTFBINFMT is read  after
       LESSBINFMT  so  its  setting,  if any, will have priority.  Problematic
       octets in a UTF-8 file (octets of a truncated  sequence,  octets  of  a
       complete  but  non-shortest  form  sequence,  illegal octets, and stray
       trailing octets) are displayed individually using LESSBINFMT so	as  to
       facilitate diagnostic of how the UTF-8 file is ill-formed.


PROMPTS
       The  -P option allows you to tailor the prompt to your preference.  The
       string given to the -P option replaces  the  specified  prompt  string.
       Certain characters in the string are interpreted specially.  The prompt
       mechanism is rather complicated to provide flexibility, but  the  ordi-
       nary  user need not understand the details of constructing personalized
       prompt strings.

       A percent sign followed by a single character is expanded according  to
       what the following character is:

       %bX    Replaced	by the byte offset into the current input file.  The b
	      is followed by a single character (shown as X above) which spec-
	      ifies  the line whose byte offset is to be used.	If the charac-
	      ter is a ""t"", the byte offset of the top line in the display  is
	      used, an ""m"" means use the middle line, a ""b"" means use the bot-
	      tom line, a ""B"" means use the line just after the  bottom  line,
	      and  a  ""j""  means use the ""target"" line, as specified by the -j
	      option.

       %B     Replaced by the size of the current input file.

       %c     Replaced by the column number of the text appearing in the first
	      column of the screen.

       %dX    Replaced	by  the  page number of a line in the input file.  The
	      line to be used is determined by the X, as with the %b option.

       %D     Replaced by the number of pages in the input  file,  or  equiva-
	      lently, the page number of the last line in the input file.

       %E     Replaced	by the name of the editor (from the VISUAL environment
	      variable, or the EDITOR environment variable if  VISUAL  is  not
	      defined).  See the discussion of the LESSEDIT feature below.

       %f     Replaced by the name of the current input file.

       %F     Replaced	by the last component of the name of the current input
	      file.

       %i     Replaced by the index of the current file in the list  of  input
	      files.

       %lX    Replaced	by  the  line number of a line in the input file.  The
	      line to be used is determined by the X, as with the %b option.

       %L     Replaced by the line number of the last line in the input  file.

       %m     Replaced by the total number of input files.

       %pX    Replaced	by  the  percent into the current input file, based on
	      byte offsets.  The line used is determined by the X as with  the
	      %b option.

       %PX    Replaced	by  the  percent into the current input file, based on
	      line numbers.  The line used is determined by the X as with  the
	      %b option.

       %s     Same as %B.

       %t     Causes  any  trailing spaces to be removed.  Usually used at the
	      end of the string, but may appear anywhere.

       %T     Normally expands to the word ""file"".  However if	viewing  files
	      via  a  tags  list  using  the -t option, it expands to the word
	      ""tag"".

       %x     Replaced by the name of the next input file in the list.

       If any item is unknown (for example, the file size if input is a pipe),
       a question mark is printed instead.

       The  format  of	the  prompt string can be changed depending on certain
       conditions.  A question mark followed by a single character  acts  like
       an  ""IF"":  depending  on the following character, a condition is evalu-
       ated.  If the condition is true, any characters following the  question
       mark  and  condition  character,  up  to  a period, are included in the
       prompt.	If the condition is false, such characters are	not  included.
       A  colon appearing between the question mark and the period can be used
       to establish an ""ELSE"": any characters between the colon and the period
       are  included  in  the string if and only if the IF condition is false.
       Condition characters (which follow a question mark) may be:

       ?a     True if any characters have been included in the prompt so  far.

       ?bX    True if the byte offset of the specified line is known.

       ?B     True if the size of current input file is known.

       ?c     True if the text is horizontally shifted (%c is not zero).

       ?dX    True if the page number of the specified line is known.

       ?e     True if at end-of-file.

       ?f     True  if	there is an input filename (that is, if input is not a
	      pipe).

       ?lX    True if the line number of the specified line is known.

       ?L     True if the line number of the last line in the file is known.

       ?m     True if there is more than one input file.

       ?n     True if this is the first prompt in a new input file.

       ?pX    True if the percent into the current input file, based  on  byte
	      offsets, of the specified line is known.

       ?PX    True  if	the percent into the current input file, based on line
	      numbers, of the specified line is known.

       ?s     Same as ""?B"".

       ?x     True if there is a next input file  (that  is,  if  the  current
	      input file is not the last one).

       Any  characters	other  than  the  special  ones (question mark, colon,
       period, percent, and backslash) become literally part  of  the  prompt.
       Any  of	the special characters may be included in the prompt literally
       by preceding it with a backslash.

       Some examples:

       ?f%f:Standard input.

       This prompt prints the filename, if known; otherwise the string	""Stan-
       dard input"".

       ?f%f .?ltLine %lt:?pt%pt\%:?btByte %bt:-...

       This  prompt  would print the filename, if known.  The filename is fol-
       lowed by the line number, if known, otherwise  the  percent  if	known,
       otherwise  the  byte  offset  if  known.  Otherwise, a dash is printed.
       Notice how each question mark has a matching  period,  and  how	the  %
       after the %pt is included literally by escaping it with a backslash.

       ?n?f%f .?m(%T %i of %m) ..?e(END) ?x- Next\: %x..%t"";

       This  prints  the  filename if this is the first prompt in a file, fol-
       lowed by the ""file N of N"" message if there  is	more  than  one  input
       file.   Then,  if  we are at end-of-file, the string ""(END)"" is printed
       followed by the name of the next file, if there is one.	 Finally,  any
       trailing spaces are truncated.  This is the default prompt.  For refer-
       ence, here are the defaults for	the  other  two  prompts  (-m  and  -M
       respectively).	Each  is  broken  into	two lines here for readability
       only.

       ?n?f%f .?m(%T %i of %m) ..?e(END) ?x- Next\: %x.:
	    ?pB%pB\%:byte %bB?s/%s...%t

       ?f%f .?n?m(%T %i of %m) ..?ltlines %lt-%lb?L/%L. :
	    byte %bB?s/%s. .?e(END) ?x- Next\: %x.:?pB%pB\%..%t

       And here is the default message produced by the = command:

       ?f%f .?m(%T %i of %m) .?ltlines %lt-%lb?L/%L. .
	    byte %bB?s/%s. ?e(END) :?pB%pB\%..%t

       The prompt expansion features are also used for another purpose: if  an
       environment  variable LESSEDIT is defined, it is used as the command to
       be executed when the v command is  invoked.   The  LESSEDIT  string  is
       expanded  in the same way as the prompt strings.  The default value for
       LESSEDIT is:

	    %E ?lm+%lm. %f

       Note that this expands to the editor name, followed by a + and the line
       number,	followed by the file name.  If your editor does not accept the
       ""+linenumber"" syntax, or has other differences  in  invocation  syntax,
       the LESSEDIT variable can be changed to modify this default.


SECURITY
       When  the  environment  variable LESSSECURE is set to 1, less runs in a
       ""secure"" mode.  This means these features are disabled:

	      !      the shell command

	      |      the pipe command

	      :e     the examine command.

	      v      the editing command

	      s  -o  log files

	      -k     use of lesskey files

	      -t     use of tags files

		     metacharacters in filenames, such as *

		     filename completion (TAB, ^L)

       Less can also be compiled to be permanently in ""secure"" mode.


COMPATIBILITY WITH MORE
       If the environment variable LESS_IS_MORE is set to 1, or if the program
       is  invoked via a file link named ""more"", less behaves (mostly) in con-
       formance with the POSIX ""more"" command specification.   In  this  mode,
       less behaves differently in these ways:

       The  -e	option	works  differently.  If the -e option is not set, less
       behaves as if the -e option were set.  If the -e option	is  set,  less
       behaves as if the -E option were set.

       The  -m	option	works  differently.   If the -m option is not set, the
       medium prompt is used, and it is prefixed with the  string  ""--More--"".
       If the -m option is set, the short prompt is used.

       The  -n	option acts like the -z option.  The normal behavior of the -n
       option is unavailable in this mode.

       The parameter to the -p option is taken to be  a  less  command	rather
       than a search pattern.

       The  LESS  environment  variable  is  ignored, and the MORE environment
       variable is used in its place.


ENVIRONMENT VARIABLES
       Environment variables may be specified either in the system environment
       as  usual,  or  in  a  lesskey  (1) file.  If environment variables are
       defined in more than one place, variables defined in  a	local  lesskey
       file  take precedence over variables defined in the system environment,
       which take precedence over variables defined in the system-wide lesskey
       file.

       COLUMNS
	      Sets the number of columns on the screen.  Takes precedence over
	      the number of columns specified by the TERM variable.   (But  if
	      you  have  a  windowing  system  which  supports	TIOCGWINSZ  or
	      WIOCGETD, the window system's idea  of  the  screen  size  takes
	      precedence over the LINES and COLUMNS environment variables.)

       EDITOR The name of the editor (used for the v command).

       HOME   Name  of	the user's home directory (used to find a lesskey file
	      on Unix and OS/2 systems).

       HOMEDRIVE, HOMEPATH
	      Concatenation of the HOMEDRIVE and  HOMEPATH  environment  vari-
	      ables is the name of the user's home directory if the HOME vari-
	      able is not set (only in the Windows version).

       INIT   Name of the user's init directory (used to find a  lesskey  file
	      on OS/2 systems).

       LANG   Language for determining the character set.

       LC_CTYPE
	      Language for determining the character set.

       LESS   Options which are passed to less automatically.

       LESSANSIENDCHARS
	      Characters  which may end an ANSI color escape sequence (default
	      ""m"").

       LESSANSIMIDCHARS
	      Characters which may appear between the ESC  character  and  the
	      end   character  in  an  ANSI  color  escape  sequence  (default
	      ""0123456789:;[?!""'#%()*+ "".

       LESSBINFMT
	      Format for displaying non-printable, non-control characters.

       LESSCHARDEF
	      Defines a character set.

       LESSCHARSET
	      Selects a predefined character set.

       LESSCLOSE
	      Command line to invoke the (optional) input-postprocessor.

       LESSECHO
	      Name of the lessecho program (default ""lessecho"").  The lessecho
	      program  is needed to expand metacharacters, such as * and ?, in
	      filenames on Unix systems.

       LESSEDIT
	      Editor prototype string (used for the v command).   See  discus-
	      sion under PROMPTS.

       LESSGLOBALTAGS
	      Name  of	the command used by the -t option to find global tags.
	      Normally should be set to ""global"" if your system has the global
	      (1) command.  If not set, global tags are not used.

       LESSHISTFILE
	      Name  of	the  history file used to remember search commands and
	      shell commands between invocations of less.  If set  to  ""-""  or
	      ""/dev/null"",  a  history	file  is  not  used.   The  default is
	      ""$HOME/.lesshst"" on Unix systems, ""$HOME/_lesshst""  on  DOS  and
	      Windows  systems,  or ""$HOME/lesshst.ini"" or ""$INIT/lesshst.ini""
	      on OS/2 systems.

       LESSHISTSIZE
	      The maximum number of commands to save in the history file.  The
	      default is 100.

       LESSKEY
	      Name of the default lesskey(1) file.

       LESSKEY_SYSTEM
	      Name of the default system-wide lesskey(1) file.

       LESSMETACHARS
	      List  of characters which are considered ""metacharacters"" by the
	      shell.

       LESSMETAESCAPE
	      Prefix which less will add before each metacharacter in  a  com-
	      mand  sent  to the shell.  If LESSMETAESCAPE is an empty string,
	      commands containing metacharacters will not  be  passed  to  the
	      shell.

       LESSOPEN
	      Command line to invoke the (optional) input-preprocessor.

       LESSSECURE
	      Runs less in ""secure"" mode.  See discussion under SECURITY.

       LESSSEPARATOR
	      String  to  be  appended to a directory name in filename comple-
	      tion.

       LESSUTFBINFMT
	      Format for displaying non-printable Unicode code points.

       LESS_IS_MORE
	      Emulate the more (1) command.

       LINES  Sets the number of lines on the screen.  Takes  precedence  over
	      the number of lines specified by the TERM variable.  (But if you
	      have a windowing system which supports TIOCGWINSZ  or  WIOCGETD,
	      the  window  system's  idea  of the screen size takes precedence
	      over the LINES and COLUMNS environment variables.)

       MORE   Options which are passed to less automatically when  running  in
	      more compatible mode.

       PATH   User's  search  path  (used to find a lesskey file on MS-DOS and
	      OS/2 systems).

       SHELL  The shell used to execute the ! command, as well	as  to	expand
	      filenames.

       TERM   The type of terminal on which less is being run.

       VISUAL The name of the editor (used for the v command).


SEE ALSO
       lesskey(1)


COPYRIGHT
       Copyright (C) 1984-2016	Mark Nudelman

       less  is  part of the GNU project and is free software.	You can redis-
       tribute it and/or modify it under the terms of either (1) the GNU  Gen-
       eral  Public  License  as published by the Free Software Foundation; or
       (2) the Less License.  See the file README in the less distribution for
       more details regarding redistribution.  You should have received a copy
       of the GNU General Public License along with the source for  less;  see
       the  file  COPYING.   If not, write to the Free Software Foundation, 59
       Temple Place, Suite 330, Boston, MA  02111-1307, USA.  You should  also
       have received a copy of the Less License; see the file LICENSE.

       less is distributed in the hope that it will be useful, but WITHOUT ANY
       WARRANTY; without even the implied warranty of MERCHANTABILITY or  FIT-
       NESS  FOR A PARTICULAR PURPOSE.	See the GNU General Public License for
       more details.


AUTHOR
       Mark Nudelman
       Send bug reports or comments to <bug-less@gnu.org>
       See http://www.greenwoodsoftware.com/less/bugs.html for the latest list
       of known bugs in less.
       For more information, see the less homepage at
       http://www.greenwoodsoftware.com/less.



			   Version 487: 25 Oct 2016		       LESS(1)
","# more

> Display paginated output from `stdin` or a file.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/more>.

- Display paginated output from `stdin`:

`{{echo test}} | more`

- Display paginated output from one or more files:

`more {{path/to/file}}`

- Convert tabs to the specified number of spaces:

`more {{path/to/file}} /t{{spaces}}`

- Clear the screen before displaying the page:

`more {{path/to/file}} /c`

- Display the output starting at line 5:

`more {{path/to/file}} +{{5}}`

- Enable extended interactive mode (see help for usage):

`more {{path/to/file}} /e`

- Display full usage information:

`more /?`
"
explorer,,,,"# explorer

> The Windows File Explorer.

- Open Windows Explorer:

`explorer`

- Open Windows Explorer in the current directory:

`explorer .`

- Open Windows Explorer in a specific directory:

`explorer {{path/to/directory}}`
"
cipher,,,,"# cipher

> Encrypt or decrypt files on NTFS drives.

- Encrypt a file or directory:

`cipher /e:{{path/to/file_or_directory}}`

- Decrypt a file or directory:

`cipher /d:{{path/to/file_or_directory}}`

- Securely remove a file or directory:

`cipher /w:{{path/to/file_or_directory}}`
"
mkdir,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/mkdir,"





































mkdir | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















mkdir


10/16/2017

2 minutes to read













In this article


Creates a directory or subdirectory. Command extensions, which are enabled by default, allow you to use a single mkdir command to create intermediate directories in a specified path.

Note
This command is the same as the md command.

Syntax
mkdir [<drive>:]<path>

Parameters



Parameter
Description




<drive>:
Specifies the drive on which you want to create the new directory.


<path>
Specifies the name and location of the new directory. The maximum length of any single path is determined by the file system. This is a required parameter.


/?
Displays help at the command prompt.



Examples
To create a directory named Directory1 within the current directory, type:
mkdir Directory1

To create the directory tree Taxes\Property\Current within the root directory, with command extensions enabled, type:
mkdir \Taxes\Property\Current

To create the directory tree Taxes\Property\Current within the root directory as in the previous example, but with command extensions disabled, type the following sequence of commands:
mkdir \Taxes
mkdir \Taxes\Property
mkdir \Taxes\Property\Current

Additional References

Command-Line Syntax Key

md command









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
MKDIR(1)		  BSD General Commands Manual		      MKDIR(1)

NAME
     mkdir -- make directories

SYNOPSIS
     mkdir [-pv] [-m mode] directory_name ...

DESCRIPTION
     The mkdir utility creates the directories named as operands, in the order
     specified, using mode rwxrwxrwx (0777) as modified by the current
     umask(2).

     The options are as follows:

     -m mode
	     Set the file permission bits of the final created directory to
	     the specified mode.  The mode argument can be in any of the for-
	     mats specified to the chmod(1) command.  If a symbolic mode is
	     specified, the operation characters ``+'' and ``-'' are inter-
	     preted relative to an initial mode of ``a=rwx''.

     -p      Create intermediate directories as required.  If this option is
	     not specified, the full path prefix of each operand must already
	     exist.  On the other hand, with this option specified, no error
	     will be reported if a directory given as an operand already
	     exists.  Intermediate directories are created with permission
	     bits of rwxrwxrwx (0777) as modified by the current umask, plus
	     write and search permission for the owner.

     -v      Be verbose when creating directories, listing them as they are
	     created.

     The user must have write permission in the parent directory.

DIAGNOSTICS
     The mkdir utility exits 0 on success, and >0 if an error occurs.

SEE ALSO
     rmdir(1)

COMPATIBILITY
     The -v option is non-standard and its use in scripts is not recommended.

STANDARDS
     The mkdir utility is expected to be IEEE Std 1003.2 (``POSIX.2'') compat-
     ible.

HISTORY
     A mkdir command appeared in Version 1 AT&T UNIX.

BSD			       January 25, 1994 			   BSD
","# mkdir

> Creates a directory.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/mkdir>.

- Create a directory:

`mkdir {{directory_name}}`

- Recursively create a nested directory tree:

`mkdir {{path/to/sub_directory_name}}`
"
forfiles,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/forfiles,"





































forfiles | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















forfiles


05/20/2020

3 minutes to read








+3





In this article


Selects and runs a command on a file or set of files. This command is most commonly used in batch files.
Syntax
forfiles [/P pathname] [/M searchmask] [/S] [/C command] [/D [+ | -] [{<date> | <days>}]]

Parameters



Parameter
Description




/P <pathname>
Specifies the path from which to start the search. By default, searching starts in the current working directory.


/M <searchmask>
Searches files according to the specified search mask. The default searchmask is *.


/S
Instructs the forfiles command to search in subdirectories recursively.


/C <command>
Runs the specified command on each file. Command strings should be wrapped in double quotes. The default command is ""cmd /c echo @file"".


/D [{+\|-}][{<date> | <days>}]
Selects files with a last modified date within the specified time frame:Selects files with a last modified date later than or equal to (+) or earlier than or equal to (-) the specified date, where date is in the format MM/DD/YYYY.Selects files with a last modified date later than or equal to (+) the current date plus the number of days specified, or earlier than or equal to (-) the current date minus the number of days specified.Valid values for days include any number in the range 0â32,768. If no sign is specified, + is used by default.


/?
Displays the help text in the cmd window.



Remarks

The forfiles /S command is similar to dir /S.

You can use the following variables in the command string as specified by the /C command-line option:



Variable
Description




@FILE
File name.


@FNAME
File name without extension.


@EXT
File name extension.


@PATH
Full path of the file.


@RELPATH
Relative path of the file.


@ISDIR
Evaluates to TRUE if a file type is a directory. Otherwise, this variable evaluates to FALSE.


@FSIZE
File size, in bytes.


@FDATE
Last modified date stamp on the file.


@FTIME
Last modified time stamp on the file.




The forfiles command lets you run a command on or pass arguments to multiple files. For example, you could run the type command on all files in a tree with the .txt file name extension. Or you could execute every batch file (*.bat) on drive C, with the file name Myinput.txt as the first argument.

This command can:

Select files by an absolute date or a relative date by using the /d parameter.

Build an archive tree of files by using variables such as @FSIZE and @FDATE.

Differentiate files from directories by using the @ISDIR variable.

Include special characters in the command line by using the hexadecimal code for the character, in 0xHH format (for example, 0x09 for a tab).



This command works by implementing the recurse subdirectories flag on tools that are designed to process only a single file.


Examples
To list all of the batch files on drive C, type:
forfiles /P c:\ /S /M *.bat /C ""cmd /c echo @file is a batch file""

To list all of the directories on drive C, type:
forfiles /P c:\ /S /M *.* /C ""cmd /c if @isdir==TRUE echo @file is a directory""

To list all of the files in the current directory that are at least one year old, type:
forfiles /S /M *.* /D -365 /C ""cmd /c echo @file is at least one year old.""

To display the text file is outdated for each of the files in the current directory that are older than January 1, 2007, type:
forfiles /S /M *.* /D -01/01/2007 /C ""cmd /c echo @file is outdated.""

To list the file name extensions of all the files in the current directory in column format, and add a tab before the extension, type:
forfiles /S /M *.* /C ""cmd /c echo The extension of @file is 0x09@ext""

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# forfiles

> Select one or more files to execute a specified command on.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/forfiles>.

- Search for files in the current directory:

`forfiles`

- Search for files in a specific directory:

`forfiles /p {{path/to/directory}}`

- Run the specified command for each file:

`forfiles /c ""{{command}}""`

- Search for files using a specific glob mask:

`forfiles /m {{glob_pattern}}`

- Search for files recursively:

`forfiles /s`

- Search for files older than 5 days:

`forfiles /d {{+5}}`
"
popd,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/popd,"





































popd | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















popd


07/11/2018

2 minutes to read












In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

The popd command changes the current directory to the directory that was most recently stored by the pushd command.
Every time you use the pushd command, a single directory is stored for your use. However, you can store multiple directories by using the pushd command multiple times. The directories are stored sequentially in a virtual stack, so if you use the pushd command once, the directory in which you use the command is placed at the bottom of the stack. If you use the command again, the second directory is placed on top of the first one. The process repeats every time you use the pushd command.
If you use the popd command, the directory on the top of the stack is removed and the current directory is changed to that directory. If you use the popd command again, the next directory on the stack is removed. If command extensions are enabled, the popd command removes any drive-letter assignations created by the pushd command.
Syntax
popd

Parameters



Parameter
Description




/?
Displays help at the command prompt.



Examples
To change the current directory from the one in which the batch program was run, and then to change it back, type:
@echo off
rem This batch file deletes all .txt files in a specified directory
pushd %1
del *.txt
popd
cls
echo All text files deleted in the %1 directory

Additional References

Command-Line Syntax Key

pushd









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
BUILTIN(1)		  BSD General Commands Manual		    BUILTIN(1)

NAME
     builtin, !, %, ., :, @, {, }, alias, alloc, bg, bind, bindkey, break,
     breaksw, builtins, case, cd, chdir, command, complete, continue, default,
     dirs, do, done, echo, echotc, elif, else, end, endif, endsw, esac, eval,
     exec, exit, export, false, fc, fg, filetest, fi, for, foreach, getopts,
     glob, goto, hash, hashstat, history, hup, if, jobid, jobs, kill, limit,
     local, log, login, logout, ls-F, nice, nohup, notify, onintr, popd,
     printenv, pushd, pwd, read, readonly, rehash, repeat, return, sched, set,
     setenv, settc, setty, setvar, shift, source, stop, suspend, switch,
     telltc, test, then, time, times, trap, true, type, ulimit, umask,
     unalias, uncomplete, unhash, unlimit, unset, unsetenv, until, wait,
     where, which, while -- shell built-in commands

SYNOPSIS
     builtin [-options] [args ...]

DESCRIPTION
     Shell builtin commands are commands that can be executed within the run-
     ning shell's process.  Note that, in the case of csh(1) builtin commands,
     the command is executed in a subshell if it occurs as any component of a
     pipeline except the last.

     If a command specified to the shell contains a slash ``/'', the shell
     will not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying ``echo'' causes a builtin command to be executed under shells
     that support the echo builtin command, specifying ``/bin/echo'' or
     ``./echo'' does not.

     While some builtin commands may exist in more than one shell, their oper-
     ation may be different under each shell which supports them.  Below is a
     table which lists shell builtin commands, the standard shells that sup-
     port them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.	Beware that the sh(1) manual page, at least, calls some of
     these commands ``built-in commands'' and some of them ``reserved words''.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked ``No**'' under External do exist externally, but are
     implemented as scripts using a builtin command of the same name.

	   Command	 External    csh(1)    sh(1)
	   !		 No	     No        Yes
	   %		 No	     Yes       No
	   .		 No	     No        Yes
	   :		 No	     Yes       Yes
	   @		 No	     Yes       Yes
	   {		 No	     No        Yes
	   }		 No	     No        Yes
	   alias	 No**	     Yes       Yes
	   alloc	 No	     Yes       No
	   bg		 No**	     Yes       Yes
	   bind 	 No	     No        Yes
	   bindkey	 No	     Yes       No
	   break	 No	     Yes       Yes
	   breaksw	 No	     Yes       No
	   builtin	 No	     No        Yes
	   builtins	 No	     Yes       No
	   case 	 No	     Yes       Yes
	   cd		 No**	     Yes       Yes
	   chdir	 No	     Yes       Yes
	   command	 No**	     No        Yes
	   complete	 No	     Yes       No
	   continue	 No	     Yes       Yes
	   default	 No	     Yes       No
	   dirs 	 No	     Yes       No
	   do		 No	     No        Yes
	   done 	 No	     No        Yes
	   echo 	 Yes	     Yes       Yes
	   echotc	 No	     Yes       No
	   elif 	 No	     No        Yes
	   else 	 No	     Yes       Yes
	   end		 No	     Yes       No
	   endif	 No	     Yes       No
	   endsw	 No	     Yes       No
	   esac 	 No	     No        Yes
	   eval 	 No	     Yes       Yes
	   exec 	 No	     Yes       Yes
	   exit 	 No	     Yes       Yes
	   export	 No	     No        Yes
	   false	 Yes	     No        Yes
	   fc		 No**	     No        Yes
	   fg		 No**	     Yes       Yes
	   filetest	 No	     Yes       No
	   fi		 No	     No        Yes
	   for		 No	     No        Yes
	   foreach	 No	     Yes       No
	   getopts	 No**	     No        Yes
	   glob 	 No	     Yes       No
	   goto 	 No	     Yes       No
	   hash 	 No	     No        Yes
	   hashstat	 No	     Yes       No
	   history	 No	     Yes       No
	   hup		 No	     Yes       No
	   if		 No	     Yes       Yes
	   jobid	 No	     No        Yes
	   jobs 	 No**	     Yes       Yes
	   kill 	 Yes	     Yes       No
	   limit	 No	     Yes       No
	   local	 No	     No        Yes
	   log		 No	     Yes       No
	   login	 Yes	     Yes       No
	   logout	 No	     Yes       No
	   ls-F 	 No	     Yes       No
	   nice 	 Yes	     Yes       No
	   nohup	 Yes	     Yes       No
	   notify	 No	     Yes       No
	   onintr	 No	     Yes       No
	   popd 	 No	     Yes       No
	   printenv	 Yes	     Yes       No
	   pushd	 No	     Yes       No
	   pwd		 Yes	     No        Yes
	   read 	 No**	     No        Yes
	   readonly	 No	     No        Yes
	   rehash	 No	     Yes       No
	   repeat	 No	     Yes       No
	   return	 No	     No        Yes
	   sched	 No	     Yes       No
	   set		 No	     Yes       Yes
	   setenv	 No	     Yes       No
	   settc	 No	     Yes       No
	   setty	 No	     Yes       No
	   setvar	 No	     No        Yes
	   shift	 No	     Yes       Yes
	   source	 No	     Yes       No
	   stop 	 No	     Yes       No
	   suspend	 No	     Yes       No
	   switch	 No	     Yes       No
	   telltc	 No	     Yes       No
	   test 	 Yes	     No        Yes
	   then 	 No	     No        Yes
	   time 	 Yes	     Yes       No
	   times	 No	     No        Yes
	   trap 	 No	     No        Yes
	   true 	 Yes	     No        Yes
	   type 	 No	     No        Yes
	   ulimit	 No	     No        Yes
	   umask	 No**	     Yes       Yes
	   unalias	 No**	     Yes       Yes
	   uncomplete	 No	     Yes       No
	   unhash	 No	     Yes       No
	   unlimit	 No	     Yes       No
	   unset	 No	     Yes       Yes
	   unsetenv	 No	     Yes       No
	   until	 No	     No        Yes
	   wait 	 No**	     Yes       Yes
	   where	 No	     Yes       No
	   which	 Yes	     Yes       No
	   while	 No	     Yes       Yes

SEE ALSO
     csh(1), echo(1), false(1), info(1), kill(1), login(1), nice(1), nohup(1),
     printenv(1), pwd(1), sh(1), test(1), time(1), true(1), which(1)

HISTORY
     The builtin manual page first appeared in FreeBSD 3.4.

AUTHORS
     This manual page was written by Sheldon Hearn <sheldonh@FreeBSD.org>.

BSD			       February 23, 2005			   BSD
","# popd

> Changes the current directory to the directory stored by the `pushd` command.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/popd>.

- Switch to directory at the top of the stack:

`popd`
"
pushd,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/pushd,"





































pushd | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















pushd


10/16/2017

2 minutes to read













In this article


Stores the current directory for use by the popd command, and then changes to the specified directory.
Every time you use the pushd command, a single directory is stored for your use. However, you can store multiple directories by using the pushd command multiple times. The directories are stored sequentially in a virtual stack, so if you use the pushd command once, the directory in which you use the command is placed at the bottom of the stack. If you use the command again, the second directory is placed on top of the first one. The process repeats every time you use the pushd command.
If you use the popd command, the directory on the top of the stack is removed and the current directory is changed to that directory. If you use the popd command again, the next directory on the stack is removed. If command extensions are enabled, the popd command removes any drive-letter assignations created by the pushd command.
Syntax
pushd [<path>]

Parameters



Parameter
Description




<path>
Specifies the directory to make the current directory. This command supports relative paths.


/?
Displays help at the command prompt.



Remarks

If command extensions are enabled, the pushd command accepts either a network path or a local drive letter and path.

If you specify a network path, the pushd command temporarily assigns the highest unused drive letter (starting with Z:) to the specified network resource. The command then changes the current drive and directory to the specified directory on the newly assigned drive. If you use the popd command with command extensions enabled, the popd command removes the drive-letter assignation created by pushd.


Examples
To change the current directory from the one in which the batch program was run, and then to change it back:
@echo off
rem This batch file deletes all .txt files in a specified directory
pushd %1
del *.txt
popd
cls
echo All text files deleted in the %1 directory

Additional References

Command-Line Syntax Key

popd command









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
BUILTIN(1)		  BSD General Commands Manual		    BUILTIN(1)

NAME
     builtin, !, %, ., :, @, {, }, alias, alloc, bg, bind, bindkey, break,
     breaksw, builtins, case, cd, chdir, command, complete, continue, default,
     dirs, do, done, echo, echotc, elif, else, end, endif, endsw, esac, eval,
     exec, exit, export, false, fc, fg, filetest, fi, for, foreach, getopts,
     glob, goto, hash, hashstat, history, hup, if, jobid, jobs, kill, limit,
     local, log, login, logout, ls-F, nice, nohup, notify, onintr, popd,
     printenv, pushd, pwd, read, readonly, rehash, repeat, return, sched, set,
     setenv, settc, setty, setvar, shift, source, stop, suspend, switch,
     telltc, test, then, time, times, trap, true, type, ulimit, umask,
     unalias, uncomplete, unhash, unlimit, unset, unsetenv, until, wait,
     where, which, while -- shell built-in commands

SYNOPSIS
     builtin [-options] [args ...]

DESCRIPTION
     Shell builtin commands are commands that can be executed within the run-
     ning shell's process.  Note that, in the case of csh(1) builtin commands,
     the command is executed in a subshell if it occurs as any component of a
     pipeline except the last.

     If a command specified to the shell contains a slash ``/'', the shell
     will not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying ``echo'' causes a builtin command to be executed under shells
     that support the echo builtin command, specifying ``/bin/echo'' or
     ``./echo'' does not.

     While some builtin commands may exist in more than one shell, their oper-
     ation may be different under each shell which supports them.  Below is a
     table which lists shell builtin commands, the standard shells that sup-
     port them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.	Beware that the sh(1) manual page, at least, calls some of
     these commands ``built-in commands'' and some of them ``reserved words''.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked ``No**'' under External do exist externally, but are
     implemented as scripts using a builtin command of the same name.

	   Command	 External    csh(1)    sh(1)
	   !		 No	     No        Yes
	   %		 No	     Yes       No
	   .		 No	     No        Yes
	   :		 No	     Yes       Yes
	   @		 No	     Yes       Yes
	   {		 No	     No        Yes
	   }		 No	     No        Yes
	   alias	 No**	     Yes       Yes
	   alloc	 No	     Yes       No
	   bg		 No**	     Yes       Yes
	   bind 	 No	     No        Yes
	   bindkey	 No	     Yes       No
	   break	 No	     Yes       Yes
	   breaksw	 No	     Yes       No
	   builtin	 No	     No        Yes
	   builtins	 No	     Yes       No
	   case 	 No	     Yes       Yes
	   cd		 No**	     Yes       Yes
	   chdir	 No	     Yes       Yes
	   command	 No**	     No        Yes
	   complete	 No	     Yes       No
	   continue	 No	     Yes       Yes
	   default	 No	     Yes       No
	   dirs 	 No	     Yes       No
	   do		 No	     No        Yes
	   done 	 No	     No        Yes
	   echo 	 Yes	     Yes       Yes
	   echotc	 No	     Yes       No
	   elif 	 No	     No        Yes
	   else 	 No	     Yes       Yes
	   end		 No	     Yes       No
	   endif	 No	     Yes       No
	   endsw	 No	     Yes       No
	   esac 	 No	     No        Yes
	   eval 	 No	     Yes       Yes
	   exec 	 No	     Yes       Yes
	   exit 	 No	     Yes       Yes
	   export	 No	     No        Yes
	   false	 Yes	     No        Yes
	   fc		 No**	     No        Yes
	   fg		 No**	     Yes       Yes
	   filetest	 No	     Yes       No
	   fi		 No	     No        Yes
	   for		 No	     No        Yes
	   foreach	 No	     Yes       No
	   getopts	 No**	     No        Yes
	   glob 	 No	     Yes       No
	   goto 	 No	     Yes       No
	   hash 	 No	     No        Yes
	   hashstat	 No	     Yes       No
	   history	 No	     Yes       No
	   hup		 No	     Yes       No
	   if		 No	     Yes       Yes
	   jobid	 No	     No        Yes
	   jobs 	 No**	     Yes       Yes
	   kill 	 Yes	     Yes       No
	   limit	 No	     Yes       No
	   local	 No	     No        Yes
	   log		 No	     Yes       No
	   login	 Yes	     Yes       No
	   logout	 No	     Yes       No
	   ls-F 	 No	     Yes       No
	   nice 	 Yes	     Yes       No
	   nohup	 Yes	     Yes       No
	   notify	 No	     Yes       No
	   onintr	 No	     Yes       No
	   popd 	 No	     Yes       No
	   printenv	 Yes	     Yes       No
	   pushd	 No	     Yes       No
	   pwd		 Yes	     No        Yes
	   read 	 No**	     No        Yes
	   readonly	 No	     No        Yes
	   rehash	 No	     Yes       No
	   repeat	 No	     Yes       No
	   return	 No	     No        Yes
	   sched	 No	     Yes       No
	   set		 No	     Yes       Yes
	   setenv	 No	     Yes       No
	   settc	 No	     Yes       No
	   setty	 No	     Yes       No
	   setvar	 No	     No        Yes
	   shift	 No	     Yes       Yes
	   source	 No	     Yes       No
	   stop 	 No	     Yes       No
	   suspend	 No	     Yes       No
	   switch	 No	     Yes       No
	   telltc	 No	     Yes       No
	   test 	 Yes	     No        Yes
	   then 	 No	     No        Yes
	   time 	 Yes	     Yes       No
	   times	 No	     No        Yes
	   trap 	 No	     No        Yes
	   true 	 Yes	     No        Yes
	   type 	 No	     No        Yes
	   ulimit	 No	     No        Yes
	   umask	 No**	     Yes       Yes
	   unalias	 No**	     Yes       Yes
	   uncomplete	 No	     Yes       No
	   unhash	 No	     Yes       No
	   unlimit	 No	     Yes       No
	   unset	 No	     Yes       Yes
	   unsetenv	 No	     Yes       No
	   until	 No	     No        Yes
	   wait 	 No**	     Yes       Yes
	   where	 No	     Yes       No
	   which	 Yes	     Yes       No
	   while	 No	     Yes       Yes

SEE ALSO
     csh(1), echo(1), false(1), info(1), kill(1), login(1), nice(1), nohup(1),
     printenv(1), pwd(1), sh(1), test(1), time(1), true(1), which(1)

HISTORY
     The builtin manual page first appeared in FreeBSD 3.4.

AUTHORS
     This manual page was written by Sheldon Hearn <sheldonh@FreeBSD.org>.

BSD			       February 23, 2005			   BSD
","# pushd

> Place a directory on a stack so it can be accessed later.
> See also `popd` to switch back to original directory.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/pushd>.

- Switch to directory and push it on the stack:

`pushd {{directory}}`
"
assoc,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/assoc,"





































assoc | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















assoc


10/16/2017

2 minutes to read








+2





In this article


Displays or modifies file name extension associations. If used without parameters, assoc displays a list of all the current file name extension associations.

Note
This command is only supported within cmd.exe and is not available from PowerShell.
Though you can use cmd /c assoc as a workaround.

Syntax
assoc [<.ext>[=[<filetype>]]]

Parameters



Parameter
Description




<.ext>
Specifies the file name extension.


<filetype>
Specifies the file type to associate with the specified file name extension.


/?
Displays help at the command prompt.



Remarks

To remove the file type association for a file name extension, add a white space after the equal sign by pressing the SPACEBAR.

To view current file types that have open command strings defined, use the ftype command.

To redirect the output of assoc to a text file, use the > redirection operator.


Examples
To view the current file type association for the file name extension .txt, type:
assoc .txt

To remove the file type association for the file name extension .bak, type:
assoc .bak=


Note
Make sure you add a space after the equal sign.

To view the output of assoc one screen at a time, type:
assoc | more

To send the output of assoc to the file assoc.txt, type:
assoc>assoc.txt

Additional References

Command-Line Syntax Key

ftype command









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# assoc

> Display or modify file extension associations.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/assoc>.

- Display all associated filetypes:

`assoc`

- Display the associated filetype for a specific extension:

`assoc {{.txt}}`

- Modify the associated filetype for a specific extension:

`assoc {{.txt}}={{txtfile}}`
"
doskey,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/doskey,"





































doskey | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















doskey


10/16/2017

8 minutes to read








+2





In this article


Calls Doskey.exe, which recalls previously entered command-line commands, edits command lines, and creates macros.
Syntax
doskey [/reinstall] [/listsize=<size>] [/macros:[all | <exename>] [/history] [/insert | /overstrike] [/exename=<exename>] [/macrofile=<filename>] [<macroname>=[<text>]]

Parameters



Parameter
Description




/reinstall
Installs a new copy of Doskey.exe and clears the command history buffer.


/listsize=<size>
Specifies the maximum number of commands in the history buffer.


/macros
Displays a list of all doskey macros. You can use the redirection symbol (>) with /macros to redirect the list to a file. You can abbreviate /macros to /m.


/macros:all
Displays doskey macros for all executables.


/macros:<exename>
Displays doskey macros for the executable specified by exename.


/history
Displays all commands that are stored in memory. You can use the redirection symbol (>) with /history to redirect the list to a file. You can abbreviate /history as /h.


/insert
Specifies that new text you type is inserted in old text.


/overstrike
Specifies that new text overwrites old text.


/exename=<exename>
Specifies the program (that is, executable) in which the doskey macro runs.


/macrofile=<filename>
Specifies a file that contains the macros that you want to install.


<macroname>=[<text>]
Creates a macro that carries out the commands specified by Text. MacroName specifies the name you want to assign to the macro. Text specifies the commands you want to record. If Text is left blank, MacroName is cleared of any assigned commands.


/?
Displays help at the command prompt.



Remarks

Certain character-based, interactive programs, such as program debuggers or file transfer programs (FTP) automatically use Doskey.exe. To use Doskey.exe, a program must be a console process and use buffered input. Program key assignments override doskey key assignments. For example, if the program uses the F7 key for a function, you cannot get a doskey command history in a pop-up window.

You can use Doskey.exe to edit the current command line, but you can't use the command-line options from a program's command prompt. You must run doskey command-line options before you start a program. If you use Doskey.exe within a program, that program's key assignments take precedence and some Doskey.exe editing keys might not work.

With Doskey.exe, you can maintain a command history for each program that you start or repeat. You can edit previous commands at the program's prompt, and start doskey macros created for the program. If you exit and then restart a program from the same Command Prompt window, the command history from the previous program session is available.

To recall a command, you can use any of the following keys after you start Doskey.exe:



Key
Description




UP ARROW
Recalls the command that you used before the one that is displayed.


DOWN ARROW
Recalls the command that you used after the one that is displayed.


PAGE UP
Recalls the first command that you used in the current session.


PAGE DOWN
Recalls the most recent command that you used in the current session.




The following table lists doskey editing keys and their functions:



Key or key combination
Description




LEFT ARROW
Moves the insertion point back one character.


RIGHT ARROW
Moves the insertion point forward one character.


CTRL+LEFT ARROW
Moves the insertion point back one word.


CTRL+RIGHT ARROW
Moves the insertion point forward one word.


HOME
Moves the insertion point to the beginning of the line.


END
Moves the insertion point to the end of the line.


ESC
Clears the command from the display.


F1
Copies one character from a column in the template to the same column in the Command Prompt window. (The template is a memory buffer that holds the last command you typed.)


F2
Searches forward in the template for the next key that you type after you press F2. Doskey.exe inserts the text from the templateâup to, but not including, the character you specify.


F3
Copies the remainder of the template to the command line. Doskey.exe begins copying characters from the position in the template that corresponds to the position indicated by the insertion point on the command line.


F4
Deletes all characters from the current insertion point position up to, but not including, the next occurrence of the character that you type after you press F4.


F5
Copies the template into the current command line.


F6
Places an end-of-file character (CTRL+Z) at the current insertion point position.


F7
Displays (in a dialog box) all commands for this program that are stored in memory. Use the UP ARROW key and the DOWN ARROW key to select the command you want, and press ENTER to run the command. You can also note the sequential number in front of the command and use this number in conjunction with the F9 key.


ALT+F7
Deletes all commands stored in memory for the current history buffer.


F8
Displays all commands in the history buffer that start with the characters in the current command.


F9
Prompts you for a history buffer command number, and then displays the command associated with the number that you specify. Press ENTER to run the command. To display all the numbers and their associated commands, press F7.


ALT+F10
Deletes all macro definitions.




If you press the INSERT key, you can type text on the doskey command line in the midst of existing text without replacing the text. However, after you press ENTER, Doskey.exe returns your keyboard to Replace mode. You must press INSERT again to return to Insert mode.

The insertion point changes shape when you use the INSERT key to change from one mode to the other.

If you want to customize how Doskey.exe works with a program and create doskey macros for that program, you can create a batch program that modifies Doskey.exe and starts the program.

You can use Doskey.exe to create macros that carry out one or more commands. The following table lists special characters that you can use to control command operations when you define a macro.



Character
Description




$G or $g
Redirects output. Use either of these special characters to send output to a device or a file instead of to the screen. This character is equivalent to the redirection symbol for output (>).


$G$G or $g$g
Appends output to the end of a file. Use either of these double characters to append output to an existing file instead of replacing the data in the file. These double characters are equivalent to the append redirection symbol for output (>>).


$L or $l
Redirects input. Use either of these special characters to read input from a device or a file instead of from the keyboard. This character is equivalent to the redirection symbol for input (<).


$B or $b
Sends macro output to a command. These special characters are equivalent to using the pipe ( and *.


$T or $t
Separates commands. Use either of these special characters to separate commands when you create macros or type commands on the doskey command line. These special characters are equivalent to using the ampersand (&) on a command line.


$$
Specifies the dollar-sign character ($).


$1 through $9
Represent any command-line information you want to specify when you run the macro. The special characters $1 through $9 are batch parameters that enable you to use different data on the command line each time you run the macro. The $1 character in a doskey command is similar to the %1 character in a batch program.


$*
Represents all the command-line information that you want to specify when you type the macro name. The special character $* is a replaceable parameter that is similar to the batch parameters $1 through $9, with one important difference: everything you type on the command line after the macro name is substituted for the $* in the macro.




To run a macro, type the macro name at the command prompt, starting at the first position. If the macro was defined with $* or any of the batch parameters $1 through $9, use a space to separate the parameters. You cannot run a doskey macro from a batch program.

If you always use a particular command with specific command-line options, you can create a macro that has the same name as the command. To specify whether you want to run the macro or the command, follow these guidelines:

To run the macro, type the macro name at the command prompt. Do not add a space before the macro name.

To run the command, insert one or more spaces at the command prompt, and then type the command name.




Examples
The /macros and /history command-line options are useful for creating batch programs to save macros and commands. For example, to store all current doskey macros, type:
doskey /macros > macinit

To use the macros stored in Macinit, type:
doskey /macrofile=macinit

To create a batch program named Tmp.bat that contains recently used commands, type:
doskey /history> tmp.bat

To define a macro with multiple commands, use $t to separate commands, as follows:
doskey tx=cd temp$tdir/w $*

In the preceding example, the TX macro changes the current directory to Temp and then displays a directory listing in wide display format. You can use $* at the end of the macro to append other command-line options to dir when you run the tx option.
The following macro uses a batch parameter for a new directory name:
doskey mc=md $1$tcd $1

The macro creates a new directory and then changes to the new directory from the current directory.
To use the preceding macro to create and change to a directory named Books, type:
mc books

To create a doskey macro for a program called Ftp.exe, include /exename as follows:
doskey /exename=ftp.exe go=open 172.27.1.100$tmget *.TXT c:\reports$tbye

To use the preceding macro, start FTP. At the FTP prompt, type:
go

FTP runs the open, mget, and bye commands.
To create a macro that quickly and unconditionally formats a disk, type:
doskey qf=format $1 /q /u

To quickly and unconditionally format a disk in drive A, type:
qf a:

To delete a macro called vlist, type:
doskey vlist =

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# doskey

> Manage macros, windows commands and command lines.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/doskey>.

- List available macros:

`doskey /macros`

- Create a new macro:

`doskey {{name}} = ""{{command}}""`

- Create a new macro for a specific executable:

`doskey /exename={{executable}} {{name}} = ""{{command}}""`

- Remove a macro:

`doskey {{name}} =`

- Display all commands that are stored in memory:

`doskey /history`

- Save macros to a file for portability:

`doskey /macros > {{macinit}}`

- Load macros from a file:

`doskey /macrofile = {{macinit}}`
"
reg-load,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-load,"





































reg load | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















reg load


10/16/2017

2 minutes to read













In this article


Writes saved subkeys and entries into a different subkey in the registry. This command is intended for use with temporary files that are used for troubleshooting or editing registry entries.
Syntax
reg load <keyname> <filename>

Parameters



Parameter
Description




<keyname>
Specifies the full path of the subkey to be loaded. To specify a remote computer, include the computer name (in the format \\<computername>\) as part of the keyname. Omitting \\<computername>\ causes the operation to default to the local computer. The keyname must include a valid root key. Valid root keys for the local computer are: HKLM, HKCU, HKCR, HKU, and HKCC. If a remote computer is specified, valid root keys are: HKLM and HKU. If the registry key name contains a space, enclose the key name in quotes.


<filename>
Specifies the name and path of the file to be loaded. This file must be created in advance by using the reg save command, and must have a .hiv extension.


/?
Displays help at the command prompt.



Remarks

The return values for the reg load operation are:



Value
Description




0
Success


1
Failure





Examples
To load the file named TempHive.hiv to the key HKLM\TempHive, type:
reg load HKLM\TempHive TempHive.hiv

Additional References

Command-Line Syntax Key

reg save command









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# reg load

> Load saved sub keys into a different sub key in the registry.
> This is intended for troubleshooting and temporary keys.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-load>.

- Load a backup file into the specified key:

`reg load {{key_name}} {{path/to/file}}`
"
choco-pack,https://chocolatey.org/docs/commands-pack,"




Chocolatey Software | Commands Pack






































Here's how we're responding to COVID-19 plus resources to help

×













Resources
Watch videos, read documentation, and hear Chocolatey success stories from companies you trust.
View Resources






Events
Find past and upcoming webinars, workshops, and conferences. New events have recently been added!
View Events






Courses
Step-by-step guides for all things Chocolatey! Earn badges as you learn through interactive digital courses.
View Courses











Tuesday, 22 September 20203 PM BST/GMT+1 / 4 PM CEST / 9 AM Central / 10 AM Eastern

            Standardising tool sets across different Teams is not always easy... especially when different Teams have traditionally used different approaches and methodologies.
            In this webinar we will unpack the advantages of a more standard, consistent approach with Puppet & Chocolatey.
        
Register Now






Webinar Replay fromTuesday, 23 June 2020
Chocolatey Central Management now includes the premiere feature of managing endpoints through a Chocolatey-centered solution aka Deployments. We are excited to share what Deployments is all about!
Learn More
Watch Now



COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.
Find Resources






Chocolatey for Business Feature Video Series

            In this video series, come take a tour of the many features available in our Chocolatey for Business offering.
            Many organizations choose Chocolatey for Business when they want to scale out their solution across thousands of nodes, deploy rapidly and reliably every time,
            mitigate risks with a greatly-simplified patching workflow, and access a Support Team that will guide you on your automation journey.
        
Watch the Series

































id:searchValue search by id only
tag:searchValue search by tags













Overview




 Go Back
Overview




Why Chocolatey?
Chocolatey is a software management solution unlike anything else you've ever experienced on Windows. Chocolatey brings the concepts of true package management to allow you to version things, manage dependencies and installation order, better inventory management, and other features.

How Chocolatey Works




Use Cases
Server
Desktop
Cloud / Containers
Integrations




Customer Stories
Puppet
Yelp
CME Group







Product




 Go Back
Product




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.


Pro Edition
Pro is a personal, named license that grants having licensed versions of Chocolatey on up to 8 machines and provides the ultimate Chocolatey experience!


Open Source
Chocolatey has the largest online registry of Windows packages. Learn how Open Source Chocolatey can support your next project.






Compare Editions
Learn the difference between the Chocolatey Editions and what will fit your needs the best.

Pricing
Try Chocolatey for Business Free

Purchase
I'm ready to get started now!

Support





Events
Find past and upcoming webinars, workshops, and conferences.








Solutions




 Go Back
Solutions




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.






Self-Service Anywhere

                                                Chocolatey provides a unique approach to managing your end-user software (desktops / laptops) and can be combined with your existing solutions.
                                                Chocolatey for Business (C4B) enables better security, enhanced visibility with centralized reporting, and a self-service GUI. Self-Service Anywhere allows non-administrators to easily access and manage IT approved software from the office, from home, or anywhere they have an internet connection.
                                            






Quick Deployment Environment (QDE)

                                                The Quick Deployment Environment (QDE) provides a single virtual machine appliance to be imported into your hypervisor-of-choice, which contains most of the various components of a Chocolatey organizational solution. Deploy recommended architecture in 2-3 hours.
                                            








Community




 Go Back
Community




Community Packages
Search the largest online registry of Windows packages. Chocolatey packages encapsulate everything required to manage a particular piece of software into one deployment artifact by wrapping installers, executables, zips, and scripts into a compiled package file.





Community Resources
Chocolatey on GitHub
Blog





Events
Find past and upcoming webinars, workshops, and conferences.








Learn




 Go Back
Learn




Install Chocolatey
Get step-by-step instructions on how to install Chocolatey.


Getting Started Course
New to Chocolatey? Learn the requirements and how to get Chocolatey up and running in no time!





Resource Library
Docs
Videos
Case Studies
Courses
Media Kit





Events
Find past and upcoming webinars, workshops, and conferences.


COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.


Support
Need help? Read our Support FAQ to find out the next steps.

Blog
Newsletter







Partners




 Go Back
Partners



Overview
Become a Partner




Technology Partners
Resellers







About




 Go Back
About




About Chocolatey
Chocolatey Software is focused on helping our community, customers, and partners with solutions that help fill the gaps that are often ignored. We offer a simple, pragmatic, and open approach to software management.





Careers
Contact







Install Now
Install Now












Videos





Featured Series





Success Stories





Case Studies





Docs





Blog










Documentation Table of Contents


















id:searchValue search by id only
tag:searchValue search by tags





Docs Home
Why Chocolatey?
Security

Features



Free


Create your own packages
Host packages internally
Integrates with everything
Package Shims
Custom Package Templates
Package Extensions




Paid


Self-Service / Background Mode (C4B)
Chocolatey Central Management (C4B)
Package Internalizer (C4B)
Package Builder (C4B)
Package Audit (C4B)
Branding Chocolatey Applications (C4B)
Runtime Malware Protection (Pro+)
Download CDN Cache (Pro+)
Package Reducer (Pro+)
Ubiquitous Install Directory Option (Pro+)
Package Throttle (Pro+)
Package Synchronizer (Pro+ Auto / C4B Sync Command)
Windows Service Management PowerShell Functions (C4B)





General


Release Notes
Licensed Release Notes
Troubleshooting
FAQs
Chocolatey.org Moderation
Chocolatey.org Packages Disclaimer
Software Vendor?


Usage


How to install
How to install licensed edition
Configuration / chocolatey.config
How to uninstall
Getting Started
Proxy Settings

Commands


Passing args to choco
Complete Reference
List / Search
Info
Install
Pin
Outdated
Upgrade
Uninstall
Config
Source / Sources
Feature
Download





Creating Packages


Create Packages
Quick Start

Commands


New
Pack
Apikey
Push




PowerShell References


Function and Variable Reference
Install-ChocolateyPackage
Install-ChocolateyZipPackage
Install-ChocolateyPowershellCommand
Install-ChocolateyVsixPackage
Get-ChocolateyWebFile
Install-ChocolateyInstallPackage



Automatic Packaging


How To's


Use Chocolatey w/Proxy Server
Change Download Cache Location aka Don't use TEMP for downloads
Install/Upgrade a Package w/out running install scripts
Request Package Fixes/Updates
Manually Recompile Packages, Embedding/Internalizing Remote Resources
Request Package
Maintain Packages for My Software
Become a Maintainer
Take Over Package Maintenance Exclusively
Parse Package Parameters
Mount Iso
Create Custom Package Templates
Extend Chocolatey With PowerShell Modules (extensions)
Deprecate a Package
Install licensed edition
Host Your Own Package Repository Server
Set up the Chocolatey.Server
Set up Chocolatey for internal/organizational use
Automate Package Internalizer (MSP/C4B)
C4B Quick Start Guide


Chocolatey GUI


Chocolatey GUI Overview
Chocolatey GUI Branding
Chocolatey GUI Known Issues


Quick Deployment Environment (QDE)


QDE Overview
QDE Setup
QDE Desktop ReadMe Files
QDE SSL/TLS Setup
QDE Firewall Changes
QDE Client Setup
QDE Internet Setup

QDE v1


QDE Setup v1
QDE Desktop ReadMe Files v1
QDE SSL/TLS Setup v1
QDE Firewall Changes v1
QDE Client Setup v1





Chocolatey Central Management (CCM)


Central Management Overview
Central Management Setup
Central Management Client Setup
Central Management Upgrade
Central Management Deployments


Use Cases


Development Environment
Host on MyGet


Learning Resources


Resources
Videos
Presentations


Additional Information


Legal
History









Pack Command (choco pack)
Chocolatey will attempt to package a nuspec into a compiled nupkg. Some
may prefer to use cpack as a shortcut for choco pack.
NOTE: 100% compatible with older chocolatey client (0.9.8.32 and below)
with options and switches. In most cases you can still pass options
and switches with one dash (-). For more details, see
how to pass arguments (choco -?).
NOTE: You can pass arbitrary property value pairs through to nuspecs.
These will replace variables formatted as $property$ with the value passed.
NOTE: cpack has been deprecated as it has a name collision with CMake. Please
use choco pack instead. The shortcut will be removed in v1.


Usage
Examples
Exit Codes
Options and Switches


Usage
choco pack [<path to nuspec>] [<options/switches>] [<property=value>]
cpack [<path to nuspec>] [<options/switches>] (DEPRECATED)

Examples
choco pack
choco pack --version 1.2.3 configuration=release
choco pack path/to/nuspec
choco pack --outputdirectory build

NOTE: See scripting in how to pass arguments (choco -?) for how to
write proper scripts and integrations.
Exit Codes
Exit codes that normally result from running this command.
Normal:

0: operation was successful, no issues detected
-1 or 1: an error has occurred

If you find other exit codes that we have not yet documented, please
file a ticket so we can document it at
https://github.com/chocolatey/choco/issues/new/choose.
Options and Switches
NOTE: Options and switches apply to all items passed, so if you are
running a command like install that allows installing multiple
packages, and you use --version=1.0.0, it is going to look for and
try to install version 1.0.0 of every package passed. So please split
out multiple package calls when wanting to pass specific options.
Includes default options/switches (included below for completeness).

 -?, --help, -h
     Prints out the help menu.

 -d, --debug
     Debug - Show debug messaging.

 -v, --verbose
     Verbose - Show verbose messaging. Very verbose messaging, avoid using
       under normal circumstances.

     --trace
     Trace - Show trace messaging. Very, very verbose trace messaging. Avoid
       except when needing super low-level .NET Framework debugging. Available
       in 0.10.4+.

     --nocolor, --no-color
     No Color - Do not show colorization in logging output. This overrides
       the feature 'logWithoutColor', set to 'False'. Available in 0.10.9+.

     --acceptlicense, --accept-license
     AcceptLicense - Accept license dialogs automatically. Reserved for
       future use.

 -y, --yes, --confirm
     Confirm all prompts - Chooses affirmative answer instead of prompting.
       Implies --accept-license

 -f, --force
     Force - force the behavior. Do not use force during normal operation -
       it subverts some of the smart behavior for commands.

     --noop, --whatif, --what-if
     NoOp / WhatIf - Don't actually do anything.

 -r, --limitoutput, --limit-output
     LimitOutput - Limit the output to essential information

     --timeout, --execution-timeout=VALUE
     CommandExecutionTimeout (in seconds) - The time to allow a command to
       finish before timing out. Overrides the default execution timeout in the
       configuration of 2700 seconds. '0' for infinite starting in 0.10.4.

 -c, --cache, --cachelocation, --cache-location=VALUE
     CacheLocation - Location for download cache, defaults to %TEMP% or value
       in chocolatey.config file.

     --allowunofficial, --allow-unofficial, --allowunofficialbuild, --allow-unofficial-build
     AllowUnofficialBuild - When not using the official build you must set
       this flag for choco to continue.

     --failstderr, --failonstderr, --fail-on-stderr, --fail-on-standard-error, --fail-on-error-output
     FailOnStandardError - Fail on standard error output (stderr), typically
       received when running external commands during install providers. This
       overrides the feature failOnStandardError.

     --use-system-powershell
     UseSystemPowerShell - Execute PowerShell using an external process
       instead of the built-in PowerShell host. Should only be used when
       internal host is failing. Available in 0.9.10+.

     --no-progress
     Do Not Show Progress - Do not show download progress percentages.
       Available in 0.10.4+.

     --proxy=VALUE
     Proxy Location - Explicit proxy location. Overrides the default proxy
       location of ''. Available for config settings in 0.9.9.9+, this CLI
       option available in 0.10.4+.

     --proxy-user=VALUE
     Proxy User Name - Explicit proxy user (optional). Requires explicity
       proxy (`--proxy` or config setting). Overrides the default proxy user of
       '123'. Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-password=VALUE
     Proxy Password - Explicit proxy password (optional) to be used with
       username. Requires explicity proxy (`--proxy` or config setting) and
       user name.  Overrides the default proxy password (encrypted in settings
       if set). Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-bypass-list=VALUE
     ProxyBypassList - Comma separated list of regex locations to bypass on
       proxy. Requires explicity proxy (`--proxy` or config setting). Overrides
       the default proxy bypass list of ''. Available in 0.10.4+.

     --proxy-bypass-on-local
     Proxy Bypass On Local - Bypass proxy for local connections. Requires
       explicity proxy (`--proxy` or config setting). Overrides the default
       proxy bypass on local setting of 'True'. Available in 0.10.4+.

     --log-file=VALUE
     Log File to output to in addition to regular loggers. Available in 0.1-
       0.8+.

     --version=VALUE
     Version - The version you would like to insert into the package.

     --out, --outdir, --outputdirectory, --output-directory=VALUE
     OutputDirectory - Specifies the directory for the created Chocolatey
       package file. If not specified, uses the current directory.


Command Reference
NOTE: This documentation has been automatically generated from choco pack -h.












Overview

About
Getting Started Guide
Why Chocolatey
How Chocolatey Works
Security
Privacy Policy
Kickstarter
Partner
Customer Stories




Product

Solution: Self-Service Anywhere
Solution: Quick Deployment Environment (QDE)
Chocolatey for Business
Pro Edition
Open Source
C4B Trial
Pricing
Support
Community Packages
Events




Learn

Resource Library
Events
COVID-19 Resources
Docs
Videos
Case Studies
Courses
Blog 
Media Kit
Sitemap




Connect

Contact Us
Support
Newsletter
Shop
Report a Bug
Status
Careers



Follow Chocolatey Software on Twitter



Follow Chocolatey Software on Facebook



Find Chocolatey Software on GitHub



Subscribe to Chocolatey Software on YouTube









© 2020 Chocolatey Software, Inc.
Deployed from 16d5ee0bdb. You are on web.4. Page generated 25 Sep 2020 08:27:29 +00:00.





Chocolatey.org uses cookies to enhance the user experience of the site.

        I accept
    

        I accept
    









",,"# choco pack

> Package a NuGet specification into a nupkg file.
> More information: <https://chocolatey.org/docs/commands-pack>.

- Package a NuGet specification to a nupkg file:

`choco pack {{path/to/specification}}`

- Package a NuGet specification specifying the version of the resulting file:

`choco pack {{path/to/specification}} --version {{version}}`

- Package a NuGet specification to a specific directory:

`choco pack {{path/to/specification}} --output-directory {{path/to/output_directory}}`
"
reg-delete,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-delete,"





































reg delete | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















reg delete


10/16/2017

2 minutes to read













In this article


Deletes a subkey or entries from the registry.
Syntax
reg delete <keyname> [{/v Valuename | /ve | /va}] [/f]

Parameters



Parameter
Description




<keyname1>
Specifies the full path of the subkey or entry to be added. To specify a remote computer, include the computer name (in the format \\<computername>\) as part of the keyname. Omitting \\<computername>\ causes the operation to default to the local computer. The keyname must include a valid root key. Valid root keys for the local computer are: HKLM, HKCU, HKCR, HKU, and HKCC. If a remote computer is specified, valid root keys are: HKLM and HKU. If the registry key name contains a space, enclose the key name in quotes.


/v <Valuename>
Deletes a specific entry under the subkey. If no entry is specified, then all entries and subkeys under the subkey will be deleted.


/ve
Specifies that only entries that have no value will be deleted.


/va
Deletes all entries under the specified subkey. Subkeys under the specified subkey are not deleted.


/f
Deletes the existing registry subkey or entry without asking for confirmation.


/?
Displays help at the command prompt.



Remarks

The return values for the reg delete operation are:



Value
Description




0
Success


1
Failure





Examples
To delete the registry key Timeout and its all subkeys and values, type:
reg delete HKLM\Software\MyCo\MyApp\Timeout

To delete the registry value MTU under HKLM\Software\MyCo on the computer named ZODIAC, type:
reg delete \\ZODIAC\HKLM\Software\MyCo /v MTU

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# reg delete

> Delete keys or their values from the registry.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-delete>.

- Delete a specific registry key:

`reg delete {{key_name}}`

- Delete a value under a specific key:

`reg delete {{key_name}} /v {{value}}`

- Delete all values recursively under the specified key:

`reg delete {{key_name}} /va`

- Forcefully delete all values recursively under a key without a prompt:

`reg delete {{key_name}} /f /va`
"
virtualboxvm,https://www.virtualbox.org,"


      Oracle VM VirtualBox
    






















About
Screenshots
Downloads
Documentation
        End-user docs
        Technical docs
Contribute
Community

















Search:






LoginPreferences





Browse Source




wiki:WikiStart


Context Navigation

Start PageIndexHistory





Last modified 3 weeks ago
Welcome to VirtualBox.org!

News Flash


Important
August 3rd, 2020We're hiring!
Looking for a new challenge? We're hiring a VirtualBox senior developer (Germany/Europe/USA).


New
September 4th, 2020VirtualBox 6.1.14 released!
Oracle today released a 6.1 maintenance release which improves stability and fixes regressions. See the
Changelog for details.


New
July 14th, 2020VirtualBox 6.1.12 released!
Oracle today released a 6.1 maintenance release which improves stability and fixes regressions. See the
Changelog for details.


New
July 14th, 2020VirtualBox 6.0.24 released!
Oracle today released a 6.0 maintenance release which improves stability and fixes regressions. See the
Changelog for details.


New
July 14th, 2020VirtualBox 5.2.44 released!
Oracle today released a 5.2 maintenance release which improves stability and fixes regressions. See the
Changelog for details.


New
June 5th, 2020, 2020VirtualBox 6.1.10 released!
Oracle today released a 6.1 maintenance release which improves stability and fixes regressions. See the
Changelog for details.


New
May 15th, 2020, 2020VirtualBox 6.1.8 released!
Oracle today released a 6.1 maintenance release which improves stability and fixes regressions. See the
Changelog for details.


New
May 15th, 2020, 2020VirtualBox 6.0.22 released!
Oracle today released a 6.0 maintenance release which improves stability and fixes regressions. See the
Changelog for details.


New
May 15th, 2020VirtualBox 5.2.42 released!
Oracle today released a 5.2 maintenance release which improves stability and fixes regressions. See the
Changelog for details.


New
April 14th, 2020, 2020VirtualBox 6.1.6 released!
Oracle today released a 6.1 maintenance release which improves stability and fixes regressions. See the
Changelog for details.


New
April 14th, 2020, 2020VirtualBox 6.0.20 released!
Oracle today released a 6.0 maintenance release which improves stability and fixes regressions. See the
Changelog for details.


New
April 14th, 2020VirtualBox 5.2.40 released!
Oracle today released a 5.2 maintenance release which improves stability and fixes regressions. See the
Changelog for details.


 More information...


VirtualBox is a powerful x86 and AMD64/Intel64 virtualization product for enterprise as well as home use. Not only is VirtualBox an extremely feature rich, high performance product for enterprise customers, it is also the only professional solution that is freely available as Open Source Software under the terms of the GNU General Public License (GPL) version 2. See ""About VirtualBox"" for an introduction.


Presently, VirtualBox runs on Windows, Linux, Macintosh, and Solaris hosts and supports a large number of guest operating systems including but not limited to Windows (NT 4.0, 2000, XP, Server 2003, Vista, Windows 7, Windows 8, Windows 10), DOS/Windows 3.x, Linux (2.4, 2.6, 3.x and 4.x), Solaris and OpenSolaris, OS/2, and OpenBSD.


VirtualBox is being actively developed with frequent releases and has an ever growing list of features, supported guest operating systems and platforms it runs on. VirtualBox is a community effort backed by a dedicated company: everyone is encouraged to contribute while Oracle ensures the product always meets professional quality criteria.




Hot picks:
Pre-built virtual machines for developers at  Oracle Tech Network
Hyperbox Open-source Virtual Infrastructure Manager  project site
phpVirtualBox AJAX web interface  project site





Download in other formats:


Plain Text








Contact – Privacy policy – Terms of Use



",,"# virtualboxvm

> The VirtualBox virtual machine management CLI.
> More information: <https://www.virtualbox.org>.

- Start a virtual machine:

`virtualboxvm --startvm {{name|uuid}}`

- Start a virtual machine in fullscreen mode:

`virtualboxvm --startvm {{name|uuid}} --fullscreen`

- Mount the specified DVD image file:

`virtualboxvm --startvm {{name|uuid}} --dvd {{path/to/image_file}}`

- Display a command line window with debug information:

`virtualboxvm --startvm {{name|uuid}} --debug-command-line`

- Start a virtual machine in a paused state:

`virtualboxvm --startvm {{name|uuid}} --start-paused`
"
reg,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg,"





































reg | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















reg


10/16/2017

2 minutes to read













In this article


Performs operations on registry subkey information and values in registry entries.
Some operations enable you to view or configure registry entries on local or remote computers, while others allow you to configure only local computers. Using reg to configure the registry of remote computers limits the parameters that you can use in some operations. Check the syntax and parameters for each operation to verify that they can be used on remote computers.

Caution
Don't edit the registry directly unless you have no alternative. The registry editor bypasses standard safeguards, allowing settings that can degrade performance, damage your system, or even require you to reinstall Windows. You can safely alter most registry settings by using the programs in Control Panel or Microsoft Management Console (MMC). If you must edit the registry directly, back it up first.

Syntax
reg add
reg compare
reg copy
reg delete
reg export
reg import
reg load
reg query
reg restore
reg save
reg unload

Parameters



Parameter
Description




reg add
Adds a new subkey or entry to the registry.


reg compare
Compares specified registry subkeys or entries.


reg copy
Copies a registry entry to a specified location on the local or remote computer.


reg delete
Deletes a subkey or entries from the registry.


reg export
Copies the specified subkeys, entries, and values of the local computer into a file for transfer to other servers.


reg import
Copies the contents of a file that contains exported registry subkeys, entries, and values into the registry of the local computer.


reg load
Writes saved subkeys and entries into a different subkey in the registry.


reg query
Returns a list of the next tier of subkeys and entries that are located under a specified subkey in the registry.


reg restore
Writes saved subkeys and entries back to the registry.


reg save
Saves a copy of specified subkeys, entries, and values of the registry in a specified file.


reg unload
Removes a section of the registry that was loaded using the reg load operation.



Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# reg

> A command line interface for managing keys and their values in the Windows registry.
> See `reg-query`, `reg-add` and other pages for additional information.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg>.

- Execute registry commands:

`reg {{command}}`

- Display general information and list all available commands:

`reg /?`

- Call help on a specific command:

`reg {{command}} /?`
"
mklink,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/mklink,"





































mklink | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















mklink


10/16/2017

2 minutes to read








+5





In this article


Creates a directory or file symbolic or hard link.
Syntax
mklink [[/d] | [/h] | [/j]] <link> <target>

Parameters



Parameter
Description




/d
Creates a directory symbolic link. By default, this command creates a file symbolic link.


/h
Creates a hard link instead of a symbolic link.


/j
Creates a Directory Junction.


<link>
Specifies the name of the symbolic link being created.


<target>
Specifies the path (relative or absolute) that the new symbolic link refers to.


/?
Displays help at the command prompt.



Examples
To create and remove a symbolic link named, MyFolder and Myfile.file, from the root directory to the \Users\User1\Documents directory and a example.file located within the directory, type:
mklink /d \MyFolder \Users\User1\Documents
mklink /h \MyFile.file \User1\Documents\example.file
rd \MyFolder
del \MyFile.file

Additional References

Command-Line Syntax Key

del command

rd command

New-Item in Windows PowerShell









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# mklink

> Create symbolic links.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/mklink>.

- Create a symbolic link to a file:

`mklink {{path/to/link}} {{path/to/source_file}}`

- Create a symbolic link to a directory:

`mklink /d {{path/to/link}} {{path/to/source_directory}}`

- Create a hard link to a file:

`mklink /h {{path/to/link}} {{path/to/source_file}}`

- Create a directory junction:

`mklink /j {{path/to/link}} {{path/to/source_file}}`
"
scoop,https://scoop.sh,"



Scoop











View On GitHub





Scoop
A command-line installer for Windows

Scoop installs the tools you know and love
scoop install curl


Get comfortable on the Windows command line
Looking for familiar Unix tools? Tired of Powershell’s Verb-Noun verbosity? Scoop helps you get the programs you need, with a minimal amount of point-and-clicking.

Say goodbye to permission pop-ups
Scoop installs programs to your home directory by default. So you don’t need admin permissions to install programs, and you won’t see UAC popups every time you need to add or remove a program.

Scoop reads the README for you
Not sure whether you need 32-bit or 64-bit? Can’t remember that command you have to type after you install to get that other thing you need? Scoop has you covered. Just scoop install and you’ll be ready to work in no time.

Demo





Installs in seconds
Make sure PowerShell 5 (or later, include PowerShell Core)
and .NET Framework 4.5 (or later) are installed. Then run:
Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')

# or shorter
iwr -useb get.scoop.sh | iex

Note: if you get an error you might need to change the execution policy
(i.e. enable Powershell) with
Set-ExecutionPolicy RemoteSigned -scope CurrentUser




Documentation | 
					Donations


Project maintained by lukesampson
Hosted on GitHub Pages — Theme by mattgraham






",,"# scoop

> A command-line installer for Windows.
> More information: <https://scoop.sh>.

- Install a package:

`scoop install {{package}}`

- Remove a package:

`scoop uninstall {{package}}`

- Update all installed packages:

`scoop update *`

- List installed packages:

`scoop list`

- Display information about a package:

`scoop info {{package}}`

- Search for a package:

`scoop search {{package}}`

- List all known buckets (a bucket is an application repository):

`scoop bucket known`

- Add a bucket by its alias or a Git repository URL:

`scoop bucket add {{bucket}}`
"
choco-new,https://chocolatey.org/docs/commands-new,"




Chocolatey Software | Commands New






































Here's how we're responding to COVID-19 plus resources to help

×













Resources
Watch videos, read documentation, and hear Chocolatey success stories from companies you trust.
View Resources






Events
Find past and upcoming webinars, workshops, and conferences. New events have recently been added!
View Events






Courses
Step-by-step guides for all things Chocolatey! Earn badges as you learn through interactive digital courses.
View Courses











Tuesday, 22 September 20203 PM BST/GMT+1 / 4 PM CEST / 9 AM Central / 10 AM Eastern

            Standardising tool sets across different Teams is not always easy... especially when different Teams have traditionally used different approaches and methodologies.
            In this webinar we will unpack the advantages of a more standard, consistent approach with Puppet & Chocolatey.
        
Register Now






Webinar Replay fromTuesday, 23 June 2020
Chocolatey Central Management now includes the premiere feature of managing endpoints through a Chocolatey-centered solution aka Deployments. We are excited to share what Deployments is all about!
Learn More
Watch Now



COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.
Find Resources






Chocolatey for Business Feature Video Series

            In this video series, come take a tour of the many features available in our Chocolatey for Business offering.
            Many organizations choose Chocolatey for Business when they want to scale out their solution across thousands of nodes, deploy rapidly and reliably every time,
            mitigate risks with a greatly-simplified patching workflow, and access a Support Team that will guide you on your automation journey.
        
Watch the Series

































id:searchValue search by id only
tag:searchValue search by tags













Overview




 Go Back
Overview




Why Chocolatey?
Chocolatey is a software management solution unlike anything else you've ever experienced on Windows. Chocolatey brings the concepts of true package management to allow you to version things, manage dependencies and installation order, better inventory management, and other features.

How Chocolatey Works




Use Cases
Server
Desktop
Cloud / Containers
Integrations




Customer Stories
Puppet
Yelp
CME Group







Product




 Go Back
Product




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.


Pro Edition
Pro is a personal, named license that grants having licensed versions of Chocolatey on up to 8 machines and provides the ultimate Chocolatey experience!


Open Source
Chocolatey has the largest online registry of Windows packages. Learn how Open Source Chocolatey can support your next project.






Compare Editions
Learn the difference between the Chocolatey Editions and what will fit your needs the best.

Pricing
Try Chocolatey for Business Free

Purchase
I'm ready to get started now!

Support





Events
Find past and upcoming webinars, workshops, and conferences.








Solutions




 Go Back
Solutions




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.






Self-Service Anywhere

                                                Chocolatey provides a unique approach to managing your end-user software (desktops / laptops) and can be combined with your existing solutions.
                                                Chocolatey for Business (C4B) enables better security, enhanced visibility with centralized reporting, and a self-service GUI. Self-Service Anywhere allows non-administrators to easily access and manage IT approved software from the office, from home, or anywhere they have an internet connection.
                                            






Quick Deployment Environment (QDE)

                                                The Quick Deployment Environment (QDE) provides a single virtual machine appliance to be imported into your hypervisor-of-choice, which contains most of the various components of a Chocolatey organizational solution. Deploy recommended architecture in 2-3 hours.
                                            








Community




 Go Back
Community




Community Packages
Search the largest online registry of Windows packages. Chocolatey packages encapsulate everything required to manage a particular piece of software into one deployment artifact by wrapping installers, executables, zips, and scripts into a compiled package file.





Community Resources
Chocolatey on GitHub
Blog





Events
Find past and upcoming webinars, workshops, and conferences.








Learn




 Go Back
Learn




Install Chocolatey
Get step-by-step instructions on how to install Chocolatey.


Getting Started Course
New to Chocolatey? Learn the requirements and how to get Chocolatey up and running in no time!





Resource Library
Docs
Videos
Case Studies
Courses
Media Kit





Events
Find past and upcoming webinars, workshops, and conferences.


COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.


Support
Need help? Read our Support FAQ to find out the next steps.

Blog
Newsletter







Partners




 Go Back
Partners



Overview
Become a Partner




Technology Partners
Resellers







About




 Go Back
About




About Chocolatey
Chocolatey Software is focused on helping our community, customers, and partners with solutions that help fill the gaps that are often ignored. We offer a simple, pragmatic, and open approach to software management.





Careers
Contact







Install Now
Install Now












Videos





Featured Series





Success Stories





Case Studies





Docs





Blog










Documentation Table of Contents


















id:searchValue search by id only
tag:searchValue search by tags





Docs Home
Why Chocolatey?
Security

Features



Free


Create your own packages
Host packages internally
Integrates with everything
Package Shims
Custom Package Templates
Package Extensions




Paid


Self-Service / Background Mode (C4B)
Chocolatey Central Management (C4B)
Package Internalizer (C4B)
Package Builder (C4B)
Package Audit (C4B)
Branding Chocolatey Applications (C4B)
Runtime Malware Protection (Pro+)
Download CDN Cache (Pro+)
Package Reducer (Pro+)
Ubiquitous Install Directory Option (Pro+)
Package Throttle (Pro+)
Package Synchronizer (Pro+ Auto / C4B Sync Command)
Windows Service Management PowerShell Functions (C4B)





General


Release Notes
Licensed Release Notes
Troubleshooting
FAQs
Chocolatey.org Moderation
Chocolatey.org Packages Disclaimer
Software Vendor?


Usage


How to install
How to install licensed edition
Configuration / chocolatey.config
How to uninstall
Getting Started
Proxy Settings

Commands


Passing args to choco
Complete Reference
List / Search
Info
Install
Pin
Outdated
Upgrade
Uninstall
Config
Source / Sources
Feature
Download





Creating Packages


Create Packages
Quick Start

Commands


New
Pack
Apikey
Push




PowerShell References


Function and Variable Reference
Install-ChocolateyPackage
Install-ChocolateyZipPackage
Install-ChocolateyPowershellCommand
Install-ChocolateyVsixPackage
Get-ChocolateyWebFile
Install-ChocolateyInstallPackage



Automatic Packaging


How To's


Use Chocolatey w/Proxy Server
Change Download Cache Location aka Don't use TEMP for downloads
Install/Upgrade a Package w/out running install scripts
Request Package Fixes/Updates
Manually Recompile Packages, Embedding/Internalizing Remote Resources
Request Package
Maintain Packages for My Software
Become a Maintainer
Take Over Package Maintenance Exclusively
Parse Package Parameters
Mount Iso
Create Custom Package Templates
Extend Chocolatey With PowerShell Modules (extensions)
Deprecate a Package
Install licensed edition
Host Your Own Package Repository Server
Set up the Chocolatey.Server
Set up Chocolatey for internal/organizational use
Automate Package Internalizer (MSP/C4B)
C4B Quick Start Guide


Chocolatey GUI


Chocolatey GUI Overview
Chocolatey GUI Branding
Chocolatey GUI Known Issues


Quick Deployment Environment (QDE)


QDE Overview
QDE Setup
QDE Desktop ReadMe Files
QDE SSL/TLS Setup
QDE Firewall Changes
QDE Client Setup
QDE Internet Setup

QDE v1


QDE Setup v1
QDE Desktop ReadMe Files v1
QDE SSL/TLS Setup v1
QDE Firewall Changes v1
QDE Client Setup v1





Chocolatey Central Management (CCM)


Central Management Overview
Central Management Setup
Central Management Client Setup
Central Management Upgrade
Central Management Deployments


Use Cases


Development Environment
Host on MyGet


Learning Resources


Resources
Videos
Presentations


Additional Information


Legal
History









Package Builder Command (choco new)
Chocolatey Licensed editions include some level of Package Builder.

Professional / MSP editions (commercial editions v1.9.0+) can take advantage of
Package Builder UI minus the auto-detection
Business / Architect (commercial editions v1.4.0+) can use --file or Package
Builder UI to generate a fully ready to go unattended software
deployment in seconds. So easy a 7 year old can do it. Right Click
'Create Package...'
Business / Architect (commercial editions v1.8.0+) can use
--from-programs-and-features to generate packages directly from
Programs and Features!

See https://chocolatey.org/docs/features-create-packages-from-installers
New Command (choco new)
Chocolatey will generate package specification files for a new package.


Usage
Examples
Exit Codes
Options and Switches


Usage
choco new <name> [<options/switches>] [<property=value> <propertyN=valueN>]

Possible properties to pass:
packageversion
maintainername
maintainerrepo
installertype
url
url64
silentargs
NOTE: Starting in 0.9.10, you can pass arbitrary property value pairs
through to templates. This really unlocks your ability to create
packages automatically!
NOTE: Chocolatey for Business can create complete packages by just
pointing the new command to native installers!
NOTE: Chocolatey for Business can also download and internalize remote
resources from existing packages so that existing packages can be used
without being tied to the internet.
This is called automatic recompile.
Examples
choco new bob
choco new bob -a --version 1.2.0 maintainername=""'This guy'""
choco new bob silentargs=""'/S'"" url=""'https://somewhere/out/there.msi'""
choco new bob --outputdirectory Packages

NOTE: See scripting in how to pass arguments (choco -?) for how to
write proper scripts and integrations.
Exit Codes
Exit codes that normally result from running this command.
Normal:

0: operation was successful, no issues detected
-1 or 1: an error has occurred

If you find other exit codes that we have not yet documented, please
file a ticket so we can document it at
https://github.com/chocolatey/choco/issues/new/choose.
Options and Switches
NOTE: Options and switches apply to all items passed, so if you are
running a command like install that allows installing multiple
packages, and you use --version=1.0.0, it is going to look for and
try to install version 1.0.0 of every package passed. So please split
out multiple package calls when wanting to pass specific options.
Includes default options/switches (included below for completeness).

 -?, --help, -h
     Prints out the help menu.

 -d, --debug
     Debug - Show debug messaging.

 -v, --verbose
     Verbose - Show verbose messaging. Very verbose messaging, avoid using
       under normal circumstances.

     --trace
     Trace - Show trace messaging. Very, very verbose trace messaging. Avoid
       except when needing super low-level .NET Framework debugging. Available
       in 0.10.4+.

     --nocolor, --no-color
     No Color - Do not show colorization in logging output. This overrides
       the feature 'logWithoutColor', set to 'False'. Available in 0.10.9+.

     --acceptlicense, --accept-license
     AcceptLicense - Accept license dialogs automatically. Reserved for
       future use.

 -y, --yes, --confirm
     Confirm all prompts - Chooses affirmative answer instead of prompting.
       Implies --accept-license

 -f, --force
     Force - force the behavior. Do not use force during normal operation -
       it subverts some of the smart behavior for commands.

     --noop, --whatif, --what-if
     NoOp / WhatIf - Don't actually do anything.

 -r, --limitoutput, --limit-output
     LimitOutput - Limit the output to essential information

     --timeout, --execution-timeout=VALUE
     CommandExecutionTimeout (in seconds) - The time to allow a command to
       finish before timing out. Overrides the default execution timeout in the
       configuration of 2700 seconds. '0' for infinite starting in 0.10.4.

 -c, --cache, --cachelocation, --cache-location=VALUE
     CacheLocation - Location for download cache, defaults to %TEMP% or value
       in chocolatey.config file.

     --allowunofficial, --allow-unofficial, --allowunofficialbuild, --allow-unofficial-build
     AllowUnofficialBuild - When not using the official build you must set
       this flag for choco to continue.

     --failstderr, --failonstderr, --fail-on-stderr, --fail-on-standard-error, --fail-on-error-output
     FailOnStandardError - Fail on standard error output (stderr), typically
       received when running external commands during install providers. This
       overrides the feature failOnStandardError.

     --use-system-powershell
     UseSystemPowerShell - Execute PowerShell using an external process
       instead of the built-in PowerShell host. Should only be used when
       internal host is failing. Available in 0.9.10+.

     --no-progress
     Do Not Show Progress - Do not show download progress percentages.
       Available in 0.10.4+.

     --proxy=VALUE
     Proxy Location - Explicit proxy location. Overrides the default proxy
       location of ''. Available for config settings in 0.9.9.9+, this CLI
       option available in 0.10.4+.

     --proxy-user=VALUE
     Proxy User Name - Explicit proxy user (optional). Requires explicity
       proxy (`--proxy` or config setting). Overrides the default proxy user of
       '123'. Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-password=VALUE
     Proxy Password - Explicit proxy password (optional) to be used with
       username. Requires explicity proxy (`--proxy` or config setting) and
       user name.  Overrides the default proxy password (encrypted in settings
       if set). Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-bypass-list=VALUE
     ProxyBypassList - Comma separated list of regex locations to bypass on
       proxy. Requires explicity proxy (`--proxy` or config setting). Overrides
       the default proxy bypass list of ''. Available in 0.10.4+.

     --proxy-bypass-on-local
     Proxy Bypass On Local - Bypass proxy for local connections. Requires
       explicity proxy (`--proxy` or config setting). Overrides the default
       proxy bypass on local setting of 'True'. Available in 0.10.4+.

     --log-file=VALUE
     Log File to output to in addition to regular loggers. Available in 0.1-
       0.8+.
 -a, --auto, --automaticpackage
     AutomaticPackage - Generate automatic package instead of normal.
       Defaults to false

 -t, --template, --template-name=VALUE
     TemplateName - Use a named template in
       C:\ProgramData\chocolatey\templates\templatename instead of built-in
       template. Available in 0.9.9.9+. Manage templates as packages in 0.9.10+.

     --name=VALUE
     Name [Required]- the name of the package. Can be passed as first
       parameter without ""--name="".

     --version=VALUE
     Version - the version of the package. Can also be passed as the property
       PackageVersion=somevalue

     --maintainer=VALUE
     Maintainer - the name of the maintainer. Can also be passed as the
       property MaintainerName=somevalue

     --out, --outdir, --outputdirectory, --output-directory=VALUE
     OutputDirectory - Specifies the directory for the created Chocolatey
       package file. If not specified, uses the current directory. Available in
       0.9.10+.

     --built-in, --built-in-template, --originaltemplate, --original-template, --use-original-template, --use-built-in-template
     BuiltInTemplate - Use the original built-in template instead of any
       override. Available in 0.9.10+.

     --file, --url=VALUE
     Location of binary. In [Chocolatey for Business](https://chocolatey.org/compare), file is used for auto-
       detection (native installer, zip, patch/upgrade file, or remote url to
       download first) to completely create a package with proper silent
       arguments! Can be 32-bit or 64-bit architecture.  Available in licensed
       editions only (licensed version 1.4.0+, url/zip starting in 1.6.0). See
       https://chocolatey.org/docs/features-create-packages-from-installers

     --file64, --url64=VALUE
     Optional - used when specifying both a 32-bit and a 64-bit file. Can be
       an installer or a zip, or remote url to download. Available in licensed
       editions only (licensed version 1.6.0+).

     --keepremote, --keep-remote, --originallocation, --original-location, --useoriginallocation, --use-original-location, --useoriginalfileslocation, --use-original-files-location
     Use Original Files Location - when using file or url, use the original
       location in packaging. Available in [licensed editions](https://chocolatey.org/compare) only (licensed
       version 1.6.0+).

     --checksum, --downloadchecksum, --download-checksum=VALUE
     Download Checksum - checksum to verify File/Url with. Defaults to empty.
       Available in [licensed editions](https://chocolatey.org/compare) only (licensed version 1.7.0+).

     --checksum64, --checksumx64, --downloadchecksumx64, --download-checksum-x64=VALUE
     Download Checksum 64-bit - checksum to verify File64/Url64 with.
       Defaults to empty. Available in [licensed editions](https://chocolatey.org/compare) only (licensed version
       1.7.0+).

     --checksumtype, --checksum-type, --downloadchecksumtype, --download-checksum-type=VALUE
     Download Checksum Type - checksum type for File/Url (and optional
       separate 64-bit files when specifying both). Used in conjunction with
       Download Checksum and Download Checksum 64-bit. Available values are
       'md5', 'sha1', 'sha256' or 'sha512'. Defaults to 'sha256'.  Available in
       Business editions only (licensed version 1.7.0+).

     --pauseonerror, --pause-on-error
     Pause on Error - Pause when there is an error with creating the package.
       Available in [licensed editions](https://chocolatey.org/compare) only (licensed version 1.7.0+).

     --buildpackage, --build-package, --build-packages
     Build Package - Attempt to compile the package after creating it.
       Available in [licensed editions](https://chocolatey.org/compare) only (licensed version 1.7.0+).

     --fromprograms, --from-programs, --fromprogramsandfeatures, --from-programs-and-features
     Generate Packages From Installed Software - Generate packages from the
       installed software on a system (does not handle dependencies). Available
       in Business editions only (licensed version 1.8.0+).

     --removearchitecture, --removearchitecturefromname, --remove-architecture, --remove-architecture-from-name
     Remove Architecture From Name - Remove x86, x64, 64-bit, etc from the
       package id. Default setting is to remove architecture. Available in
       Business editions only (licensed version 1.8.0+).

     --includearchitecture, --includearchitectureinname, --include-architecture, --include-architecture-in-name
     Include Architecture in Package Name - Leave x86, x64, 64-bit, etc as
       part of the package id. Default setting is to remove architecture.
       Available in Business editions only (licensed version 1.8.0+).


Command Reference
NOTE: This documentation has been automatically generated from choco new -h.












Overview

About
Getting Started Guide
Why Chocolatey
How Chocolatey Works
Security
Privacy Policy
Kickstarter
Partner
Customer Stories




Product

Solution: Self-Service Anywhere
Solution: Quick Deployment Environment (QDE)
Chocolatey for Business
Pro Edition
Open Source
C4B Trial
Pricing
Support
Community Packages
Events




Learn

Resource Library
Events
COVID-19 Resources
Docs
Videos
Case Studies
Courses
Blog 
Media Kit
Sitemap




Connect

Contact Us
Support
Newsletter
Shop
Report a Bug
Status
Careers



Follow Chocolatey Software on Twitter



Follow Chocolatey Software on Facebook



Find Chocolatey Software on GitHub



Subscribe to Chocolatey Software on YouTube









© 2020 Chocolatey Software, Inc.
Deployed from 16d5ee0bdb. You are on web.2. Page generated 25 Sep 2020 08:27:30 +00:00.





Chocolatey.org uses cookies to enhance the user experience of the site.

        I accept
    

        I accept
    










",,"# choco new

> Generate new package specification files with Chocolatey.
> More information: <https://chocolatey.org/docs/commands-new>.

- Create a new package skeleton:

`choco new {{package_name}}`

- Create a new package with a specific version:

`choco new {{package_name}} --version {{version}}`

- Create a new package with a specific maintainer name:

`choco new {{package_name}} --maintainer {{maintainer_name}}`

- Create a new package in a custom output directory:

`choco new {{package_name}} --output-directory {{path/to/directory}}`

- Create a new package with specific 32-bit and 64-bit installer urls:

`choco new {{package_name}} url=""{{url}}"" url64=""{{url}}""`
"
reg-import,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-import,"





































reg import | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















reg import


10/16/2017

2 minutes to read













In this article


Copies the contents of a file that contains exported registry subkeys, entries, and values into the registry of the local computer.
Syntax
reg import <filename>

Parameters



Parameter
Description




<filename>
Specifies the name and path of the file that has content to be copied into the registry of the local computer. This file must be created in advance by using reg export.


/?
Displays help at the command prompt.



Remarks

The return values for the reg import operation are:



Value
Description




0
Success


1
Failure





Examples
To import registry entries from the file named AppBkUp.reg, type:
reg import AppBkUp.reg

Additional References

Command-Line Syntax Key

reg export command









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# reg import

> Import all available keys, subkeys, and values from a file.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-import>.

- Import all keys, subkeys and values from a file:

`reg import {{path/to/file.reg}}`
"
reg-export,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-export,"





































reg export | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















reg export


10/16/2017

2 minutes to read













In this article


Copies the specified subkeys, entries, and values of the local computer into a file for transfer to other servers.
Syntax
reg export <keyname> <filename> [/y]

Parameters



Parameter
Description




<keyname>
Specifies the full path of the subkey. The export operation only works with the local computer. The keyname must include a valid root key. Valid root keys for the local computer are: HKLM, HKCU, HKCR, HKU, and HKCC. If the registry key name contains a space, enclose the key name in quotes.


<filename>
Specifies the name and path of the file to be created during the operation. The file must have a .reg extension.


/y
Overwrites any existing file with the name filename without prompting for confirmation.


/?
Displays help at the command prompt.



Remarks

The return values for the reg export operation are:



Value
Description




0
Success


1
Failure





Examples
To export the contents of all subkeys and values of the key MyApp to the file AppBkUp.reg, type:
reg export HKLM\Software\MyCo\MyApp AppBkUp.reg

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# reg export

> Export the specified sub keys and values into a file.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-export>.

- Export all sub keys and values of a specific key:

`reg export {{key_name}} {{path/to/file.reg}}`

- Force overwriting of an existing file without prompt:

`reg export {{key_name}} {{path/to/file.reg}} /y`
"
expand,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/expand,"





































expand | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















expand


10/16/2017

2 minutes to read








+1





In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

Expands one or more compressed files. You can also use this command to retrieve compressed files from distribution disks.
The expand command can also run from the Windows Recovery Console, using different parameters. For more information, see Windows Recovery Environment (WinRE).
Syntax
expand [/r] <source> <destination>
expand /r <source> [<destination>]
expand /i <source> [<destination>]
expand /d <source>.cab [/f:<files>]
expand <source>.cab /f:<files> <destination>

Parameters



Parameter
Description




/r
Renames expanded files.


source
Specifies the files to expand. Source can consist of a drive letter and colon, a directory name, a file name, or a combination of these. You can use wildcards (* or ?).


destination
Specifies where files are to be expanded.If source consists of multiple files and you don't specify /r, the destination must be a directory. Destination can consist of a drive letter and colon, a directory name, a file name, or a combination of these. Destination file | path specification.


/i
Renames expanded files but ignores the directory structure.


/d
Displays a list of files in the source location. Doesn't expand or extract the files.


/f:<files>
Specifies the files in a cabinet (.cab) file that you want to expand. You can use wildcards (* or ?).


/?
Displays help at the command prompt.



Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
EXPAND(1)		  BSD General Commands Manual		     EXPAND(1)

NAME
     expand, unexpand -- expand tabs to spaces, and vice versa

SYNOPSIS
     expand [-t tab1,tab2,...,tabn] [file ...]
     unexpand [-a | -t tab1,tab2,...,tabn] [file ...]

DESCRIPTION
     The expand utility processes the named files or the standard input writ-
     ing the standard output with tabs changed into blanks.  Backspace charac-
     ters are preserved into the output and decrement the column count for tab
     calculations.  The expand utility is useful for pre-processing character
     files (before sorting, looking at specific columns, etc.) that contain
     tabs.

     The unexpand utility puts tabs back into the data from the standard input
     or the named files and writes the result on the standard output.

     The following options are available:

     -a      (unexpand only.)  By default, only leading blanks and tabs are
	     reconverted to maximal strings of tabs.  If the -a option is
	     given, then tabs are inserted whenever they would compress the
	     resultant file by replacing two or more characters.

     -t tab1,tab2,...,tabn
	     Set tab stops at column positions tab1, tab2, ..., tabn.  If only
	     a single number is given, tab stops are set that number of column
	     positions apart instead of the default number of 8.

ENVIRONMENT
     The LANG, LC_ALL and LC_CTYPE environment variables affect the execution
     of expand and unexpand as described in environ(7).

EXIT STATUS
     The expand and unexpand utilities exit 0 on success, and >0 if an error
     occurs.

STANDARDS
     The expand and unexpand utilities conform to IEEE Std 1003.1-2001
     (``POSIX.1'').

HISTORY
     The expand command appeared in 3.0BSD.

BSD			       October 13, 2006 			   BSD
","# expand

> Uncompress one or more Windows Cabinet files.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/expand>.

- Uncompress a single-file Cabinet file to the specified directory:

`expand {{path/to/file.cab}} {{path/to/directory}}`

- Display the list of files in a source Cabinet file:

`expand {{path/to/file.cab}} {{path/to/directory}} -d`

- Uncompress all files from the Cabinet file:

`expand {{path/to/file.cab}} {{path/to/directory}} -f:*`

- Uncompress a specific file from a Cabinet file:

`expand {{path/to/file.cab}} {{path/to/directory}} -f:{{file}}`

- Ignore the directory structure when uncompressing, and add them to a single directory:

`expand {{path/to/file.cab}} {{path/to/directory}} -i`
"
iscc,,,,"# iscc

> Compiler for Inno Setup installers.
> It compiles an Inno Setup scripts into an Windows installer executable.

- Compile an Inno Setup script:

`iscc {{path/to/file.iss}}`

- Quietly compile an Inno Setup installer:

`iscc /Q {{path/to/file.iss}}`

- Compile a signed Inno Setup installer:

`iscc /S={{name}}={{command}} {{path/to/file.iss}}`
"
octo,https://octopus.com/docs/octopus-rest-api/octo.exe-command-line,"

The Octopus Command Line (CLI) - Octopus Deploy

































Octopus Deploy







Product

Release management
Deployment automation
Operations runbooks

Platform support
Build server integration
Multi-tenancy
Kubernetes

Octopus vs. Azure DevOps
Octopus vs. Jenkins



What's New


Blog


Resources

Downloads
Documentation
Support
Events & Webinars
TestDrive VMs




Pricing




Sign in


Get started









Octopus Deploy Documentation




















The Octopus Command Line (CLI)
Last updated 2020-09-25T06:49:40.0846977+00:00

The Octopus CLI is a command line tool that builds on top of the Octopus Deploy REST API. With the Octopus CLI you can package your applications for deployment as either Zip or NuGet packages, and manage your environments, deployments, channels, projects, and workers.
The Octopus CLI can be used on Windows, Mac, Linux, Docker, and as a .NET Core global tool. For installation options and direct downloads, visit Download Octopus CLI.
The Octopus CLI is built and maintained by the Octopus Deploy team, but it is also open source. You can view the Octopus CLI project on GitHub, which leans heavily on the Octopus Clients library.

Commands
octo supports the following commands:

allow-releaseprogression: Allows a release to progress to the next phase.
build-information: Pushes build information to Octopus Server.
clean-environment: Cleans all Offline Machines from an Environment.
clean-workerpool: Cleans all Offline Workers from a WorkerPool.
complete: Supports command line auto completion.
create-autodeployoverride: Overrides the release that auto deploy will use.
create-channel: Creates a channel for a project.
create-environment: Creates a deployment environment.
create-project: Creates a project.
create-release: Creates (and, optionally, deploys) a release.
create-workerpool: Creates a pool for workers.
delete-autodeployoverride: Deletes auto deploy release overrides.
delete-releases: Deletes a range of releases.
deploy-release: Deploys a release.
dump-deployments: Writes deployments to an XML file that can be imported in Excel.
export: Exports an object to a JSON file. Deprecated. Please see https://g.octopushq.com/DataMigration for alternative options.
import: Imports an Octopus object from an export file. Deprecated. Please see https://g.octopushq.com/DataMigration for alternative options.
install-autocomplete: Install a shell auto-complete script into your shell profile, if they aren't already there. Supports pwsh, zsh, bash & powershell.
list-deployments: Lists a number of deployments by project, environment or by tenant.
list-environments: Lists environments.
list-latestdeployments: Lists the releases last-deployed in each environment.
list-machines: Lists all machines.
list-projects: Lists all projects.
list-releases: Lists releases by project.
list-tenants: Lists tenants.
list-workerpools: Lists worker pools.
list-workers: Lists all workers.
pack: Creates a package (.nupkg or .zip) from files on disk, without needing a .nuspec or .csproj.
prevent-releaseprogression: Prevents a release from progressing to the next phase.
promote-release: Promotes a release.
push: Pushes a package (.nupkg, .zip, .tar.gz, .jar, .war, etc.) package to the built-in NuGet repository in an Octopus Server.
push-metadata: Pushes package metadata to Octopus Server. Deprecated. Please use the build-information command for Octopus Server 2019.10.0 and above.
run-runbook: Runs a Runbook.
version: Outputs Octopus CLI version.

General Usage
All commands take the form of:
octo <command> [<options>]

You can see a list of commands using:
octo help

And you can get help for a specific command using:
octo help <command>
octo <command> --help

Arguments are not case sensitive and can take the following forms:
--project OctoFX                # Space between argument name and value
--project=OctoFX                # Equal sign between argument name and value
--project ""OctoFX Web Site""     # Argument values with spaces need to be quoted
""--project=OctoFX Web Site""     # If using equals, quote both the name and value, not just the value

All commands require you to pass the URL of the Octopus Server's API endpoint, and an API key which is used to authenticate you.
octo ... --server http://your-octopus-server/ --apiKey API-ABCDEF123456

Most commands also support JSON formatted output.
Create an API key
Learn about how to create an API key.

The server URL, API key, username and password can be set as the environment variables OCTOPUS_CLI_SERVER, OCTOPUS_CLI_API_KEY, OCTOPUS_CLI_USERNAME and OCTOPUS_CLI_PASSWORD respectively. Values set via command line arguments take precedence over environment variables.
Tab completion for commands and options
Tab completion is available for the following shell environments: powershell, pwsh (PowerShell Core), bash & zsh. This feature requires that octo or Octo is available from your $PATH, which is the default state if installed via a package manager or Chocolatey. If you've manually installed the CLI, please ensure your $PATH is also updated if you wish to use this feature. This is an optional feature that requires additional installation steps on a per user basis, since this feature relies on built-in shell auto completion facilities.
Additional installation steps for tab completion.

Check that octo is available on your path:

which octo

This should return a valid location on your path like /usr/bin/octo.

Install tab completion scripts into your profile, choosing from powershell, pwsh, bash or zsh:

octo install-autocomplete --shell zsh

Tips:

If you're using PowerShell on Windows use powershell. If you're using PowerShell Core on Windows, Mac or Linux, use pwsh.
You can review changes to your profile without writing to disk by using the --dryRun option:

octo install-autocomplete --shell powershell --dryRun



Either restart your shell environment or 'dot source' your profile:



Bash
Zsh
PowerShell



. ~/.bashrc



. ~/.zshrc



. $PROFILE





You can now discover sub-commands by typing octo [searchterm] and hitting the [tab] key. If you don't provide a search term, the full list of available sub-commands will be shown.





Was this page helpful?



🙂 Yes thanks!


😞 Not really




🙂 That's great!
Is there anything we can do to improve it?
Now that you mention it...



We're sorry this page did not help you! 
We review your answers every month to find ways to improve these docs. How can we improve it?


Send


Thanks so much for taking the time to give us feedback!




Need support? We're here to help.













Getting started




Getting started guides




Octopus Cloud




Installation




Infrastructure




Packaging applications




Projects




Deployment process




Runbooks




Releases




Deployment examples




Deployment patterns




Octopus REST API




How to Create an API Key




Octopus.Client




The Octopus Command Line (CLI)




Octopus CLI Global Tool




JSON formatted output




Allow release progression




Build information




Clean environments




Clean Worker pool




Complete




Create auto deployment override




Create channel




Create environment




Create project




Create release




Create Worker pool




Delete auto deploy override




Delete releases




Deploy release




Dump deployments




Export




Import




Install autocomplete




List deployments




List environments




List latest deployments




List machines




List projects




List releases




List tenants




List Worker pools




List Workers




Pack




Prevent release progression




Promote release




Push




Push metadata




Run a runbook




Version






API examples




Octopus.Server.exe command line




Tentacle.exe command line




Calamari




Octopus.Migrator.exe command line




Migration API






Administration




Security




Support




Credits




GitHub Organizations






Edit this page on GitHub













Our company
About us
Careers   we're hiring!
Roadmap
Blog
Swag


Integration
Azure DevOps/TFS
TeamCity
Jenkins
Jira/Jira Service Desk
REST API


Documentation
Getting started
Packaging
Deploying
Scripting
Databases


Help & Support
Contact us
Problems
Suggestions
Videos
Upgrade license





Privacy policy
GDPR
Terms
Status


Copyright © 2020 Octopus Deploy





























",,"# octo

> Command line tools for Octopus Deploy.
> More information: <https://octopus.com/docs/octopus-rest-api/octo.exe-command-line>.

- Create a package:

`octo pack --id={{package_name}}`

- Push a package to a repository on the Octopus server:

`octo push --package={{package_name}}`

- Create a release:

`octo create-release --project={{project_name}} --packageversion={{version}}`

- Deploy a release:

`octo deploy-release --project={{project_name}} --packageversion={{version}} --deployto={{environment_name}} --tenant={{deployment_target}}`
"
ftp,,,"ftp(n)				  ftp client				ftp(n)



______________________________________________________________________________

NAME
       ftp - Client-side tcl implementation of the ftp protocol

SYNOPSIS
       package require Tcl  8.2

       package require ftp  ?2.4.9?

       ::ftp::Open server user passwd ?options?

       ::ftp::Close handle

       ::ftp::Cd handle directory

       ::ftp::Pwd handle

       ::ftp::Type handle ?ascii|binary|tenex?

       ::ftp::List handle ?pattern?

       ::ftp::NList handle ?directory?

       ::ftp::FileSize handle file

       ::ftp::ModTime handle file

       ::ftp::Delete handle file

       ::ftp::Rename handle from to

       ::ftp::Put handle (local | -data data | -channel chan) ?remote?

       ::ftp::Append handle (local | -data data | -channel chan) ?remote?

       ::ftp::Get  handle remote ?(local | -variable varname | -channel chan)?

       ::ftp::Reget handle remote ?local? ?from? ?to?

       ::ftp::Newer handle remote ?local?

       ::ftp::MkDir handle directory

       ::ftp::RmDir handle directory

       ::ftp::Quote handle arg1 arg2 ...

       ::ftp::DisplayMsg handle msg ?state?

_________________________________________________________________

DESCRIPTION
       The ftp package provides the client side of the ftp protocol as	speci-
       fied  in RFC 959 (http://www.rfc-editor.org/rfc/rfc959.txt).  The pack-
       age implements both active (default) and passive ftp sessions.

       A new ftp session is started with the ::ftp::Open command. To  shutdown
       an  existing  ftp  session  use	::ftp::Close.  All  other commands are
       restricted to usage in an an  open  ftp	session.  They	will  generate
       errors  if they are used out of context.  The ftp package includes file
       and directory manipulating commands for remote sites.  To  perform  the
       same  operations  on  the  local site use commands built into the core,
       like cd or file.

       The output of  the  package  is	controlled  by	two  state  variables,
       ::ftp::VERBOSE  and  ::ftp::DEBUG. Setting ::ftp::VERBOSE to ""1"" forces
       the package to show all responses from a  remote  server.  The  default
       value  is ""0"". Setting ::ftp::DEBUG to ""1"" enables debugging and forces
       the package to show all return codes, states, state changes and	""real""
       ftp commands. The default value is ""0"".

       The  command  ::ftp::DisplayMsg	is used to show the different messages
       from the ftp session. The setting of ::ftp::VERBOSE determines if  this
       command	is  called  or	not. The current implementation of the command
       uses the log package of tcllib to write the  messages  to  their  final
       destination.  This means that the behaviour of ::ftp::DisplayMsg can be
       customized  without  changing  its  implementation.  For  more  radical
       changes	overwriting its implementation by the application is of course
       still possible. Note that the default implementation honors the	option
       -output to ::ftp::Open for a session specific log command.

       Caution:  The default implementation logs error messages like all other
       messages. If this behaviour is changed to throwing an error instead all
       commands  in  the  API  will change their behaviour too. In such a case
       they will not return a failure code as described  below	but  pass  the
       thrown error to their caller.

API
       ::ftp::Open server user passwd ?options?
	      This  command  is  used to start a FTP session by establishing a
	      control connection to the FTP server. The defaults are used  for
	      any option not specified by the caller.

	      The  command  takes  a  host name server, a user name user and a
	      password password as its parameters and returns a session handle
	      that  is	an integer number greater than or equal to ""0"", if the
	      connection is successfully  established.	Otherwise  it  returns
	      ""-1"".  The server parameter must be the name or internet address
	      (in dotted decimal notation) of the ftp server  to  connect  to.
	      The  user  and  passwd parameters must contain a valid user name
	      and password to complete the login process.

	      The options overwrite some default values or set special	abili-
	      ties:

	      -blocksize size
		     The  blocksize is used during data transfer. At most size
		     bytes are transfered at once. The default value for  this
		     option  is 4096.  The package will evaluate the -progress
		     callback for the  session	after  the  transfer  of  each
		     block.

	      -timeout seconds
		     If  seconds is non-zero, then ::ftp::Open sets up a time-
		     out which will occur after the specified number  of  sec-
		     onds. The default value is 600.

	      -port number
		     The  port	number specifies an alternative remote port on
		     the ftp server on which the ftp service resides. Most ftp
		     services  listen  for  connection requests on the default
		     port 21. Sometimes, usually for  security	reasons,  port
		     numbers other than 21 are used for ftp connections.

	      -mode mode
		     The  transfer  mode  option determines if a file transfer
		     occurs in active or passive mode.	In  passive  mode  the
		     client  will  ask the ftp server to listen on a data port
		     and wait for the connection rather than to  initiate  the
		     process  by itself when a data transfer request comes in.
		     Passive mode is normally  a  requirement  when  accessing
		     sites via a firewall. The default mode is active.

	      -progress callback
		     This  callback  is evaluated whenever a block of data was
		     transfered. See the option -blocksize for how to  specify
		     the size of the transfered blocks.

		     When  evaluating the callback one argument is appended to
		     the callback script, the current  accumulated  number  of
		     bytes transferred so far.

	      -command callback
		     Specifying  this  option places the connection into asyn-
		     chronous mode. The callback is evaluated after  the  com-
		     pletion of any operation. When an operation is running no
		     further operations must be started until a  callback  has
		     been received for the currently executing operation.

		     When   evaluating	the  callback  several	arguments  are
		     appended to the callback script, namely  the  keyword  of
		     the operation that has completed and any additional argu-
		     ments specific to the operation.  If  an  error  occurred
		     during  the  execution  of  the operation the callback is
		     given the keyword error.

	      -output callback
		     This option has no default. If  it  is  set  the  default
		     implementation of ::ftp::DisplayMsg will use its value as
		     command prefix to log all internal messages. The callback
		     will  have  three arguments appended to it before evalua-
		     tion, the id of the session, the message itself, and  the
		     connection state, in this order.

       ::ftp::Close handle
	      This  command  terminates  the specified ftp session. If no file
	      transfer is in progress, the server will close the control  con-
	      nection  immediately. If a file transfer is in progress however,
	      the control connection will remain open until the transfers com-
	      pletes.  When  that  happens  the  server  will write the result
	      response for the transfer to it and close the connection	after-
	      ward.

       ::ftp::Cd handle directory
	      This  command  changes  the current working directory on the ftp
	      server to a specified target directory.  The command  returns  1
	      if the current working directory was successfully changed to the
	      specified directory or 0 if it fails.  The target directory  can
	      be

	      o      a subdirectory of the current directory,

	      o      Two  dots,  ..  (as an indicator for the parent directory
		     of the current directory)

	      o      or a fully qualified path to a new working directory.

       ::ftp::Pwd handle
	      This command returns the complete path of  the  current  working
	      directory  on  the  ftp server, or an empty string in case of an
	      error.

       ::ftp::Type handle ?ascii|binary|tenex?
	      This command sets the ftp file transfer type  to	either	ascii,
	      binary,  or  tenex. The command always returns the currently set
	      type. If called without type no change is made.

	      Currently only ascii and binary types are  supported.  There  is
	      some  early  (alpha)  support  for Tenex mode. The type ascii is
	      normally used to convert text files into a format  suitable  for
	      text  editors  on  the platform of the destination machine. This
	      mainly affects end-of-line markers. The type binary on the other
	      hand  allows the undisturbed transfer of non-text files, such as
	      compressed files, images and executables.

       ::ftp::List handle ?pattern?
	      This command returns a human-readable list of  files.   Wildcard
	      expressions such as ""*.tcl"" are allowed.	If pattern refers to a
	      specific directory, then the  contents  of  that	directory  are
	      returned.   If  the  pattern is not a fully-qualified path name,
	      the command lists entries relative to the current remote	direc-
	      tory.   If  no pattern is specified, the contents of the current
	      remote directory is returned.

	      The listing includes any system-dependent information  that  the
	      server chooses to include. For example most UNIX systems produce
	      output from the command ls -l. The command returns the retrieved
	      information  as  a tcl list with one item per entry. Empty lines
	      and UNIX's ""total"" lines are ignored and	not  included  in  the
	      result as reported by this command.

	      If the command fails an empty list is returned.

       ::ftp::NList handle ?directory?
	      This  command  has the same behavior as the ::ftp::List command,
	      except that it only retrieves an abbreviated listing. This means
	      only file names are returned in a sorted list.

       ::ftp::FileSize handle file
	      This  command  returns the size of the specified file on the ftp
	      server. If the command fails an empty string is returned.

	      ATTENTION! It will not work properly when in ascii mode  and  is
	      not supported by all ftp server implementations.

       ::ftp::ModTime handle file
	      This  command retrieves the time of the last modification of the
	      file on the ftp server as a system dependent  integer  value  in
	      seconds  or an empty string if an error occurred. Use the built-
	      in command clock to convert the retrieves value into other  for-
	      mats.

       ::ftp::Delete handle file
	      This  command  deletes the specified file on the ftp server. The
	      command returns 1 if the specified file was successfully deleted
	      or 0 if it failed.

       ::ftp::Rename handle from to
	      This  command  renames the file from in the current directory of
	      the ftp server to the specified new file name to. This new  file
	      name  must  not be the same as any existing subdirectory or file
	      name.  The command returns 1 if the specified file was  success-
	      fully renamed or 0 if it failed.

       ::ftp::Put handle (local | -data data | -channel chan) ?remote?
	      This  command  transfers	a  local  file	local to a remote file
	      remote on the ftp server. If the file parameters passed  to  the
	      command  do  not fully qualified path names the command will use
	      the current directory on local and remote host.  If  the	remote
	      file  name  is  unspecified, the server will use the name of the
	      local file as the name of the remote file. The command returns 1
	      to  indicate  a successful transfer and 0 in the case of a fail-
	      ure.

	      If -data data is specified instead of a local file,  the	system
	      will  not  transfer a file, but the data passed into it. In this
	      case the name of the remote file has to be specified.

	      If -channel chan is specified instead of a local file, the  sys-
	      tem will not transfer a file, but read the contents of the chan-
	      nel chan and write this to the remote file.  In  this  case  the
	      name  of the remote file has to be specified. After the transfer
	      chan will be closed.

       ::ftp::Append handle (local | -data data | -channel chan) ?remote?
	      This command behaves like ::ftp::Puts, but  appends  the	trans-
	      fered  information to the remote file. If the file did not exist
	      on the server it will be created.

       ::ftp::Get handle remote ?(local | -variable varname | -channel	chan)?
	      This command retrieves a remote file remote on  the  ftp	server
	      and  stores  its contents into the local file local. If the file
	      parameters passed to the command are not	fully  qualified  path
	      names  the  command  will use the current directory on local and
	      remote host. If the local file name is unspecified,  the	server
	      will  use  the  name of the remote file as the name of the local
	      file. The command returns 1 to indicate  a  successful  transfer
	      and  0 in the case of a failure. The command will throw an error
	      if the directory the file local is to  be  placed  in  does  not
	      exist.

	      If  -variable  varname  is  specified, the system will store the
	      retrieved data into the variable varname instead of a file.

	      If -channel  chan  is  specified,  the  system  will  write  the
	      retrieved data into the channel chan instead of a file. The sys-
	      tem will not close chan after the transfer, this is the  respon-
	      sibility of the caller to ::ftp::Get.

       ::ftp::Reget handle remote ?local? ?from? ?to?
	      This  command behaves like ::ftp::Get, except that if local file
	      local exists and is smaller than remote file remote,  the  local
	      file  is	presumed  to  be  a  partially transferred copy of the
	      remote file and the transfer  is	continued  from  the  apparent
	      point of failure.  The command will throw an error if the direc-
	      tory the file local is to be placed in does not exist. This com-
	      mand  is useful when transferring very large files over networks
	      that tend to drop connections.

	      Specifying the additional byte offsets from and  to  will  cause
	      the  command to change its behaviour and to download exactly the
	      specified slice of the remote file. This mode is	possible  only
	      if  a  local  destination is explicitly provided. Omission of to
	      leads to downloading till the end of the file.

       ::ftp::Newer handle remote ?local?
	      This command behaves like ::ftp::Get, except that  it  retrieves
	      the remote file only if the modification time of the remote file
	      is more recent than the file on the local system.  If  the  file
	      does  not  exist on the local system, the remote file is consid-
	      ered newer. The command will throw an error if the directory the
	      file local is to be placed in does not exist.

       ::ftp::MkDir handle directory
	      This  command creates the specified directory on the ftp server.
	      If the specified path is relative the new directory will be cre-
	      ated  as	a  subdirectory of the current working directory. Else
	      the created directory will have the  specified  path  name.  The
	      command  returns	1  to  indicate  a  successful creation of the
	      directory and 0 in the case of a failure.

       ::ftp::RmDir handle directory
	      This command removes the specified directory on the ftp  server.
	      The  remote  directory has to be empty or the command will fail.
	      The command returns 1 to indicate a successful  removal  of  the
	      directory and 0 in the case of a failure.

       ::ftp::Quote handle arg1 arg2 ...
	      This  command  is  used  to send an arbitrary ftp command to the
	      server. It cannot be used to obtain a directory listing  or  for
	      transferring  files.  It	is included to allow an application to
	      execute commands on the ftp server which	are  not  provided  by
	      this package.  The arguments are sent verbatim, i.e. as is, with
	      no changes.

	      In contrast to the other commands in this package  this  command
	      will  not  parse	the  response  it  got from the ftp server but
	      return it verbatim to the caller.

       ::ftp::DisplayMsg handle msg ?state?
	      This command is used by the package itself to show the different
	      messages from the ftp sessions. The package itself declares this
	      command  very  simple,  writing  the  messages  to  stdout   (if
	      ::ftp::VERBOSE  was  set, see below) and throwing tcl errors for
	      error messages. It is the responsibility of the  application  to
	      overwrite  it  as  needed. A state variable for different states
	      assigned to different colors is recommended by the  author.  The
	      package log is useful for this.

       ::ftp::VERBOSE
	      A  state variable controlling the output of the package. Setting
	      ::ftp::VERBOSE to ""1"" forces the package to show	all  responses
	      from a remote server. The default value is ""0"".

       ::ftp::DEBUG
	      A   state  variable  controlling	the  output  of  ftp.  Setting
	      ::ftp::DEBUG to ""1"" enables debugging and forces the package  to
	      show all return codes, states, state changes and ""real"" ftp com-
	      mands. The default value is ""0"".


BUGS
       The correct execution of many commands depends upon the proper behavior
       by the remote server, network and router configuration.

       An  update  command  placed  in the procedure ::ftp::DisplayMsg may run
       into persistent errors or infinite loops. The solution to this  problem
       is to use update idletasks instead of update.

BUGS, IDEAS, FEEDBACK
       This  document,	and the package it describes, will undoubtedly contain
       bugs and other problems.  Please report such in the category ftp of the
       Tcllib  SF  Trackers  [http://sourceforge.net/tracker/?group_id=12883].
       Please also report any ideas for enhancements you may have  for	either
       package and/or documentation.

SEE ALSO
       ftpd, mime, pop3, smtp

KEYWORDS
       ftp, internet, net, rfc 959

CATEGORY
       Networking



ftp				     2.4.9				ftp(n)
","# ftp

> Interactively transfer files between a local and remote FTP server.

- Connect to a remote FTP server interactively:

`ftp {{host}}`

- Log in as an anonymous user:

`ftp -A {{host}}`

- Disable automatic login upon initial connection:

`ftp -n {{host}}`

- Run a file containing a list of FTP commands:

`ftp -s:{{path/to/file}} {{host}}`

- Download multiple files (glob expression):

`mget {{*.png}}`

- Upload multiple files (glob expression):

`mput {{*.zip}}`

- Delete multiple files on the remote server:

`mdelete {{*.txt}}`

- Display detailed help:

`ftp --help`
"
path,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/path,"





































path | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















path


10/16/2017

2 minutes to read








+1





In this article


Sets the command path in the PATH environment variable, specifying the set of directories used to search for executable (.exe) files. If used without parameters, this command displays the current command path.
Syntax
path [[<drive>:]<path>[;...][;%PATH%]]
path ;

Parameters



Parameter
Description




[<drive>:]<path>
Specifies the drive and directory to set in the command path. The current directory is always searched before the directories specified in the command path.


;
Separates directories in the command path. If used without other parameters, ; clears the existing command paths from the PATH environment variable and directs Cmd.exe to search only in the current directory.


%PATH%
Appends the command path to the existing set of directories listed in the PATH environment variable. If you include this parameter, Cmd.exe replaces it with the command path values found in the PATH environment variable, eliminating the need to manually enter these values at the command prompt.


/?
Displays help at the command prompt.



Remarks

The Windows operating system searches using default file name extensions in the following order of precedence: .exe, .com, .bat, and .cmd. Which means if you're looking for a batch file named, acct.bat, but have an app named acct.exe in the same directory, you must include the .bat extension at the command prompt.

If two or more files in the command path have the same file name and extension, this command first searches for the specified file name in the current directory. Then, it searches the directories in the command path in the order that they're listed in the PATH environment variable.

If you place the path command in your Autoexec.nt file, the Windows operating system automatically appends the specified MS-DOS subsystem search path every time you log on to your computer. Cmd.exe does not use the Autoexec.nt file. When started from a shortcut, Cmd.exe inherits the environment variables set in My Computer/Properties/Advanced/Environment.


Examples
To search the paths c:\user\taxes, b:\user\invest, and b:\bin for external commands, type:
path c:\user\taxes;b:\user\invest;b:\bin

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# path

> Display or set the search path for executable files.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/path>.

- Display the current path:

`path`

- Set the path to one or more semicolon-separated directories:

`path {{path/to/directory(s)}}`

- Append a new directory to the original path:

`path {{path/to/directory}};%path%`

- Set command prompt to only search the current directory for executables:

`path ;`
"
tskill,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/tskill,"





































tskill | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















tskill


10/16/2017

2 minutes to read








+1





In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

Ends a process running in a session on a Remote Desktop Session Host server.

Note
To find out what's new in the latest version, see What s New in Remote Desktop Services in Windows Server 2012 in the Windows Server TechNet Library.

Syntax
tskill {<ProcessID> | <ProcessName>} [/server:<ServerName>] [/id:<SessionID> | /a] [/v]

Parameters



Parameter
Description




<ProcessID>
Specifies the ID of the process that you want to end.


<ProcessName>
Specifies the name of the process that you want to end. This parameter can include wildcard characters.


/server:<ServerName>
Specifies the terminal server that contains the process that you want to end. If /server is not specified, the current RD Session Host server is used.


/id:<SessionID>
Ends the process that is running in the specified session.


/a
Ends the process that is running in all sessions.


/v
Displays information about the actions being performed.


/?
Displays help at the command prompt.



Remarks

You can use tskill to end only those processes that belong to you, unless you are an administrator. Administrators have full access to all tskill functions and can end processes that are running in other user sessions.
When all processes that are running in a session end, the session also ends.
if you use the ProcessName and the /server:ServerName parameters, you must also specify either the /id:SessionID or the /a parameter.

Examples

To end process 6543, type:
tskill 6543


To end the process explorer running on session 5, type:
tskill explorer /id:5

Additional References

Command-Line Syntax Key
Remote Desktop Services (Terminal Services) Command Reference










Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# tskill

> Ends a process running in a session on a Remote Desktop Session Host.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/tskill>.

- Terminate a process by its process identifier:

`tskill {{process_id}}`

- Terminate a process by its name:

`tskill {{process_name}}`
"
finger,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/finger,"





































finger | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















finger


10/16/2017

2 minutes to read













In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

Displays information about users on a specified remote computer (typically a computer running UNIX) that is running the finger service or daemon. The remote computer specifies the format and output of the user information display. Used without parameters, finger displays help.

Important
This command is available only if the Internet Protocol (TCP/IP) protocol is installed as a component in the properties of a network adapter in Network Connections.

Syntax
finger [-l] [<user>] [@<host>] [...]

Parameters



Parameter
Description




-l
Displays user information in long list format.


<user>
Specifies the user about which you want information. If you omit the user parameter, this command displays information about all users on the specified computer.


@<host>
Specifies the remote computer running the finger service where you are looking for user information. You can specify a computer name or IP address.


/?
Displays help at the command prompt.



Remarks

You must prefix finger parameters with a hyphen (-) rather than a slash (/).

Multiple user@host parameters can be specified.


Examples
To display information for user1 on the computer users.microsoft.com, type:
finger user1@users.microsoft.com

To display information for all users on the computer users.microsoft.com, type:
finger @users.microsoft.com

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
FINGER(1)		  BSD General Commands Manual		     FINGER(1)

NAME
     finger -- user information lookup program

SYNOPSIS
     finger [-46gklmpsho] [user ...] [user@host ...]

DESCRIPTION
     The finger utility displays information about the system users.

     Options are:

     -4      Forces finger to use IPv4 addresses only.

     -6      Forces finger to use IPv6 addresses only.

     -g      This option restricts the gecos output to only the users' real
	     name.  It also has the side-effect of restricting the output of
	     the remote host when used in conjunction with the -h option.

     -h      When used in conjunction with the -s option, the name of the
	     remote host is displayed instead of the office location and
	     office phone.

     -k      Disable all use of utmpx(5).

     -l      Produce a multi-line format displaying all of the information
	     described for the -s option as well as the user's home directory,
	     home phone number, login shell, mail status, and the contents of
	     the files .forward, .plan, .project and .pubkey from the user's
	     home directory.

	     If idle time is at least a minute and less than a day, it is pre-
	     sented in the form ``hh:mm''.  Idle times greater than a day are
	     presented as ``d day[s]hh:mm''.

	     Phone numbers specified as eleven digits are printed as ``+N-NNN-
	     NNN-NNNN''.  Numbers specified as ten or seven digits are printed
	     as the appropriate subset of that string.	Numbers specified as
	     five digits are printed as ``xN-NNNN''.  Numbers specified as
	     four digits are printed as ``xNNNN''.

	     If write permission is denied to the device, the phrase ``(mes-
	     sages off)'' is appended to the line containing the device name.
	     One entry per user is displayed with the -l option; if a user is
	     logged on multiple times, terminal information is repeated once
	     per login.

	     Mail status is shown as ``No Mail.'' if there is no mail at all,
	     ``Mail last read DDD MMM ## HH:MM YYYY (TZ)'' if the person has
	     looked at their mailbox since new mail arriving, or ``New mail
	     received ...'', ``Unread since ...'' if they have new mail.

     -m      Prevent matching of user names.  User is usually a login name;
	     however, matching will also be done on the users' real names,
	     unless the -m option is supplied.	All name matching performed by
	     finger is case insensitive.

     -o      When used in conjunction with the -s option, the office location
	     and office phone information is displayed instead of the name of
	     the remote host.

     -p      Prevent the -l option of finger from displaying the contents of
	     the .forward, .plan, .project and .pubkey files.

     -s      Display the user's login name, real name, terminal name and write
	     status (as a ``*'' before the terminal name if write permission
	     is denied), idle time, login time, and either office location and
	     office phone number, or the remote host.  If -o is given, the
	     office location and office phone number is printed (the default).
	     If -h is given, the remote host is printed instead.

	     Idle time is in minutes if it is a single integer, hours and min-
	     utes if a ``:'' is present, or days if a ``d'' is present.  If it
	     is an ``*'', the login time indicates the time of last login.
	     Login time is displayed as the day name if less than 6 days, else
	     month, day; hours and minutes, unless more than six months ago,
	     in which case the year is displayed rather than the hours and
	     minutes.

	     Unknown devices as well as nonexistent idle and login times are
	     displayed as single asterisks.

     If no options are specified, finger defaults to the -l style output if
     operands are provided, otherwise to the -s style.	Note that some fields
     may be missing, in either format, if information is not available for
     them.

     If no arguments are specified, finger will print an entry for each user
     currently logged into the system.

     The finger utility may be used to look up users on a remote machine.  The
     format is to specify a user as ``user@host'', or ``@host'', where the
     default output format for the former is the -l style, and the default
     output format for the latter is the -s style.  The -l option is the only
     option that may be passed to a remote machine.

     If the file .nofinger exists in the user's home directory, and the pro-
     gram is not run with superuser privileges, finger behaves as if the user
     in question does not exist.

     The optional finger.conf(5) configuration file can be used to specify
     aliases.  Since finger is invoked by fingerd(8), aliases will work for
     both local and network queries.

ENVIRONMENT
     The finger utility utilizes the following environment variable, if it
     exists:

     FINGER	 This variable may be set with favored options to finger.

FILES
     /etc/finger.conf  alias definition data base
     /var/log/lastlog  last login data base

SEE ALSO
     chpass(1), w(1), who(1), finger.conf(5), fingerd(8)

     D. Zimmerman, The Finger User Information Protocol, RFC 1288, December,
     1991.

HISTORY
     The finger command appeared in 3.0BSD.

BUGS
     The current FINGER protocol RFC requires that the client keep the connec-
     tion fully open until the server closes.  This prevents the use of the
     optimal three-packet T/TCP exchange.  (Servers which depend on this
     requirement are bogus but have nonetheless been observed in the Internet
     at large.)

     The finger utility does not recognize multibyte characters.

BSD				 July 17, 2004				   BSD
","# finger

> Return information about one or more users on a specified system.
> The remote system must be running the Finger service.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/finger>.

- Display information about a specific user:

`finger {{user}}@{{host}}`

- Display information about all users on the specified host:

`finger @{{host}}`

- Display information in a longer format:

`finger {{user}}@{{host}} -l`

- Display help information:

`finger /?`
"
cd,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/cd,"





































cd | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















cd


10/16/2017

2 minutes to read








+1





In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

Displays the name of the current directory or changes the current directory. If used with only a drive letter (for example, cd C:), cd displays the names of the current directory in the specified drive. If used without parameters, cd displays the current drive and directory.

Note
This command is the same as the chdir command.

Syntax
cd [/d] [<drive>:][<path>]
cd [..]
chdir [/d] [<drive>:][<path>]
chdir [..]

Parameters



Parameter
Description




/d
Changes the current drive as well as the current directory for a drive.


<drive>:
Specifies the drive to display or change (if different from the current drive).


<path>
Specifies the path to the directory that you want to display or change.


[..]
Specifies that you want to change to the parent folder.


/?
Displays help at the command prompt.



Remarks
If command extensions are enabled, the following conditions apply to the cd command:

The current directory string is converted to use the same case as the names on the disk. For example, cd c:\temp would set the current directory to C:\Temp if that is the case on the disk.

Spaces aren't treated as delimiters, so <path> can contain spaces without enclosing quotation marks. For example:
cd username\programs\start menu

is the same as:
cd ""username\programs\start menu""

If extensions are disabled, the quotation marks are required.

To disable command extensions, type:
cmd /e:off



Examples
To return to the root directory, the top of the directory hierarchy for a drive:
cd\

To change the default directory on a drive that is different from the one you are on:
cd [<drive>:[<directory>]]

To verify the change to the directory, type:
cd [<drive>:]

Additional References

Command-Line Syntax Key

chdir command









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
BUILTIN(1)		  BSD General Commands Manual		    BUILTIN(1)

NAME
     builtin, !, %, ., :, @, {, }, alias, alloc, bg, bind, bindkey, break,
     breaksw, builtins, case, cd, chdir, command, complete, continue, default,
     dirs, do, done, echo, echotc, elif, else, end, endif, endsw, esac, eval,
     exec, exit, export, false, fc, fg, filetest, fi, for, foreach, getopts,
     glob, goto, hash, hashstat, history, hup, if, jobid, jobs, kill, limit,
     local, log, login, logout, ls-F, nice, nohup, notify, onintr, popd,
     printenv, pushd, pwd, read, readonly, rehash, repeat, return, sched, set,
     setenv, settc, setty, setvar, shift, source, stop, suspend, switch,
     telltc, test, then, time, times, trap, true, type, ulimit, umask,
     unalias, uncomplete, unhash, unlimit, unset, unsetenv, until, wait,
     where, which, while -- shell built-in commands

SYNOPSIS
     builtin [-options] [args ...]

DESCRIPTION
     Shell builtin commands are commands that can be executed within the run-
     ning shell's process.  Note that, in the case of csh(1) builtin commands,
     the command is executed in a subshell if it occurs as any component of a
     pipeline except the last.

     If a command specified to the shell contains a slash ``/'', the shell
     will not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying ``echo'' causes a builtin command to be executed under shells
     that support the echo builtin command, specifying ``/bin/echo'' or
     ``./echo'' does not.

     While some builtin commands may exist in more than one shell, their oper-
     ation may be different under each shell which supports them.  Below is a
     table which lists shell builtin commands, the standard shells that sup-
     port them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.	Beware that the sh(1) manual page, at least, calls some of
     these commands ``built-in commands'' and some of them ``reserved words''.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked ``No**'' under External do exist externally, but are
     implemented as scripts using a builtin command of the same name.

	   Command	 External    csh(1)    sh(1)
	   !		 No	     No        Yes
	   %		 No	     Yes       No
	   .		 No	     No        Yes
	   :		 No	     Yes       Yes
	   @		 No	     Yes       Yes
	   {		 No	     No        Yes
	   }		 No	     No        Yes
	   alias	 No**	     Yes       Yes
	   alloc	 No	     Yes       No
	   bg		 No**	     Yes       Yes
	   bind 	 No	     No        Yes
	   bindkey	 No	     Yes       No
	   break	 No	     Yes       Yes
	   breaksw	 No	     Yes       No
	   builtin	 No	     No        Yes
	   builtins	 No	     Yes       No
	   case 	 No	     Yes       Yes
	   cd		 No**	     Yes       Yes
	   chdir	 No	     Yes       Yes
	   command	 No**	     No        Yes
	   complete	 No	     Yes       No
	   continue	 No	     Yes       Yes
	   default	 No	     Yes       No
	   dirs 	 No	     Yes       No
	   do		 No	     No        Yes
	   done 	 No	     No        Yes
	   echo 	 Yes	     Yes       Yes
	   echotc	 No	     Yes       No
	   elif 	 No	     No        Yes
	   else 	 No	     Yes       Yes
	   end		 No	     Yes       No
	   endif	 No	     Yes       No
	   endsw	 No	     Yes       No
	   esac 	 No	     No        Yes
	   eval 	 No	     Yes       Yes
	   exec 	 No	     Yes       Yes
	   exit 	 No	     Yes       Yes
	   export	 No	     No        Yes
	   false	 Yes	     No        Yes
	   fc		 No**	     No        Yes
	   fg		 No**	     Yes       Yes
	   filetest	 No	     Yes       No
	   fi		 No	     No        Yes
	   for		 No	     No        Yes
	   foreach	 No	     Yes       No
	   getopts	 No**	     No        Yes
	   glob 	 No	     Yes       No
	   goto 	 No	     Yes       No
	   hash 	 No	     No        Yes
	   hashstat	 No	     Yes       No
	   history	 No	     Yes       No
	   hup		 No	     Yes       No
	   if		 No	     Yes       Yes
	   jobid	 No	     No        Yes
	   jobs 	 No**	     Yes       Yes
	   kill 	 Yes	     Yes       No
	   limit	 No	     Yes       No
	   local	 No	     No        Yes
	   log		 No	     Yes       No
	   login	 Yes	     Yes       No
	   logout	 No	     Yes       No
	   ls-F 	 No	     Yes       No
	   nice 	 Yes	     Yes       No
	   nohup	 Yes	     Yes       No
	   notify	 No	     Yes       No
	   onintr	 No	     Yes       No
	   popd 	 No	     Yes       No
	   printenv	 Yes	     Yes       No
	   pushd	 No	     Yes       No
	   pwd		 Yes	     No        Yes
	   read 	 No**	     No        Yes
	   readonly	 No	     No        Yes
	   rehash	 No	     Yes       No
	   repeat	 No	     Yes       No
	   return	 No	     No        Yes
	   sched	 No	     Yes       No
	   set		 No	     Yes       Yes
	   setenv	 No	     Yes       No
	   settc	 No	     Yes       No
	   setty	 No	     Yes       No
	   setvar	 No	     No        Yes
	   shift	 No	     Yes       Yes
	   source	 No	     Yes       No
	   stop 	 No	     Yes       No
	   suspend	 No	     Yes       No
	   switch	 No	     Yes       No
	   telltc	 No	     Yes       No
	   test 	 Yes	     No        Yes
	   then 	 No	     No        Yes
	   time 	 Yes	     Yes       No
	   times	 No	     No        Yes
	   trap 	 No	     No        Yes
	   true 	 Yes	     No        Yes
	   type 	 No	     No        Yes
	   ulimit	 No	     No        Yes
	   umask	 No**	     Yes       Yes
	   unalias	 No**	     Yes       Yes
	   uncomplete	 No	     Yes       No
	   unhash	 No	     Yes       No
	   unlimit	 No	     Yes       No
	   unset	 No	     Yes       Yes
	   unsetenv	 No	     Yes       No
	   until	 No	     No        Yes
	   wait 	 No**	     Yes       Yes
	   where	 No	     Yes       No
	   which	 Yes	     Yes       No
	   while	 No	     Yes       Yes

SEE ALSO
     csh(1), echo(1), false(1), info(1), kill(1), login(1), nice(1), nohup(1),
     printenv(1), pwd(1), sh(1), test(1), time(1), true(1), which(1)

HISTORY
     The builtin manual page first appeared in FreeBSD 3.4.

AUTHORS
     This manual page was written by Sheldon Hearn <sheldonh@FreeBSD.org>.

BSD			       February 23, 2005			   BSD
","# cd

> Displays the name of or changes the current working directory.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/cd>.

- Go to a directory in the same drive:

`cd {{path/to/directory}}`

- Display the name of the current directory:

`cd`

- Go up to the parent of the current directory:

`cd ..`

- Go to a directory in a different drive:

`cd {{path/to/directory}} /d`
"
reg-unload,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-unload,"





































reg unload | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















reg unload


10/16/2017

2 minutes to read













In this article


Removes a section of the registry that was loaded using the reg load operation.
Syntax
reg unload <keyname>

Parameters



Parameter
Description




<keyname>
Specifies the full path of the subkey. To specify a remote computer, include the computer name (in the format \\<computername>\) as part of the keyname. Omitting \\<computername>\ causes the operation to default to the local computer. The keyname must include a valid root key. Valid root keys for the local computer are: HKLM, HKCU, HKCR, HKU, and HKCC. If a remote computer is specified, valid root keys are: HKLM and HKU. If the registry key name contains a space, enclose the key name in quotes.


/?
Displays help at the command prompt.



Remarks

The return values for the reg unload operation are:



Value
Description




0
Success


1
Failure





Examples
To unload the hive TempHive in the file HKLM, type:
reg unload HKLM\TempHive


Caution
Don't edit the registry directly unless you have no alternative. The registry editor bypasses standard safeguards, allowing settings that can degrade performance, damage your system, or even require you to reinstall Windows. You can safely alter most registry settings by using the programs in Control Panel or Microsoft Management Console (MMC). If you must edit the registry directly, back it up first.

Additional References

Command-Line Syntax Key

reg load command









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# reg unload

> Remove data from the registry that was loaded using the `reg load` command.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-unload>.

- Remove data from the registry for a specified key:

`reg unload {{key_name}}`
"
title,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/title,"




























404 - Content Not Found | Microsoft Docs












Skip to main content














 













				404 - Page not found
			
Hmm, we couldn't find this link, but here are some related  search results that may be helpful.






























































Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# title

> Set the title of the command prompt window.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/title>.

- Set the title of the current command prompt window:

`title {{new_title}}`
"
choco-uninstall,https://chocolatey.org/docs/commands-uninstall,"




Chocolatey Software | Commands Uninstall






































Here's how we're responding to COVID-19 plus resources to help

×













Resources
Watch videos, read documentation, and hear Chocolatey success stories from companies you trust.
View Resources






Events
Find past and upcoming webinars, workshops, and conferences. New events have recently been added!
View Events






Courses
Step-by-step guides for all things Chocolatey! Earn badges as you learn through interactive digital courses.
View Courses











Tuesday, 22 September 20203 PM BST/GMT+1 / 4 PM CEST / 9 AM Central / 10 AM Eastern

            Standardising tool sets across different Teams is not always easy... especially when different Teams have traditionally used different approaches and methodologies.
            In this webinar we will unpack the advantages of a more standard, consistent approach with Puppet & Chocolatey.
        
Register Now






Webinar Replay fromTuesday, 23 June 2020
Chocolatey Central Management now includes the premiere feature of managing endpoints through a Chocolatey-centered solution aka Deployments. We are excited to share what Deployments is all about!
Learn More
Watch Now



COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.
Find Resources






Chocolatey for Business Feature Video Series

            In this video series, come take a tour of the many features available in our Chocolatey for Business offering.
            Many organizations choose Chocolatey for Business when they want to scale out their solution across thousands of nodes, deploy rapidly and reliably every time,
            mitigate risks with a greatly-simplified patching workflow, and access a Support Team that will guide you on your automation journey.
        
Watch the Series

































id:searchValue search by id only
tag:searchValue search by tags













Overview




 Go Back
Overview




Why Chocolatey?
Chocolatey is a software management solution unlike anything else you've ever experienced on Windows. Chocolatey brings the concepts of true package management to allow you to version things, manage dependencies and installation order, better inventory management, and other features.

How Chocolatey Works




Use Cases
Server
Desktop
Cloud / Containers
Integrations




Customer Stories
Puppet
Yelp
CME Group







Product




 Go Back
Product




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.


Pro Edition
Pro is a personal, named license that grants having licensed versions of Chocolatey on up to 8 machines and provides the ultimate Chocolatey experience!


Open Source
Chocolatey has the largest online registry of Windows packages. Learn how Open Source Chocolatey can support your next project.






Compare Editions
Learn the difference between the Chocolatey Editions and what will fit your needs the best.

Pricing
Try Chocolatey for Business Free

Purchase
I'm ready to get started now!

Support





Events
Find past and upcoming webinars, workshops, and conferences.








Solutions




 Go Back
Solutions




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.






Self-Service Anywhere

                                                Chocolatey provides a unique approach to managing your end-user software (desktops / laptops) and can be combined with your existing solutions.
                                                Chocolatey for Business (C4B) enables better security, enhanced visibility with centralized reporting, and a self-service GUI. Self-Service Anywhere allows non-administrators to easily access and manage IT approved software from the office, from home, or anywhere they have an internet connection.
                                            






Quick Deployment Environment (QDE)

                                                The Quick Deployment Environment (QDE) provides a single virtual machine appliance to be imported into your hypervisor-of-choice, which contains most of the various components of a Chocolatey organizational solution. Deploy recommended architecture in 2-3 hours.
                                            








Community




 Go Back
Community




Community Packages
Search the largest online registry of Windows packages. Chocolatey packages encapsulate everything required to manage a particular piece of software into one deployment artifact by wrapping installers, executables, zips, and scripts into a compiled package file.





Community Resources
Chocolatey on GitHub
Blog





Events
Find past and upcoming webinars, workshops, and conferences.








Learn




 Go Back
Learn




Install Chocolatey
Get step-by-step instructions on how to install Chocolatey.


Getting Started Course
New to Chocolatey? Learn the requirements and how to get Chocolatey up and running in no time!





Resource Library
Docs
Videos
Case Studies
Courses
Media Kit





Events
Find past and upcoming webinars, workshops, and conferences.


COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.


Support
Need help? Read our Support FAQ to find out the next steps.

Blog
Newsletter







Partners




 Go Back
Partners



Overview
Become a Partner




Technology Partners
Resellers







About




 Go Back
About




About Chocolatey
Chocolatey Software is focused on helping our community, customers, and partners with solutions that help fill the gaps that are often ignored. We offer a simple, pragmatic, and open approach to software management.





Careers
Contact







Install Now
Install Now












Videos





Featured Series





Success Stories





Case Studies





Docs





Blog










Documentation Table of Contents


















id:searchValue search by id only
tag:searchValue search by tags





Docs Home
Why Chocolatey?
Security

Features



Free


Create your own packages
Host packages internally
Integrates with everything
Package Shims
Custom Package Templates
Package Extensions




Paid


Self-Service / Background Mode (C4B)
Chocolatey Central Management (C4B)
Package Internalizer (C4B)
Package Builder (C4B)
Package Audit (C4B)
Branding Chocolatey Applications (C4B)
Runtime Malware Protection (Pro+)
Download CDN Cache (Pro+)
Package Reducer (Pro+)
Ubiquitous Install Directory Option (Pro+)
Package Throttle (Pro+)
Package Synchronizer (Pro+ Auto / C4B Sync Command)
Windows Service Management PowerShell Functions (C4B)





General


Release Notes
Licensed Release Notes
Troubleshooting
FAQs
Chocolatey.org Moderation
Chocolatey.org Packages Disclaimer
Software Vendor?


Usage


How to install
How to install licensed edition
Configuration / chocolatey.config
How to uninstall
Getting Started
Proxy Settings

Commands


Passing args to choco
Complete Reference
List / Search
Info
Install
Pin
Outdated
Upgrade
Uninstall
Config
Source / Sources
Feature
Download





Creating Packages


Create Packages
Quick Start

Commands


New
Pack
Apikey
Push




PowerShell References


Function and Variable Reference
Install-ChocolateyPackage
Install-ChocolateyZipPackage
Install-ChocolateyPowershellCommand
Install-ChocolateyVsixPackage
Get-ChocolateyWebFile
Install-ChocolateyInstallPackage



Automatic Packaging


How To's


Use Chocolatey w/Proxy Server
Change Download Cache Location aka Don't use TEMP for downloads
Install/Upgrade a Package w/out running install scripts
Request Package Fixes/Updates
Manually Recompile Packages, Embedding/Internalizing Remote Resources
Request Package
Maintain Packages for My Software
Become a Maintainer
Take Over Package Maintenance Exclusively
Parse Package Parameters
Mount Iso
Create Custom Package Templates
Extend Chocolatey With PowerShell Modules (extensions)
Deprecate a Package
Install licensed edition
Host Your Own Package Repository Server
Set up the Chocolatey.Server
Set up Chocolatey for internal/organizational use
Automate Package Internalizer (MSP/C4B)
C4B Quick Start Guide


Chocolatey GUI


Chocolatey GUI Overview
Chocolatey GUI Branding
Chocolatey GUI Known Issues


Quick Deployment Environment (QDE)


QDE Overview
QDE Setup
QDE Desktop ReadMe Files
QDE SSL/TLS Setup
QDE Firewall Changes
QDE Client Setup
QDE Internet Setup

QDE v1


QDE Setup v1
QDE Desktop ReadMe Files v1
QDE SSL/TLS Setup v1
QDE Firewall Changes v1
QDE Client Setup v1





Chocolatey Central Management (CCM)


Central Management Overview
Central Management Setup
Central Management Client Setup
Central Management Upgrade
Central Management Deployments


Use Cases


Development Environment
Host on MyGet


Learning Resources


Resources
Videos
Presentations


Additional Information


Legal
History









Uninstall Command (choco uninstall)
Uninstalls a package or a list of packages. Some may prefer to use
cuninst as a shortcut for choco uninstall.
NOTE: 100% compatible with older chocolatey client (0.9.8.32 and below)
with options and switches. Add -y for previous behavior with no
prompt. In most cases you can still pass options and switches with one
dash (-). For more details, see how to pass arguments (choco -?).


Details
Usage
See It In Action
Examples
Exit Codes
Options and Switches


Details
Choco 0.9.9+ automatically tracks registry changes for ""Programs and
Features"" of the underlying software's native installers when
installing packages. The ""Automatic Uninstaller"" (auto uninstaller)
service is a feature that can use that information to automatically
determine how to uninstall these natively installed applications. This
means that a package may not need an explicit chocolateyUninstall.ps1
to reverse the installation done in the install script.
Chocolatey tracks packages, which are the files in
$env:ChocolateyInstall\lib\packagename. These packages may or may not
contain the software (applications/tools) that each package represents.
The software may actually be installed in Program Files (most native
installers will install the software there) or elsewhere on the
machine.
With auto uninstaller turned off, a chocolateyUninstall.ps1 is required
to perform uninstall from the system. In the absence of
chocolateyUninstall.ps1, choco uninstall only removes the package from
Chocolatey but does not remove the software from your system (unless
in the package directory).
NOTE: A package with a failing uninstall can be removed with the
-n --skipautouninstaller flags. This will remove the package from
chocolatey without attempting to uninstall the program.
NOTE: Starting in 0.9.10+, the Automatic Uninstaller (AutoUninstaller)
is turned on by default. To turn it off, run the following command:
choco feature disable -n autoUninstaller

NOTE: Chocolatey Pro / Business automatically synchronizes with
Programs and Features, ensuring manually removed apps are
automatically removed from Chocolatey's repository.
NOTE: Synchronizer and AutoUninstaller enhancements in licensed
versions of Chocolatey ensure that Autouninstaller is up to 95%
effective at removing software without an uninstall script. This is
because synchronizer ensures the registry snapshot stays up to date
and licensed enhancements have the ability to inspect more locations
to determine how to automatically uninstall software.
Usage
choco uninstall <pkg|all> [pkg2 pkgN] [options/switches]
cuninst <pkg|all> [pkg2 pkgN] [options/switches]

NOTE: all is a special package keyword that will allow you to
uninstall all packages.
See It In Action

Examples
choco uninstall git
choco uninstall notepadplusplus googlechrome atom 7zip
choco uninstall notepadplusplus googlechrome atom 7zip -dv
choco uninstall ruby --version 1.8.7.37402
choco uninstall nodejs.install --all-versions

NOTE: See scripting in how to pass arguments (choco -?) for how to
write proper scripts and integrations.
Exit Codes
Exit codes that normally result from running this command.
Normal:

0: operation was successful, no issues detected
-1 or 1: an error has occurred

Package Exit Codes:

1605: software is not installed
1614: product is uninstalled
1641: success, reboot initiated
3010: success, reboot required
other (not listed): likely an error has occurred

In addition to normal exit codes, packages are allowed to exit
with their own codes when the feature 'usePackageExitCodes' is
turned on. Available in v0.9.10+.
Reboot Exit Codes:

350: pending reboot detected, no action has occurred
1604: install suspended, incomplete

In addition to the above exit codes, you may also see reboot exit codes
when the feature 'exitOnRebootDetected' is turned on. It typically requires
the feature 'usePackageExitCodes' to also be turned on to work properly.
Available in v0.10.12+.
Options and Switches
NOTE: Options and switches apply to all items passed, so if you are
running a command like install that allows installing multiple
packages, and you use --version=1.0.0, it is going to look for and
try to install version 1.0.0 of every package passed. So please split
out multiple package calls when wanting to pass specific options.
Includes default options/switches (included below for completeness).



 -?, --help, -h
     Prints out the help menu.

 -d, --debug
     Debug - Show debug messaging.

 -v, --verbose
     Verbose - Show verbose messaging. Very verbose messaging, avoid using
       under normal circumstances.

     --trace
     Trace - Show trace messaging. Very, very verbose trace messaging. Avoid
       except when needing super low-level .NET Framework debugging. Available
       in 0.10.4+.

     --nocolor, --no-color
     No Color - Do not show colorization in logging output. This overrides
       the feature 'logWithoutColor', set to 'False'. Available in 0.10.9+.

     --acceptlicense, --accept-license
     AcceptLicense - Accept license dialogs automatically. Reserved for
       future use.

 -y, --yes, --confirm
     Confirm all prompts - Chooses affirmative answer instead of prompting.
       Implies --accept-license

 -f, --force
     Force - force the behavior. Do not use force during normal operation -
       it subverts some of the smart behavior for commands.

     --noop, --whatif, --what-if
     NoOp / WhatIf - Don't actually do anything.

 -r, --limitoutput, --limit-output
     LimitOutput - Limit the output to essential information

     --timeout, --execution-timeout=VALUE
     CommandExecutionTimeout (in seconds) - The time to allow a command to
       finish before timing out. Overrides the default execution timeout in the
       configuration of 2700 seconds. '0' for infinite starting in 0.10.4.

 -c, --cache, --cachelocation, --cache-location=VALUE
     CacheLocation - Location for download cache, defaults to %TEMP% or value
       in chocolatey.config file.

     --allowunofficial, --allow-unofficial, --allowunofficialbuild, --allow-unofficial-build
     AllowUnofficialBuild - When not using the official build you must set
       this flag for choco to continue.

     --failstderr, --failonstderr, --fail-on-stderr, --fail-on-standard-error, --fail-on-error-output
     FailOnStandardError - Fail on standard error output (stderr), typically
       received when running external commands during install providers. This
       overrides the feature failOnStandardError.

     --use-system-powershell
     UseSystemPowerShell - Execute PowerShell using an external process
       instead of the built-in PowerShell host. Should only be used when
       internal host is failing. Available in 0.9.10+.

     --no-progress
     Do Not Show Progress - Do not show download progress percentages.
       Available in 0.10.4+.

     --proxy=VALUE
     Proxy Location - Explicit proxy location. Overrides the default proxy
       location of ''. Available for config settings in 0.9.9.9+, this CLI
       option available in 0.10.4+.

     --proxy-user=VALUE
     Proxy User Name - Explicit proxy user (optional). Requires explicity
       proxy (`--proxy` or config setting). Overrides the default proxy user of
       '123'. Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-password=VALUE
     Proxy Password - Explicit proxy password (optional) to be used with
       username. Requires explicity proxy (`--proxy` or config setting) and
       user name.  Overrides the default proxy password (encrypted in settings
       if set). Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-bypass-list=VALUE
     ProxyBypassList - Comma separated list of regex locations to bypass on
       proxy. Requires explicity proxy (`--proxy` or config setting). Overrides
       the default proxy bypass list of ''. Available in 0.10.4+.

     --proxy-bypass-on-local
     Proxy Bypass On Local - Bypass proxy for local connections. Requires
       explicity proxy (`--proxy` or config setting). Overrides the default
       proxy bypass on local setting of 'True'. Available in 0.10.4+.

     --log-file=VALUE
     Log File to output to in addition to regular loggers. Available in 0.1-
       0.8+.

 -s, --source=VALUE
     Source - The source to find the package(s) to install. Special sources
       include: ruby, webpi, cygwin, windowsfeatures, and python. Defaults to
       default feeds.

     --version=VALUE
     Version - A specific version to uninstall. Defaults to unspecified.

 -a, --allversions, --all-versions
     AllVersions - Uninstall all versions? Defaults to false.

     --ua, --uninstallargs, --uninstallarguments, --uninstall-arguments=VALUE
     UninstallArguments - Uninstall Arguments to pass to the native installer
       in the package. Defaults to unspecified.

 -o, --override, --overrideargs, --overridearguments, --override-arguments
     OverrideArguments - Should uninstall arguments be used exclusively
       without appending to current package passed arguments? Defaults to false.

     --notsilent, --not-silent
     NotSilent - Do not uninstall this silently. Defaults to false.

     --params, --parameters, --pkgparameters, --packageparameters, --package-parameters=VALUE
     PackageParameters - Parameters to pass to the package. Defaults to
       unspecified.

     --argsglobal, --args-global, --installargsglobal, --install-args-global, --applyargstodependencies, --apply-args-to-dependencies, --apply-install-arguments-to-dependencies
     Apply Install Arguments To Dependencies  - Should install arguments be
       applied to dependent packages? Defaults to false.

     --paramsglobal, --params-global, --packageparametersglobal, --package-parameters-global, --applyparamstodependencies, --apply-params-to-dependencies, --apply-package-parameters-to-dependencies
     Apply Package Parameters To Dependencies  - Should package parameters be
       applied to dependent packages? Defaults to false.

 -m, --sxs, --sidebyside, --side-by-side, --allowmultiple, --allow-multiple, --allowmultipleversions, --allow-multiple-versions
     AllowMultipleVersions - Should multiple versions of a package be
       installed? Defaults to false.

 -x, --forcedependencies, --force-dependencies, --removedependencies, --remove-dependencies
     RemoveDependencies - Uninstall dependencies when uninstalling package(s-
       ). Defaults to false.

 -n, --skippowershell, --skip-powershell, --skipscripts, --skip-scripts, --skip-automation-scripts
     Skip Powershell - Do not run chocolateyUninstall.ps1. Defaults to false.

     --ignorepackagecodes, --ignorepackageexitcodes, --ignore-package-codes, --ignore-package-exit-codes
     IgnorePackageExitCodes - Exit with a 0 for success and 1 for non-succes-
       s, no matter what package scripts provide for exit codes. Overrides the
       default feature 'usePackageExitCodes' set to 'True'. Available in 0.-
       9.10+.

     --usepackagecodes, --usepackageexitcodes, --use-package-codes, --use-package-exit-codes
     UsePackageExitCodes - Package scripts can provide exit codes. Use those
       for choco's exit code when non-zero (this value can come from a
       dependency package). Chocolatey defines valid exit codes as 0, 1605,
       1614, 1641, 3010. Overrides the default feature 'usePackageExitCodes'
       set to 'True'. Available in 0.9.10+.

     --autouninstaller, --use-autouninstaller
     UseAutoUninstaller - Use auto uninstaller service when uninstalling.
       Overrides the default feature 'autoUninstaller' set to 'True'. Available
       in 0.9.10+.

     --skipautouninstaller, --skip-autouninstaller
     SkipAutoUninstaller - Skip auto uninstaller service when uninstalling.
       Overrides the default feature 'autoUninstaller' set to 'True'. Available
       in 0.9.10+.

     --failonautouninstaller, --fail-on-autouninstaller
     FailOnAutoUninstaller - Fail the package uninstall if the auto
       uninstaller reports and error. Overrides the default feature
       'failOnAutoUninstaller' set to 'False'. Available in 0.9.10+.

     --ignoreautouninstallerfailure, --ignore-autouninstaller-failure
     Ignore Auto Uninstaller Failure - Do not fail the package if auto
       uninstaller reports an error. Overrides the default feature
       'failOnAutoUninstaller' set to 'False'. Available in 0.9.10+.

     --stoponfirstfailure, --stop-on-first-failure, --stop-on-first-package-failure
     Stop On First Package Failure - stop running install, upgrade or
       uninstall on first package failure instead of continuing with others.
       Overrides the default feature 'stopOnFirstPackageFailure' set to 'False-
       '. Available in 0.10.4+.

     --exitwhenrebootdetected, --exit-when-reboot-detected
     Exit When Reboot Detected - Stop running install, upgrade, or uninstall
       when a reboot request is detected. Requires 'usePackageExitCodes'
       feature to be turned on. Will exit with either 350 or 1604.  Overrides
       the default feature 'exitOnRebootDetected' set to 'False'.  Available in
       0.10.12+.

     --ignoredetectedreboot, --ignore-detected-reboot
     Ignore Detected Reboot - Ignore any detected reboots if found. Overrides
       the default feature 'exitOnRebootDetected' set to 'False'.  Available in
       0.10.12+.

     --fromprograms, --from-programs, --fromprogramsandfeatures, --from-programs-and-features
     From Programs and Features - Uninstalls a program from programs and
       features. Name used for id must be a match or a wildcard (*) to Display
       Name in Programs and Features. Available in [licensed editions](https://chocolatey.org/compare) only
       (licensed version 1.8.0+) and requires v0.10.4+.


Command Reference
NOTE: This documentation has been automatically generated from choco uninstall -h.












Overview

About
Getting Started Guide
Why Chocolatey
How Chocolatey Works
Security
Privacy Policy
Kickstarter
Partner
Customer Stories




Product

Solution: Self-Service Anywhere
Solution: Quick Deployment Environment (QDE)
Chocolatey for Business
Pro Edition
Open Source
C4B Trial
Pricing
Support
Community Packages
Events




Learn

Resource Library
Events
COVID-19 Resources
Docs
Videos
Case Studies
Courses
Blog 
Media Kit
Sitemap




Connect

Contact Us
Support
Newsletter
Shop
Report a Bug
Status
Careers



Follow Chocolatey Software on Twitter



Follow Chocolatey Software on Facebook



Find Chocolatey Software on GitHub



Subscribe to Chocolatey Software on YouTube









© 2020 Chocolatey Software, Inc.
Deployed from 16d5ee0bdb. You are on web.3. Page generated 25 Sep 2020 06:16:16 +00:00.





Chocolatey.org uses cookies to enhance the user experience of the site.

        I accept
    

        I accept
    










",,"# choco uninstall

> Uninstall one or more packages with Chocolatey.
> More information: <https://chocolatey.org/docs/commands-uninstall>.

- Uninstall one or more space-separated packages:

`choco uninstall {{package(s)}}`

- Uninstall a specific version of a package:

`choco uninstall {{package}} --version {{version}}`

- Confirm all prompts automatically:

`choco uninstall {{package}} --yes`

- Remove all dependencies when uninstalling:

`choco uninstall {{package}} --remove-dependencies`

- Uninstall all packages:

`choco uninstall all`
"
pathping,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/pathping,"





































pathping | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















pathping


07/11/2018

4 minutes to read












In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

Provides information about network latency and network loss at intermediate hops between a source and destination. This command sends multiple echo Request messages to each router between a source and destination, over a period of time, and then computes results based on the packets returned from each router. Because this command displays the degree of packet loss at any given router or link, you can determine which routers or subnets might be having network problems. Used without parameters, this command displays help.

Note
This command is available only if the Internet Protocol (TCP/IP) protocol is installed as a component in the properties of a network adapter in Network Connections.
Additionally, this command identifies which routers are on the path, same as using the tracert command. Howevever, this command also sends pings periodically to all of the routers over a specified time period and computes statistics based on the number returned from each.

Syntax
pathping [/n] [/h <maximumhops>] [/g <hostlist>] [/p <Period>] [/q <numqueries> [/w <timeout>] [/i <IPaddress>] [/4 <IPv4>] [/6 <IPv6>][<targetname>]

Parameters



Parameter
Description




/n
Prevents pathping from attempting to resolve the IP addresses of intermediate routers to their names. This might expedite the display of pathping results.


/h <maximumhops>
Specifies the maximum number of hops in the path to search for the target (destination). The default is 30 hops.


/g <hostlist>
Specifies that the echo Request messages use the Loose Source Route option in the IP header with the set of intermediate destinations specified in hostlist. With loose source routing, successive intermediate destinations can be separated by one or multiple routers. The maximum number of addresses or names in the host list is 9. The hostlist is a series of IP addresses (in dotted decimal notation) separated by spaces.


/p <period>
Specifies the number of milliseconds to wait between consecutive pings. The default is 250 milliseconds (1/4 second). This parameter sends individual pings to each intermediate hop. Because of this, the interval between two pings sent to the same hop is period multiplied by the number of hops.


/q <numqueries>
Specifies the number of echo Request messages sent to each router in the path. The default is 100 queries.


/w <timeout>
Specifies the number of milliseconds to wait for each reply. The default is 3000 milliseconds (3 seconds). This parameter sends multiple pings in parallel. Because of this, the amount of time specified in the timeout parameter isn't bounded by the amount of time specified in the period parameter for waiting between pings.


/i <IPaddress>
Specifies the source address.


/4 <IPv4>
Specifies that pathping uses IPv4 only.


/6 <IPv6>
Specifies that pathping uses IPv6 only.


<targetname>
Specifies the destination, which is identified either by IP address or host name.


/?
Displays help at the command prompt.



Remarks

All parameters are case-sensitive.

To avoid network congestion and to minimize the effects of burst losses, pings should be sent at a sufficiently slow pace.


Example of the pathping command output
D:\>pathping /n contoso1
Tracing route to contoso1 [10.54.1.196]
over a maximum of 30 hops:
  0  172.16.87.35
  1  172.16.87.218
  2  192.168.52.1
  3  192.168.80.1
  4  10.54.247.14
  5  10.54.1.196
computing statistics for 125 seconds...
            Source to Here   This Node/Link
Hop  RTT    Lost/Sent = Pct  Lost/Sent = Pct  address
  0                                           172.16.87.35
                                0/ 100 =  0%   |
  1   41ms     0/ 100 =  0%     0/ 100 =  0%  172.16.87.218
                               13/ 100 = 13%   |
  2   22ms    16/ 100 = 16%     3/ 100 =  3%  192.168.52.1
                                0/ 100 =  0%   |
  3   24ms    13/ 100 = 13%     0/ 100 =  0%  192.168.80.1
                                0/ 100 =  0%   |
  4   21ms    14/ 100 = 14%     1/ 100 =  1%  10.54.247.14
                                0/ 100 =  0%   |
  5   24ms    13/ 100 = 13%     0/ 100 =  0%  10.54.1.196
Trace complete.

When pathping is run, the first results list the path. Next, a busy message is displayed for approximately 90 seconds (the time varies by hop count). During this time, information is gathered from all routers previously listed and from the links between them. At the end of this period, the test results are displayed.
In the above sample report, the This Node/Link, Lost/Sent = Pct and address columns show that the link between 172.16.87.218 and 192.168.52.1 is dropping 13% of the packets. The routers at hops 2 and 4 are also dropping packets addressed to them, but this loss doesn't affect their ability to forward traffic that isn't addressed to them.
The loss rates displayed for the links, identified as a vertical bar (|) in the address column, indicate link congestion that is causing the loss of packets that are being forwarded on the path. The loss rates displayed for routers (identified by their IP addresses) indicate that these routers might be overloaded.
Additional References

Command-Line Syntax Key

tracert command









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# pathping

> A trace route tool combining features of `ping` and `tracert`.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/pathping>.

- Ping and trace the route to a host:

`pathping {{hostname}}`

- Do not perform reverse lookup of ip-address to hostname:

`pathping {{hostname}} -n`

- Specify the maximum number of hops to search for the target (the default is 30):

`pathping {{hostname}} -h {{max_hops}}`

- Specify the milliseconds to wait between pings (the default is 240):

`pathping {{hostname}} -p {{time}}`

- Specify the number of queries per hop (the default is 100):

`pathping {{hostname}} -q {{queries}}`

- Force IPV4 usage:

`pathping {{hostname}} -4`

- Force IPV6 usage:

`pathping {{hostname}} -6`

- Display detailed usage information:

`pathping /?`
"
tzutil,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/tzutil,"





































tzutil | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















tzutil


10/16/2017

2 minutes to read












In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

Displays the Windows Time Zone utility.
Syntax
tzutil [/?] [/g] [/s <timezoneID>[_dstoff]] [/l]

Parameters



Parameter
Description




/g
Displays the current time zone ID.


/s <timezoneID>[_dstoff]
Sets the current time zone using the specified time zone ID. The _dstoff suffix disables Daylight Saving time adjustments for the time zone (where applicable). Your value must be surrounded by quotes.


/l
Lists all valid time zone IDs and display names. The output appears as:<display name><time zone ID>


/?
Displays help at the command prompt.



Remarks
An exit code of 0 indicates the command completed successfully.
Examples
To display the current time zone ID, type:
tzutil /g

To set the current time zone to Pacific Standard time, type:
tzutil /s ""Pacific Standard time""

To set the current time zone to Pacific Standard time and disable Daylight Saving time adjustments, type:
tzutil /s ""Pacific Standard time_dstoff""

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# tzutil

> A tool for displaying or configuring the system time zone.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/tzutil>.

- Get the current time zone:

`tzutil /g`

- Display a list of available time zones:

`tzutil /l`

- Set the system time zone to the specific value:

`tzutil /s {{timezone_id}}`
"
rpcinfo,https://docs.microsoft.com/windows-server/administration/windows-commands/rpcinfo,"





































rpcinfo | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















rpcinfo


07/11/2018

2 minutes to read












In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

Lists programs on remote computers. The rpcinfo command-line utility makes a remote procedure call (RPC) to an RPC server and reports what it finds.
Syntax
rpcinfo [/p [<node>]] [/b <program version>] [/t <node program> [<version>]] [/u <node program> [<version>]]

Parameters



Parameter
Description




/p [<node>]
lists all programs registered with the port mapper on the specified host. If you do not specify a node (computer) name, the program queries the port mapper on the local host.


/b <program version>
Requests a response from all network nodes that have the specified program and version registered with the port mapper. You must specify both a program name or number and a version number.


/t <node program> [\<version>]
Uses the TCP transport protocol to call the specified program. You must specify both a node (computer) name and a program name. If you do not specify a version, the program calls all versions.


/u <node program> [\<version>]
Uses the UDP transport protocol to call the specified program. You must specify both a node (computer) name and a program name. If you do not specify a version, the program calls all versions.


/?
Displays help at the command prompt.



Examples
To list all programs registered with the port mapper, type:
rpcinfo /p [<node>]

To request a response from network nodes that have a specified program, type:
rpcinfo /b <program version>

To use Transmission Control Protocol (TCP) to call a program, type:
rpcinfo /t <node program> [<version>]

Use User Datagram Protocol (UDP) to call a program:
rpcinfo /u <node program> [<version>]

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
RPCINFO(8)		  BSD System Manager's Manual		    RPCINFO(8)

NAME
     rpcinfo -- report RPC information

SYNOPSIS
     rpcinfo [--rpcbvers version] [-m | -s] [host]
     rpcinfo [--rpcbvers version] -T netid host program [version]
     rpcinfo [--rpcbvers version] -a server address -T netid program [version]
     rpcinfo [--rpcbvers version] -b [-T netid] program version
     rpcinfo [--rpcbvers version] -d [-T netid] program version
     rpcinfo -l [-T netid] [host] program version
     rpcinfo [--rpcbvers version] --getaddr [-T netid] [host] program version
     rpcinfo --getversaddr [-T netid] [host] program version
     rpcinfo --indirect [-T netid] [host] program version
     rpcinfo [--rpcbvers version] --time [-T netid] [host]
     rpcinfo {--help | -h}
     rpcinfo -p [host]
     rpcinfo [-n portnum] -u host program [version]
     rpcinfo [-n portnum] -t host program [version]

DESCRIPTION
     rpcinfo makes an RPC call to an RPC server and reports what it finds.
     Unless otherwise specified or noted below the default rpcbind protocol
     version is 3.  With no or only generic options, call the rpcbind dump
     procedure on the specified host or ``localhost'' if host is not specified
     and display the results.  For versions 3 and 4 display the program num-
     ber, the version, the ``netid'', the universal address that the services
     is listening on, symbolic name of the program if known, and then the
     owner that registered the <program, version, netid, address> tuple.  For
     version 2 of the protocol list the program, version, protocol, port, and
     symbolic program name.  See the --summary option below for a typically
     more useful output. rpcbind defaults the netid to ``tcp'' for the dump
     procedure.

     The program argument can be either a name or a number.

     If a version is specified, rpcinfo attempts to call that version of the
     specified program.  Otherwise, if the version is optional rpcinfo
     attempts to find all the registered version numbers for the specified
     program by calling version 0 (which is presumed not to exist; if it does
     exist, rpcinfo attempts to obtain this information by calling an
     extremely high version number instead) and attempts to call each regis-
     tered version.

     A required transport option is needed for the second and third lines of
     the synopsis which is used to ping, i.e., call the null procedure of the
     specified program and version. The results will be displayed on stdout.
     If version is not specified each valid version found as described above
     will be called.  The third synopsis will use the supplied universal
     address over the transport specified by netid to call the null procedure
     of the specified program in the same manner as above. In addition the
     last two lines of the synopsis can ``ping'' the server as described in
     the Legacy Options section below.

GENERIC OPTIONS
     --rpcbvers version
	     Attempt to use the supplied rpcbind version. Note some options
	     below are version specific and this option may be ignored. If
	     specifying version 2 (portmapper), netid below must be one of
	     ``udp'' or ``tcp''.

     -T netid
	     Specify the netid to use. Supported netids are ``udp'', ``tcp'',
	     ``udp6'', and ``tcp6''.

     --timeout seconds
	     Timeout used in creating client handles and the client calls to
	     rpcbind. Current default is 12 seconds.

     Generic options may be supplied with any of the rpcinfo options below,
     though some options will override their values.

LEGACY OPTIONS
     The options below imply version 2 (portmapper) rpcbind calls. They are
     compatible with older versions of rpcinfo.

     {-p | --portmap} [-T netid] [host]
	     Probe the portmapper on host, and print a list of all registered
	     RPC programs.  If host is not specified, it defaults to the value
	     ``localhost''.

     {-u | --udpping} host program [version]
	     Make an RPC call to the NULL procedure of program on the speci-
	     fied host using UDP, and report whether a response was received.

     {-t | --tcpping} host program [version]
	     Make an RPC call to the NULL procedure of program on the speci-
	     fied host using TCP, and report whether a response was received.

     {-n | --portnum} portnum
	     Use portnum as the port number for the -t and -u options instead
	     of the port number given by the portmapper.

OPTIONS
     {-b | --broadcast} program version
	     Make an RPC multicast over INET6 to the RPCB_MULTICAST_ADDR,
	     ``FF02::202'', and broadcast over INET using UDP to procedure 0
	     of the specified program and version and report all hosts that
	     respond.  rpcifno will first use RPCBIND version 3 and then call
	     the broadcast procedure of the portmapper protocol to collect
	     older hosts. There is a reply cache kept so duplicates will not
	     be returned unless the cache fills.

	     Note that the -b option by its self is compatible with the older
	     portmapper.  However, specifying --rpcbvers 2 will short circuit
	     the rpcbind version 3 calls and only call the portmapper.

     {-d | --delete} [-T netid] program version
	     Delete registration for the RPC service of the specified program
	     and version.  If the netid is specified, only unregister the
	     program and version over that transport.  This option can be
	     exercised only by the super-user or the user who registered the
	     the RPC service.

     --getaddr [-T netid] [host] program version
	     Get the universal address that the client can use to contact the
	     program and version from host over netid.	If host is not speci-
	     fied localhost is assumed. If netid is not specified ``udp'' is
	     assumed. If the specified version is not available but some other
	     version is, return the universal address for one of those ver-
	     sions of the program.

     --getversaddr [-T netid] [host] program version
	     Get the universal address that the client can use to contact the
	     program and version from host over netid.	If host is not speci-
	     fied localhost is assumed. If netid is not specified ``udp'' is
	     assumed. If the version is not available then that will be indi-
	     cated. This requires the remote rpcbind support version 4.

     -h      Print out the synopsis of this program.

     --help  Print out the synopsis and an explanation of the options.

     --indirect [-T netid] [host] program version
	     Send a indirect call to the null procedure of program and version
	     on the specified host or localhost.  This requires the remote
	     rpcbind to support version 4.

     {-l | --list} [-T netid] [host] program version
	     List the transports available over the transport family specified
	     by the netid for the given program and version on the optional
	     host or localhost if not specified.  Requires the remote rpcbind
	     to support version 4.  The default transport family is INET.

     {-m | --metrics}
	     Print the metrics of rpcbind daemon for the specified host or
	     localhost if not specified.  Requires support for rpcbind ver-
	     sion 4 on the remote.

     {-s | --summary}
	     Print a summary of programs registered on host or ``localhost''
	     if host is not specified.	For each program registered list any
	     versions followed by any transports supported by that program.
	     Try to list the symbolic name of the transport and the owner that
	     registered the program.

     --time [host]
	     Return rpcbind's version of time on the specified host.

EXAMPLES
     To show all of the RPC services registered on the local machine use:

	   example% rpcinfo

     To show all of the RPC services registered on the machine named klaxon
     use:

	   example% rpcinfo klaxon

     More usefully to show the services registered on klaxon use:

	   example% rpcinfo -s klaxon

     To show all of the RPC services from an older host only running version 2
     of rpcbind on a host named horn use:

	   example% rpcinfo -p horn

     To show all machines on the local net that are running the NFS File ser-
     vice use:

	   example% rpcinfo -b nfs 'version'

     where 'version' is one of the current nfs versions of interest.

     To delete the registration for version 1 of the rquotad service use:

	   example% rpcinfo -d rquotad 1

SEE ALSO
     rpc(5), rpcbind(8)

     RPC Programming Guide.

     RFC 1833 Binding Protocols for ONC RPC Version 2.

     RFC 5665 IANA Considerations for Remote Procedure Call (RPC) Network
     Identifiers and Universal Address Formats.

BUGS
     In summary mode the maximum number of versions and transports is 16. The
     first 16 versions and the first 16 transports received from the server
     are displayed and the rest is silently ignored.

     In the second synopsis line, for a host that is specified as a link-local
     INET6 address will always return ``no route to host''.

     In releases prior to SunOS 3.0, the Network File System (NFS) did not
     register itself with the portmapper; rpcinfo cannot be used to make RPC
     calls to the NFS server on hosts running such releases.

BSD			       November 14, 2012			   BSD
","# rpcinfo

> List programs via RPC on remote computers.
> More information: <https://docs.microsoft.com/windows-server/administration/windows-commands/rpcinfo>.

- List all programs registered on the local computer:

`rpcinfo`

- List all programs registered on a remote computer:

`rpcinfo /p {{computer_name}}`

- Call a specific program on a remote computer using TCP:

`rpcinfo /t {{computer_name}} {{program_name}}`

- Call a specific program on a remote computer using UDP:

`rpcinfo /u {{computer_name}} {{program_name}}`
"
mount,https://docs.microsoft.com/windows-server/administration/windows-commands/mount,"





































mount | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















mount


10/16/2017

2 minutes to read








+4





In this article


A command-line utility that mounts Network File System (NFS) network shares. When used without options or arguments, mount displays information about all mounted NFS file systems.

Note
This utility is available only if Client for NFS is installed.

Syntax
mount [-o <option>[...]] [-u:<username>] [-p:{<password> | *}] {\\<computername>\<sharename> | <computername>:/<sharename>} {<devicename> | *}

Parameters



Parameter
Description




-o rsize=<buffersize>
Sets the size in kilobytes of the read buffer. Acceptable values are 1, 2, 4, 8, 16, and 32; the default is 32 KB.


-o wsize=<buffersize>
Sets the size in kilobytes of the write buffer. Acceptable values are 1, 2, 4, 8, 16, and 32; the default is 32 KB.


-o timeout=<seconds>
Sets the time-out value in seconds for a remote procedure call (RPC). Acceptable values are 0.8, 0.9, and any integer in the range 1-60; the default is 0.8.


-o retry=<number>
Sets the number of retries for a soft mount. Acceptable values are integers in the range 1-10; the default is 1.


-o mtype={soft|hard}
Sets the mount type for your NFS share. By default, Windows uses a soft mount. Soft mounts time out more easily when there are connection issues; however, to reduce I/O disruption during NFS server reboots, we recommend using a hard mount.


-o anon
Mounts as an anonymous user.


-o nolock
Disables locking (default is enabled).


-o casesensitive
Forces file lookups on the server to be case sensitive.


-o fileaccess=<mode>
Specifies the default permission mode of new files created on the NFS share. Specify mode as a three-digit number in the form ogw, where o, g, and w are each a digit representing the access granted the file's owner, group, and the world, respectively. The digits must be in the range 0-7, including:0: No access1: x (execute access)2: w (write access)3: wx (write and execute access)4: r (read access)5: rx (read and execute access)6: rw (read and write access)7: rwx (read, write, and execute access)


-o lang={euc-jp|euc-tw|euc-kr|shift-jis|Big5|Ksc5601|Gb2312-80|Ansi)
Specifies the language encoding to configure on an NFS share. You can use only one language on the share. This value can include any of the following values:euc-jp: Japaneseeuc-tw: Chineseeuc-kr: Koreanshift-jis: JapaneseBig5: ChineseKsc5601: KoreanGb2312-80: Simplified ChineseAnsi: ANSI-encoded


-u:<username>
Specifies the user name to use for mounting the share. If username isn't preceded by a backslash ( \ ), it's treated as a UNIX user name.


-p:<password>
The password to use for mounting the share. If you use an asterisk (*), you'll be prompted for the password.


<computername>
Specifies the name of the NFS server.


<sharename>
Specifies the name of the file system.


<devicename>
Specifies the drive letter and name of the device. If you use an asterisk (*) this value represents the first available driver letter.



Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
MOUNT(8)		  BSD System Manager's Manual		      MOUNT(8)

NAME
     mount -- mount file systems

SYNOPSIS
     mount [-adfruvw] [-t lfs | external_type]
     mount [-dfruvw] special | mount_point
     mount [-dfruvw] [-o options] [-t lfs | external_type] special mount_point

DESCRIPTION
     The mount command calls the mount(2) system call to prepare and graft a
     special device or the remote node (rhost:path) on to the file system tree
     at the point mount_point, which must be a directory.  If either special
     or mount_point are not provided, the appropriate information is obtained
     via the getfsent(3) library routines.

     The system maintains a list of currently mounted file systems.  If no
     arguments are given to mount, this list is printed.

     The options are as follows:

     -a      All the filesystems listed via getfsent(3) are mounted.  Excep-
	     tions are those marked as ``noauto;'' excluded by the -t flag
	     (see below); entries that are neither ``ro,'' ``rw,'' or ``rq;''
	     ``nfs'' entries that also have ``net'' as an option; and already-
	     mounted ``nfs'' entries.

     -d      Causes everything to be done except for the actual system call.
	     This option is useful in conjunction with the -v flag to deter-
	     mine what the mount command is trying to do.

     -f      Forces the revocation of write access when trying to downgrade a
	     filesystem mount status from read-write to read-only.

     -o      Options are specified with a -o flag followed by a comma sepa-
	     rated string of options.  The following options are available:

	     async   All I/O to the file system should be done asynchronously.
		     This can be somewhat dangerous with respect to losing
		     data when faced with system crashes and power outages.
		     This is also the default.	It can be avoided with the
		     noasync option.

	     force   The same as -f; forces the revocation of write access
		     when trying to downgrade a filesystem mount status from
		     read-write to read-only.

	     noasync
		     This filesystem should not force all I/O to be written
		     asynchronously.

	     noauto  This filesystem should be skipped when mount is run with
		     the -a flag.

	     nodev   Do not interpret character or block special devices on
		     the file system.  This option is useful for a server that
		     has file systems containing special devices for architec-
		     tures other than its own.

	     noexec  Do not allow execution of any binaries on the mounted
		     file system.  This option is useful for a server that has
		     file systems containing binaries for architectures other
		     than its own.

	     noowners
		     Ignore the ownership field for the entire volume.	This
		     causes all objects to appear as owned by user ID 99 and
		     group ID 99.  User ID 99 is interpreted as the current
		     effective user ID, while group ID 99 is used directly and
		     translates to ``unknown''.

	     nosuid  Do not allow set-user-identifier or set-group-identifier
		     bits to take effect.

	     rdonly  The same as -r; mount the file system read-only (even the
		     super-user may not write it).

	     sync    All I/O to the file system should be done synchronously.

	     update  The same as -u; indicate that the status of an already
		     mounted file system should be changed.

	     union   Causes the namespace to appear as the union of directo-
		     ries of the mounted filesystem with corresponding direc-
		     tories in the underlying filesystem.  Lookups will be
		     done in the mounted filesystem first.  If those opera-
		     tions fail due to a non-existent file the underlying
		     directory is then accessed.

	     noatime
		     Do not update the file access time when reading from a
		     file.  This option is useful on file systems where there
		     are large numbers of files and performance is more criti-
		     cal than updating the file access time (which is rarely
		     ever important).

	     nobrowse
		     This option indicates that the mount point should not be
		     visible via the GUI (i.e., appear on the Desktop as a
		     separate volume).

	     Any additional options specific to a filesystem type that is not
	     one of the internally known types (see the -t option) may be
	     passed as a comma separated list; these options are distinguished
	     by a leading ``-'' (dash).  Options that take a value are speci-
	     fied using the syntax -option=value.  For example, the mount com-
	     mand:

		   mount -t hfs -o nosuid,-w,-m=755 /dev/disk2s9 /tmp

	     causes mount to execute the equivalent of:

		   /sbin/mount_hfs -o nosuid -w -m 755 /dev/disk2s9 /tmp

     -r      Mount the file system read-only (even the super-user may not
	     write it).  The same as the ``rdonly'' argument to the -o option.

     -t lfs | external type
	     The argument following the -t is used to indicate the file system
	     type.  There is no default local file system for use with mount.
	     A type must be specified in order to mount a non-NFS filesystem.
	     The -t option can be used to indicate that the actions should
	     only be taken on filesystems of the specified type.  More than
	     one type may be specified in a comma separated list.  The list of
	     filesystem types can be prefixed with ``no'' to specify the
	     filesystem types for which action should not be taken.  For exam-
	     ple, the mount command:

		   mount -a -t nonfs,hfs

	     mounts all filesystems except those of type NFS and HFS.

	     If the type is not one of the internally known types, mount will
	     attempt to execute a program in /sbin/mount_XXX where XXX is
	     replaced by the type name.  For example, nfs filesystems are
	     mounted by the program /sbin/mount_nfs.

     -u      The -u flag indicates that the status of an already mounted file
	     system should be changed.	Any of the options discussed above
	     (the -o option) may be changed; also a file system can be changed
	     from read-only to read-write or vice versa.  An attempt to change
	     from read-write to read-only will fail if any files on the
	     filesystem are currently open for writing unless the -f flag is
	     also specified.  The set of options is determined by first
	     extracting the options for the file system from the filesystem
	     table (see getfsent(3)) then applying any options specified by
	     the -o argument, and finally applying the -r or -w option.

     -v      Verbose mode.

     -w      Mount the file system read-write.

	     The options specific to NFS filesystems are described in the
	     mount_nfs(8) manual page.

SEE ALSO
     mount(2), getfsent(3), mount_afp(8), mount_cd9660(8), mount_cddafs(8),
     mount_fdesc(8), mount_hfs(8), mount_apfs(8), mount_msdos(8),
     mount_nfs(8), mount_smbfs(8), mount_udf(8), mount_webdav(8), umount(8)

BUGS
     It is possible for a corrupted file system to cause a crash.

HISTORY
     A mount command appeared in Version 6 AT&T UNIX.

4th Berkeley Distribution	 June 16, 1994	     4th Berkeley Distribution
","# mount

> Mount Network File System (NFS) network shares.
> More information: <https://docs.microsoft.com/windows-server/administration/windows-commands/mount>.

- Mount a share to the ""Z"" drive letter:

`mount \\{{computer_name}}\{{share_name}} {{Z:}}`

- Mount a share to the next available drive letter:

`mount \\{{computer_name}}\{{share_name}} *`

- Mount a share with a read timeout in seconds (defaults to 0.8, can be 0.9 or 1 to 60):

`mount -o timeout={{seconds}} \\{{computer_name}}\{{share_name}} {{Z:}}`

- Mount a share and retry up to 10 times if it fails:

`mount -o retry={{retries}} \\{{computer_name}}\{{share_name}} {{Z:}}`

- Mount a share with forced case sensitivity:

`mount -o casesensitive \\{{computer_name}}\{{share_name}} {{Z:}}`

- Mount a share as an anonymous user:

`mount -o anon \\{{computer_name}}\{{share_name}} {{Z:}}`

- Mount a share using a specific mount type:

`mount -o mtype={{soft|hard}} \\{{computer_name}}\{{share_name}} {{Z:}}`
"
msg,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/msg,"





































msg | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















msg


10/16/2017

2 minutes to read













In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

Sends a message to a user on a Remote Desktop Session Host server.

Note
You must have Message special access permission to send a message.

Syntax
msg {<username> | <sessionname> | <sessionID>| @<filename> | *} [/server:<servername>] [/time:<seconds>] [/v] [/w] [<message>]

Parameters



Parameter
Description




<username>
Specifies the name of the user that you want to receive the message. If you don't specify a user or a session, this command displays an error message. When specifying a session, it must be an active one.


<sessionname>
Specifies the name of the session that you want to receive the message. If you don't specify a user or a session, this command displays an error message. When specifying a session, it must be an active one.


<sessionID>
Specifies the numeric ID of the session whose user you want to receive a message.


@<filename>
Identifies a file containing a list of user names, session names, and session IDs that you want to receive the message.


*
Sends the message to all user names on the system.


/server:<servername>
Specifies the Remote Desktop Session Host server whose session or user you want to receive the message. If unspecified, /server uses the server to which you are currently logged on.


/time:<seconds>
Specifies the amount of time that the message you sent is displayed on the user's screen. After the time limit is reached, the message disappears. If no time limit is set, the message remains on the user's screen until the user sees the message and clicks OK.


/v
Displays information about the actions being performed.


/w
Waits for an acknowledgment from the user that the message has been received. Use this parameter with /time:<*seconds*> to avoid a possible long delay if the user does not immediately respond. Using this parameter with /v is also helpful.


<message>
Specifies the text of the message that you want to send. If no message is specified, you will be prompted to enter a message. To send a message that is contained in a file, type the less than (<) symbol followed by the file name.


/?
Displays help at the command prompt.



Examples
To send a message entitled, Let's meet at 1PM today to all sessions for User1, type:
msg User1 Let's meet at 1PM today

To send the same message to session modeM02, type:
msg modem02 Let's meet at 1PM today

To send the message to all sessions contained in the file userlist, type:
msg @userlist Let's meet at 1PM today

To send the message to all users who are logged on, type:
msg * Let's meet at 1PM today

To send the message to all users, with an acknowledgment time-out (for example, 10 seconds), type:
msg * /time:10 Let's meet at 1PM today

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# msg

> Send a message to a specific user or session.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/msg>.

- Send a message to a specified user or session:

`msg {{username|session_name|session_id}} {{message}}`

- Send a message from `stdin`:

`echo ""{{message}}"" | msg {{username|session_name|session_id}}`

- Send a message to a specific server:

`msg /server:{{server_name}} {{username|session_name|session_id}}`

- Send a message to all users of the current machine:

`msg *`

- Set a delay in seconds for a message:

`msg /time:{{seconds}}`
"
takeown,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/takeown,"





































takeown | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















takeown


10/16/2017

2 minutes to read













In this article


Enables an administrator to recover access to a file that previously was denied, by making the administrator the owner of the file.
Syntax
takeown [/s <Computer> [/u [<Domain>\]<User name> [/p [<Password>]]]] /f <File name> [/a] [/r [/d {Y|N}]]

Parameters



Parameter
Description




/s <Computer>
Specifies the name or IP address of a remote computer (do not use backslashes). The default value is the local computer. This parameter applies to all of the files and folders specified in the command.


/u [<Domain>]
Runs the script with the permissions of the specified user account. The default value is system permissions.


/p [<Password>]
Specifies the password of the user account that is specified in the /u parameter.


/f <File name>
Specifies the file name or directory name pattern. You can use the wildcard character * when specifying the pattern. You can also use the syntax ShareName*FileName*.


/a
Gives ownership to the Administrators group instead of the current user.


/r
Performs a recursive operation on all files in the specified directory and subdirectories.


/d {Y | N}
Suppresses the confirmation prompt that is displayed when the current user does not have the ""List Folder"" permission on a specified directory, and instead uses the specified default value. Valid values for the /d option are as follows:-   Y: Take ownership of the directory.-   N: Skip the directory.Note that you must use this option in conjunction with the /r option.


/?
Displays help at the command prompt.



Remarks

This command is typically used in batch files.
If the /a parameter is not specified, file ownership is given to the user who is currently logged on to the computer.
Mixed patterns using (? and *) are not supported by takeown command.
After deleting the lock with takeown, you might have to use Windows Explorer or the cacls command to give yourself full permissions to the files and directories before you can delete them. For more information about cacls, see ""Additional References"" at the end of this topic.

Examples
To take ownership of a file named Lostfile, type:
takeown /f lostfile

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# takeown

> Take ownership of a file or directory.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/takeown>.

- Take ownership of the specified file:

`takeown /f {{path/to/file}}`

- Take ownership of the specified directory:

`takeown /d {{path/to/directory}}`

- Take ownership of the specified directory and all subdirectories:

`takeown /r /d {{path/to/directory}}`

- Change ownership to the Administrator group instead of the current user:

`takeown /a /f {{path/to/file}}`
"
set,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/set,"




























404 - Content Not Found | Microsoft Docs












Skip to main content














 













				404 - Page not found
			
Hmm, we couldn't find this link, but here are some related  search results that may be helpful.






























































Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
BUILTIN(1)		  BSD General Commands Manual		    BUILTIN(1)

NAME
     builtin, !, %, ., :, @, {, }, alias, alloc, bg, bind, bindkey, break,
     breaksw, builtins, case, cd, chdir, command, complete, continue, default,
     dirs, do, done, echo, echotc, elif, else, end, endif, endsw, esac, eval,
     exec, exit, export, false, fc, fg, filetest, fi, for, foreach, getopts,
     glob, goto, hash, hashstat, history, hup, if, jobid, jobs, kill, limit,
     local, log, login, logout, ls-F, nice, nohup, notify, onintr, popd,
     printenv, pushd, pwd, read, readonly, rehash, repeat, return, sched, set,
     setenv, settc, setty, setvar, shift, source, stop, suspend, switch,
     telltc, test, then, time, times, trap, true, type, ulimit, umask,
     unalias, uncomplete, unhash, unlimit, unset, unsetenv, until, wait,
     where, which, while -- shell built-in commands

SYNOPSIS
     builtin [-options] [args ...]

DESCRIPTION
     Shell builtin commands are commands that can be executed within the run-
     ning shell's process.  Note that, in the case of csh(1) builtin commands,
     the command is executed in a subshell if it occurs as any component of a
     pipeline except the last.

     If a command specified to the shell contains a slash ``/'', the shell
     will not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying ``echo'' causes a builtin command to be executed under shells
     that support the echo builtin command, specifying ``/bin/echo'' or
     ``./echo'' does not.

     While some builtin commands may exist in more than one shell, their oper-
     ation may be different under each shell which supports them.  Below is a
     table which lists shell builtin commands, the standard shells that sup-
     port them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.	Beware that the sh(1) manual page, at least, calls some of
     these commands ``built-in commands'' and some of them ``reserved words''.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked ``No**'' under External do exist externally, but are
     implemented as scripts using a builtin command of the same name.

	   Command	 External    csh(1)    sh(1)
	   !		 No	     No        Yes
	   %		 No	     Yes       No
	   .		 No	     No        Yes
	   :		 No	     Yes       Yes
	   @		 No	     Yes       Yes
	   {		 No	     No        Yes
	   }		 No	     No        Yes
	   alias	 No**	     Yes       Yes
	   alloc	 No	     Yes       No
	   bg		 No**	     Yes       Yes
	   bind 	 No	     No        Yes
	   bindkey	 No	     Yes       No
	   break	 No	     Yes       Yes
	   breaksw	 No	     Yes       No
	   builtin	 No	     No        Yes
	   builtins	 No	     Yes       No
	   case 	 No	     Yes       Yes
	   cd		 No**	     Yes       Yes
	   chdir	 No	     Yes       Yes
	   command	 No**	     No        Yes
	   complete	 No	     Yes       No
	   continue	 No	     Yes       Yes
	   default	 No	     Yes       No
	   dirs 	 No	     Yes       No
	   do		 No	     No        Yes
	   done 	 No	     No        Yes
	   echo 	 Yes	     Yes       Yes
	   echotc	 No	     Yes       No
	   elif 	 No	     No        Yes
	   else 	 No	     Yes       Yes
	   end		 No	     Yes       No
	   endif	 No	     Yes       No
	   endsw	 No	     Yes       No
	   esac 	 No	     No        Yes
	   eval 	 No	     Yes       Yes
	   exec 	 No	     Yes       Yes
	   exit 	 No	     Yes       Yes
	   export	 No	     No        Yes
	   false	 Yes	     No        Yes
	   fc		 No**	     No        Yes
	   fg		 No**	     Yes       Yes
	   filetest	 No	     Yes       No
	   fi		 No	     No        Yes
	   for		 No	     No        Yes
	   foreach	 No	     Yes       No
	   getopts	 No**	     No        Yes
	   glob 	 No	     Yes       No
	   goto 	 No	     Yes       No
	   hash 	 No	     No        Yes
	   hashstat	 No	     Yes       No
	   history	 No	     Yes       No
	   hup		 No	     Yes       No
	   if		 No	     Yes       Yes
	   jobid	 No	     No        Yes
	   jobs 	 No**	     Yes       Yes
	   kill 	 Yes	     Yes       No
	   limit	 No	     Yes       No
	   local	 No	     No        Yes
	   log		 No	     Yes       No
	   login	 Yes	     Yes       No
	   logout	 No	     Yes       No
	   ls-F 	 No	     Yes       No
	   nice 	 Yes	     Yes       No
	   nohup	 Yes	     Yes       No
	   notify	 No	     Yes       No
	   onintr	 No	     Yes       No
	   popd 	 No	     Yes       No
	   printenv	 Yes	     Yes       No
	   pushd	 No	     Yes       No
	   pwd		 Yes	     No        Yes
	   read 	 No**	     No        Yes
	   readonly	 No	     No        Yes
	   rehash	 No	     Yes       No
	   repeat	 No	     Yes       No
	   return	 No	     No        Yes
	   sched	 No	     Yes       No
	   set		 No	     Yes       Yes
	   setenv	 No	     Yes       No
	   settc	 No	     Yes       No
	   setty	 No	     Yes       No
	   setvar	 No	     No        Yes
	   shift	 No	     Yes       Yes
	   source	 No	     Yes       No
	   stop 	 No	     Yes       No
	   suspend	 No	     Yes       No
	   switch	 No	     Yes       No
	   telltc	 No	     Yes       No
	   test 	 Yes	     No        Yes
	   then 	 No	     No        Yes
	   time 	 Yes	     Yes       No
	   times	 No	     No        Yes
	   trap 	 No	     No        Yes
	   true 	 Yes	     No        Yes
	   type 	 No	     No        Yes
	   ulimit	 No	     No        Yes
	   umask	 No**	     Yes       Yes
	   unalias	 No**	     Yes       Yes
	   uncomplete	 No	     Yes       No
	   unhash	 No	     Yes       No
	   unlimit	 No	     Yes       No
	   unset	 No	     Yes       Yes
	   unsetenv	 No	     Yes       No
	   until	 No	     No        Yes
	   wait 	 No**	     Yes       Yes
	   where	 No	     Yes       No
	   which	 Yes	     Yes       No
	   while	 No	     Yes       Yes

SEE ALSO
     csh(1), echo(1), false(1), info(1), kill(1), login(1), nice(1), nohup(1),
     printenv(1), pwd(1), sh(1), test(1), time(1), true(1), which(1)

HISTORY
     The builtin manual page first appeared in FreeBSD 3.4.

AUTHORS
     This manual page was written by Sheldon Hearn <sheldonh@FreeBSD.org>.

BSD			       February 23, 2005			   BSD
","# set

> Display or set environment variables for the current instance of CMD.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/set>.

- List all current environment variables:

`set`

- Set an environment variable to a specific value:

`set {{name}}={{value}}`

- List environment variables starting with the specified string:

`set {{name}}`

- Prompt the user for a value for the specified variable:

`set /p {{name}}={{prompt_string}}`
"
eventcreate,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/eventcreate,"





































eventcreate | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















eventcreate


10/16/2017

2 minutes to read








+2





In this article


Enables an administrator to create a custom event in a specified event log.

Important
Custom events can't be written to the security log.

Syntax
eventcreate [/s <computer> [/u <domain\user> [/p <password>]] {[/l {APPLICATION|SYSTEM}]|[/so <srcname>]} /t {ERROR|WARNING|INFORMATION|SUCCESSAUDIT|FAILUREAUDIT} /id <eventID> /d <description>

Parameters



Parameter
Description




/s <computer>
Specifies the name or IP address of a remote computer (do not use backslashes). The default is the local computer.


/u <domain\user>
Runs the command with the account permissions of the user specified by <user> or <domain\user>. The default is the permissions of the current logged on user on the computer issuing the command.


/p <password>
Specifies the password of the user account that is specified in the /u parameter.


/l {APPLICATION | SYSTEM}
Specifies the name of the event log where the event will be created. The valid log names are APPLICATION or SYSTEM.


/so <srcname>
Specifies the source to use for the event. A valid source can be any string and should represent the application or component that is generating the event.


/t {ERROR | WARNING | INFORMATION | SUCCESSAUDIT | FAILUREAUDIT}
Specifies the type of event to create. The valid types are ERROR, WARNING, INFORMATION, SUCCESSAUDIT, and FAILUREAUDIT.


/id <eventID>
Specifies the event ID for the event. A valid ID is any number from 1 to 1000.


/d <description>
Specifies the description to use for the newly created event.


/?
Displays help at the command prompt.



Examples
The following examples show how you can use the eventcreate command:
eventcreate /t ERROR /id 100 /l application /d ""Create event in application log""
eventcreate /t INFORMATION /id 1000 /d ""Create event in WinMgmt source""
eventcreate /t ERROR /id 201 /so winword /l application /d ""New src Winword in application log""
eventcreate /s server /t ERROR /id 100 /l application /d ""Remote machine without user credentials""
eventcreate /s server /u user /p password /id 100 /t ERROR /l application /d ""Remote machine with user credentials""
eventcreate /s server1 /s server2 /u user /p password /id 100 /t ERROR /d ""Creating events on Multiple remote machines""
eventcreate /s server /u user /id 100 /t WARNING /d ""Remote machine with partial user credentials""

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# eventcreate

> Create custom entries in the event log.
> Event IDs can be any number between 1 and 1000.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/eventcreate>.

- Create a new event with a given id (1-1000) in the log:

`eventcreate /t {{success|error|warning|information}} /id {{id}} /d ""{{message}}""`

- Create an event in a specific event log:

`eventcreate /l {{log_name}} /t {{type}} /id {{id}} /d ""{{message}}""`

- Create an event with a specific source:

`eventcreate /so {{source_name}} /t {{type}} /id {{id}} /d ""{{message}}""`

- Create an event in a remote machine's event log:

`eventcreate /s {{hostname}} /u {{username}} /p {{password}} /t {{type}} /id {{id}} /d ""{{message""}}`
"
clip,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/clip,"





































clip | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















clip


10/16/2017

2 minutes to read













In this article


Redirects the command output from the command line to the Windows clipboard. You can use this command to copy data directly into any application that can receive text from the Clipboard. You can also paste this text output into other programs.
Syntax
<command> | clip
clip < <filename>

Parameters



Parameter
Description




<command>
Specifies a command whose output you want to send to the Windows clipboard.


<filename>
Specifies a file whose contents you want to send to the Windows clipboard.


/?
Displays help at the command prompt.



Examples
To copy the current directory listing to the Windows clipboard, type:
dir | clip

To copy the output of a program called generic.awk to the Windows clipboard, type:
awk -f generic.awk input.txt | clip

To copy the contents of a file called readme.txt to the Windows clipboard, type:
clip < readme.txt

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# clip

> Copy input content to the Windows clipboard.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/clip>.

- Pipe command line output to the Windows clipboard:

`{{dir}} | clip`

- Copy the contents of a file to the Windows clipboard:

`clip < {{path/to/file.ext}}`

- Copy text with a trailing newline to the Windows clipboard:

`echo {{some text}} | clip`

- Copy text without a trailing newline to the Windows clipboard:

`echo | set /p=""some text"" | clip`
"
subst,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/subst,"





































subst | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















subst


10/16/2017

2 minutes to read













In this article


Associates a path with a drive letter. If used without parameters, subst displays the names of the virtual drives in effect.
Syntax
subst [<Drive1>: [<Drive2>:]<Path>]
subst <Drive1>: /d

Parameters



Parameter
Description




<Drive1>:
Specifies the virtual drive to which you want to assign a path.


[<Drive2>:]<Path>
Specifies the physical drive and path that you want to assign to a virtual drive.


/d
Deletes a substituted (virtual) drive.


/?
Displays help at the command prompt.



Remarks

The following commands do not work and should not be used on drives that are specified in the subst command:
chkdsk
diskcomp
diskcopy
format
label
recover

The Drive1 parameter must be within the range that is specified by the lastdrive command. If not, subst displays the following error message:
Invalid parameter - drive1:


Examples
To create a virtual drive Z for the path B:\User\Betty\Forms, type:
subst z: b:\user\betty\forms

Instead of typing the full path, you can reach this directory by typing the letter of the virtual drive followed by a colon as follows:
z:

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","subst(n)		     Tcl Built-In Commands		      subst(n)



______________________________________________________________________________

NAME
       subst - Perform backslash, command, and variable substitutions

SYNOPSIS
       subst ?-nobackslashes? ?-nocommands? ?-novariables? string
_________________________________________________________________

DESCRIPTION
       This  command  performs	variable substitutions, command substitutions,
       and backslash substitutions on its  string  argument  and  returns  the
       fully-substituted  result.   The substitutions are performed in exactly
       the same way as for Tcl commands.  As a result, the string argument  is
       actually substituted twice, once by the Tcl parser in the usual fashion
       for Tcl commands, and again by the subst command.

       If any of the -nobackslashes, -nocommands, or -novariables  are	speci-
       fied,  then  the  corresponding	substitutions  are not performed.  For
       example, if -nocommands is specified, command substitution is not  per-
       formed:	 open  and  close  brackets are treated as ordinary characters
       with no special interpretation.

       Note that the substitution of one  kind	can  include  substitution  of
       other  kinds.  For example, even when the -novariables option is speci-
       fied, command substitution  is  performed  without  restriction.   This
       means  that any variable substitution necessary to complete the command
       substitution will still take place.  Likewise, any command substitution
       necessary  to  complete	a  variable substitution will take place, even
       when -nocommands is specified.  See the EXAMPLES below.

       If an error occurs during substitution, then  subst  will  return  that
       error.	If a break exception occurs during command or variable substi-
       tution, the result of the whole substitution will  be  the  string  (as
       substituted) up to the start of the substitution that raised the excep-
       tion.  If a continue exception occurs during the evaluation of  a  com-
       mand  or variable substitution, an empty string will be substituted for
       that entire command or variable substitution (as long as  it  is  well-
       formed Tcl.)  If a return exception occurs, or any other return code is
       returned during command or variable  substitution,  then  the  returned
       value  is  substituted  for that substitution.  See the EXAMPLES below.
       In this way, all exceptional return codes are ""caught"" by  subst.   The
       subst command itself will either return an error, or will complete suc-
       cessfully.

EXAMPLES
       When it performs its substitutions, subst does  not  give  any  special
       treatment  to double quotes or curly braces (except within command sub-
       stitutions) so the script
	      set a 44
	      subst {xyz {$a}}
       returns ""xyz {44}"", not ""xyz {$a}"" and the script
	      set a ""p\} q \{r""
	      subst {xyz {$a}}
       returns ""xyz {p} q {r}"", not ""xyz {p\} q \{r}"".

       When command substitution is performed, it includes any	variable  sub-
       stitution necessary to evaluate the script.
	      set a 44
	      subst -novariables {$a [format $a]}
       returns ""$a 44"", not ""$a $a"".  Similarly, when variable substitution is
       performed, it includes any command substitution necessary  to  retrieve
       the value of the variable.
	      proc b {} {return c}
	      array set a {c c [b] tricky}
	      subst -nocommands {[b] $a([b])}
       returns ""[b] c"", not ""[b] tricky"".

       The  continue  and break exceptions allow command substitutions to pre-
       vent substitution of the rest of the command substitution and the  rest
       of  string  respectively,  giving script authors more options when pro-
       cessing text using subst.  For example, the script
	      subst {abc,[break],def}
       returns ""abc,"", not ""abc,,def"" and the script
	      subst {abc,[continue;expr {1+2}],def}
       returns ""abc,,def"", not ""abc,3,def"".

       Other exceptional return codes substitute the returned value
	      subst {abc,[return foo;expr {1+2}],def}
       returns ""abc,foo,def"", not ""abc,3,def"" and
	      subst {abc,[return -code 10 foo;expr {1+2}],def}
       also returns ""abc,foo,def"", not ""abc,3,def"".

SEE ALSO
       Tcl(n), eval(n), break(n), continue(n)

KEYWORDS
       backslash substitution, command substitution, variable substitution



Tcl				      7.4			      subst(n)
","# subst

> Associates a path with a virtual drive letter.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/subst>.

- List active associations:

`subst`

- Add an association:

`subst {{Z:}} {{C:\Python2.7}}`

- Remove an association:

`subst {{Z:}} /d`
"
exit,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/exit,"





































exit | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















exit


10/16/2017

2 minutes to read













In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

Exits the command interpreter or the current batch script.
Syntax
exit [/b] [<exitcode>]

Parameters



Parameter
Description




/b
Exits the current batch script instead of exiting Cmd.exe. If executed from outside a batch script, exits Cmd.exe.


<exitcode>
Specifies a numeric number. If /b is specified, the ERRORLEVEL environment variable is set to that number. If you are quitting the command interpreter, the process exit code is set to that number.


/?
Displays help at the command prompt.



Examples
To close the command interpreter, type:
exit

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
BUILTIN(1)		  BSD General Commands Manual		    BUILTIN(1)

NAME
     builtin, !, %, ., :, @, {, }, alias, alloc, bg, bind, bindkey, break,
     breaksw, builtins, case, cd, chdir, command, complete, continue, default,
     dirs, do, done, echo, echotc, elif, else, end, endif, endsw, esac, eval,
     exec, exit, export, false, fc, fg, filetest, fi, for, foreach, getopts,
     glob, goto, hash, hashstat, history, hup, if, jobid, jobs, kill, limit,
     local, log, login, logout, ls-F, nice, nohup, notify, onintr, popd,
     printenv, pushd, pwd, read, readonly, rehash, repeat, return, sched, set,
     setenv, settc, setty, setvar, shift, source, stop, suspend, switch,
     telltc, test, then, time, times, trap, true, type, ulimit, umask,
     unalias, uncomplete, unhash, unlimit, unset, unsetenv, until, wait,
     where, which, while -- shell built-in commands

SYNOPSIS
     builtin [-options] [args ...]

DESCRIPTION
     Shell builtin commands are commands that can be executed within the run-
     ning shell's process.  Note that, in the case of csh(1) builtin commands,
     the command is executed in a subshell if it occurs as any component of a
     pipeline except the last.

     If a command specified to the shell contains a slash ``/'', the shell
     will not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying ``echo'' causes a builtin command to be executed under shells
     that support the echo builtin command, specifying ``/bin/echo'' or
     ``./echo'' does not.

     While some builtin commands may exist in more than one shell, their oper-
     ation may be different under each shell which supports them.  Below is a
     table which lists shell builtin commands, the standard shells that sup-
     port them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.	Beware that the sh(1) manual page, at least, calls some of
     these commands ``built-in commands'' and some of them ``reserved words''.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked ``No**'' under External do exist externally, but are
     implemented as scripts using a builtin command of the same name.

	   Command	 External    csh(1)    sh(1)
	   !		 No	     No        Yes
	   %		 No	     Yes       No
	   .		 No	     No        Yes
	   :		 No	     Yes       Yes
	   @		 No	     Yes       Yes
	   {		 No	     No        Yes
	   }		 No	     No        Yes
	   alias	 No**	     Yes       Yes
	   alloc	 No	     Yes       No
	   bg		 No**	     Yes       Yes
	   bind 	 No	     No        Yes
	   bindkey	 No	     Yes       No
	   break	 No	     Yes       Yes
	   breaksw	 No	     Yes       No
	   builtin	 No	     No        Yes
	   builtins	 No	     Yes       No
	   case 	 No	     Yes       Yes
	   cd		 No**	     Yes       Yes
	   chdir	 No	     Yes       Yes
	   command	 No**	     No        Yes
	   complete	 No	     Yes       No
	   continue	 No	     Yes       Yes
	   default	 No	     Yes       No
	   dirs 	 No	     Yes       No
	   do		 No	     No        Yes
	   done 	 No	     No        Yes
	   echo 	 Yes	     Yes       Yes
	   echotc	 No	     Yes       No
	   elif 	 No	     No        Yes
	   else 	 No	     Yes       Yes
	   end		 No	     Yes       No
	   endif	 No	     Yes       No
	   endsw	 No	     Yes       No
	   esac 	 No	     No        Yes
	   eval 	 No	     Yes       Yes
	   exec 	 No	     Yes       Yes
	   exit 	 No	     Yes       Yes
	   export	 No	     No        Yes
	   false	 Yes	     No        Yes
	   fc		 No**	     No        Yes
	   fg		 No**	     Yes       Yes
	   filetest	 No	     Yes       No
	   fi		 No	     No        Yes
	   for		 No	     No        Yes
	   foreach	 No	     Yes       No
	   getopts	 No**	     No        Yes
	   glob 	 No	     Yes       No
	   goto 	 No	     Yes       No
	   hash 	 No	     No        Yes
	   hashstat	 No	     Yes       No
	   history	 No	     Yes       No
	   hup		 No	     Yes       No
	   if		 No	     Yes       Yes
	   jobid	 No	     No        Yes
	   jobs 	 No**	     Yes       Yes
	   kill 	 Yes	     Yes       No
	   limit	 No	     Yes       No
	   local	 No	     No        Yes
	   log		 No	     Yes       No
	   login	 Yes	     Yes       No
	   logout	 No	     Yes       No
	   ls-F 	 No	     Yes       No
	   nice 	 Yes	     Yes       No
	   nohup	 Yes	     Yes       No
	   notify	 No	     Yes       No
	   onintr	 No	     Yes       No
	   popd 	 No	     Yes       No
	   printenv	 Yes	     Yes       No
	   pushd	 No	     Yes       No
	   pwd		 Yes	     No        Yes
	   read 	 No**	     No        Yes
	   readonly	 No	     No        Yes
	   rehash	 No	     Yes       No
	   repeat	 No	     Yes       No
	   return	 No	     No        Yes
	   sched	 No	     Yes       No
	   set		 No	     Yes       Yes
	   setenv	 No	     Yes       No
	   settc	 No	     Yes       No
	   setty	 No	     Yes       No
	   setvar	 No	     No        Yes
	   shift	 No	     Yes       Yes
	   source	 No	     Yes       No
	   stop 	 No	     Yes       No
	   suspend	 No	     Yes       No
	   switch	 No	     Yes       No
	   telltc	 No	     Yes       No
	   test 	 Yes	     No        Yes
	   then 	 No	     No        Yes
	   time 	 Yes	     Yes       No
	   times	 No	     No        Yes
	   trap 	 No	     No        Yes
	   true 	 Yes	     No        Yes
	   type 	 No	     No        Yes
	   ulimit	 No	     No        Yes
	   umask	 No**	     Yes       Yes
	   unalias	 No**	     Yes       Yes
	   uncomplete	 No	     Yes       No
	   unhash	 No	     Yes       No
	   unlimit	 No	     Yes       No
	   unset	 No	     Yes       Yes
	   unsetenv	 No	     Yes       No
	   until	 No	     No        Yes
	   wait 	 No**	     Yes       Yes
	   where	 No	     Yes       No
	   which	 Yes	     Yes       No
	   while	 No	     Yes       Yes

SEE ALSO
     csh(1), echo(1), false(1), info(1), kill(1), login(1), nice(1), nohup(1),
     printenv(1), pwd(1), sh(1), test(1), time(1), true(1), which(1)

HISTORY
     The builtin manual page first appeared in FreeBSD 3.4.

AUTHORS
     This manual page was written by Sheldon Hearn <sheldonh@FreeBSD.org>.

BSD			       February 23, 2005			   BSD
","# exit

> Quit the current CMD instance or the current batch file.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/exit>.

- Quit the current CMD instance:

`exit`

- Quit the current batch script:

`exit /b`

- Quit using a specific exit code:

`exit {{exit_code}}`
"
reg-add,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-add,"





































reg add | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















reg add


10/16/2017

2 minutes to read








+2





In this article


Adds a new subkey or entry to the registry.
Syntax
reg add <keyname> [{/v Valuename | /ve}] [/t datatype] [/s Separator] [/d Data] [/f]

Parameters



Parameter
Description




<keyname>
Specifies the full path of the subkey or entry to be added. To specify a remote computer, include the computer name (in the format \\<computername>\) as part of the keyname. Omitting \\<computername>\ causes the operation to default to the local computer. The keyname must include a valid root key. Valid root keys for the local computer are: HKLM, HKCU, HKCR, HKU, and HKCC. If a remote computer is specified, valid root keys are: HKLM and HKU. If the registry key name contains a space, enclose the key name in quotes.


/v <Valuename>
Specifies the name of the add registry entry.


/ve
Specifies that the added registry entry has a null value.


/t <Type>
Specifies the type for the registry entry. Type must be one of the following:REG_SZREG_MULTI_SZREG_DWORD_BIG_ENDIANREG_DWORDREG_BINARYREG_DWORD_LITTLE_ENDIANREG_LINKREG_FULL_RESOURCE_DESCRIPTORREG_EXPAND_SZ


/s <Separator>
Specifies the character to be used to separate multiple instances of data when the REG_MULTI_SZ data type is specified and more than one entry is listed. If not specified, the default separator is \0.


/d <Data>
Specifies the data for the new registry entry.


/f
Adds the registry entry without prompting for confirmation.


/?
Displays help at the command prompt.



Remarks

Subtrees can't be added with this operation. This version of reg doesn't ask for confirmation when adding a subkey.

The return values for the reg add operation are:





Value
Description




0
Success


1
Failure




For the REG_EXPAND_SZ key type, use the caret symbol ( ^ ) with % inside the /d parameter.

Examples
To add the key HKLM\Software\MyCo on remote computer ABC, type:
reg add \\ABC\HKLM\Software\MyCo

To add a registry entry to HKLM\Software\MyCo with a value named Data, the type REG_BINARY, and data of fe340ead, type:
reg add HKLM\Software\MyCo /v Data /t REG_BINARY /d fe340ead

To add a multi-valued registry entry to  HKLM\Software\MyCo with a value named MRU, the type REG_MULTI_SZ, and data of fax\0mail\0\0, type:
reg add HKLM\Software\MyCo /v MRU /t REG_MULTI_SZ /d fax\0mail\0\0

To add an expanded registry entry to HKLM\Software\MyCo with a value named Path, the type REG_EXPAND_SZ, and data of %systemroot%, type:
reg add HKLM\Software\MyCo /v Path /t REG_EXPAND_SZ /d ^%systemroot^%

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# reg add

> Add new keys and their values to the registry.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-add>.

- Add a new registry key:

`reg add {{key_name}}`

- Add a new value under a specific key:

`reg add {{key_name}} /v {{value}}`

- Add a new value with specific data:

`reg add {{key_name}} /d {{data}}`

- Add a new value to a key with a specific data type:

`reg add {{key_name}} /t {{type}}`

- Forcefully overwrite the existing registry value without a prompt:

`reg add {{key_name}} /f`
"
choco-outdated,https://chocolatey.org/docs/commands-outdated,"




Chocolatey Software | Commands Outdated






































Here's how we're responding to COVID-19 plus resources to help

×













Resources
Watch videos, read documentation, and hear Chocolatey success stories from companies you trust.
View Resources






Events
Find past and upcoming webinars, workshops, and conferences. New events have recently been added!
View Events






Courses
Step-by-step guides for all things Chocolatey! Earn badges as you learn through interactive digital courses.
View Courses











Tuesday, 22 September 20203 PM BST/GMT+1 / 4 PM CEST / 9 AM Central / 10 AM Eastern

            Standardising tool sets across different Teams is not always easy... especially when different Teams have traditionally used different approaches and methodologies.
            In this webinar we will unpack the advantages of a more standard, consistent approach with Puppet & Chocolatey.
        
Register Now






Webinar Replay fromTuesday, 23 June 2020
Chocolatey Central Management now includes the premiere feature of managing endpoints through a Chocolatey-centered solution aka Deployments. We are excited to share what Deployments is all about!
Learn More
Watch Now



COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.
Find Resources






Chocolatey for Business Feature Video Series

            In this video series, come take a tour of the many features available in our Chocolatey for Business offering.
            Many organizations choose Chocolatey for Business when they want to scale out their solution across thousands of nodes, deploy rapidly and reliably every time,
            mitigate risks with a greatly-simplified patching workflow, and access a Support Team that will guide you on your automation journey.
        
Watch the Series

































id:searchValue search by id only
tag:searchValue search by tags













Overview




 Go Back
Overview




Why Chocolatey?
Chocolatey is a software management solution unlike anything else you've ever experienced on Windows. Chocolatey brings the concepts of true package management to allow you to version things, manage dependencies and installation order, better inventory management, and other features.

How Chocolatey Works




Use Cases
Server
Desktop
Cloud / Containers
Integrations




Customer Stories
Puppet
Yelp
CME Group







Product




 Go Back
Product




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.


Pro Edition
Pro is a personal, named license that grants having licensed versions of Chocolatey on up to 8 machines and provides the ultimate Chocolatey experience!


Open Source
Chocolatey has the largest online registry of Windows packages. Learn how Open Source Chocolatey can support your next project.






Compare Editions
Learn the difference between the Chocolatey Editions and what will fit your needs the best.

Pricing
Try Chocolatey for Business Free

Purchase
I'm ready to get started now!

Support





Events
Find past and upcoming webinars, workshops, and conferences.








Solutions




 Go Back
Solutions




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.






Self-Service Anywhere

                                                Chocolatey provides a unique approach to managing your end-user software (desktops / laptops) and can be combined with your existing solutions.
                                                Chocolatey for Business (C4B) enables better security, enhanced visibility with centralized reporting, and a self-service GUI. Self-Service Anywhere allows non-administrators to easily access and manage IT approved software from the office, from home, or anywhere they have an internet connection.
                                            






Quick Deployment Environment (QDE)

                                                The Quick Deployment Environment (QDE) provides a single virtual machine appliance to be imported into your hypervisor-of-choice, which contains most of the various components of a Chocolatey organizational solution. Deploy recommended architecture in 2-3 hours.
                                            








Community




 Go Back
Community




Community Packages
Search the largest online registry of Windows packages. Chocolatey packages encapsulate everything required to manage a particular piece of software into one deployment artifact by wrapping installers, executables, zips, and scripts into a compiled package file.





Community Resources
Chocolatey on GitHub
Blog





Events
Find past and upcoming webinars, workshops, and conferences.








Learn




 Go Back
Learn




Install Chocolatey
Get step-by-step instructions on how to install Chocolatey.


Getting Started Course
New to Chocolatey? Learn the requirements and how to get Chocolatey up and running in no time!





Resource Library
Docs
Videos
Case Studies
Courses
Media Kit





Events
Find past and upcoming webinars, workshops, and conferences.


COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.


Support
Need help? Read our Support FAQ to find out the next steps.

Blog
Newsletter







Partners




 Go Back
Partners



Overview
Become a Partner




Technology Partners
Resellers







About




 Go Back
About




About Chocolatey
Chocolatey Software is focused on helping our community, customers, and partners with solutions that help fill the gaps that are often ignored. We offer a simple, pragmatic, and open approach to software management.





Careers
Contact







Install Now
Install Now












Videos





Featured Series





Success Stories





Case Studies





Docs





Blog










Documentation Table of Contents


















id:searchValue search by id only
tag:searchValue search by tags





Docs Home
Why Chocolatey?
Security

Features



Free


Create your own packages
Host packages internally
Integrates with everything
Package Shims
Custom Package Templates
Package Extensions




Paid


Self-Service / Background Mode (C4B)
Chocolatey Central Management (C4B)
Package Internalizer (C4B)
Package Builder (C4B)
Package Audit (C4B)
Branding Chocolatey Applications (C4B)
Runtime Malware Protection (Pro+)
Download CDN Cache (Pro+)
Package Reducer (Pro+)
Ubiquitous Install Directory Option (Pro+)
Package Throttle (Pro+)
Package Synchronizer (Pro+ Auto / C4B Sync Command)
Windows Service Management PowerShell Functions (C4B)





General


Release Notes
Licensed Release Notes
Troubleshooting
FAQs
Chocolatey.org Moderation
Chocolatey.org Packages Disclaimer
Software Vendor?


Usage


How to install
How to install licensed edition
Configuration / chocolatey.config
How to uninstall
Getting Started
Proxy Settings

Commands


Passing args to choco
Complete Reference
List / Search
Info
Install
Pin
Outdated
Upgrade
Uninstall
Config
Source / Sources
Feature
Download





Creating Packages


Create Packages
Quick Start

Commands


New
Pack
Apikey
Push




PowerShell References


Function and Variable Reference
Install-ChocolateyPackage
Install-ChocolateyZipPackage
Install-ChocolateyPowershellCommand
Install-ChocolateyVsixPackage
Get-ChocolateyWebFile
Install-ChocolateyInstallPackage



Automatic Packaging


How To's


Use Chocolatey w/Proxy Server
Change Download Cache Location aka Don't use TEMP for downloads
Install/Upgrade a Package w/out running install scripts
Request Package Fixes/Updates
Manually Recompile Packages, Embedding/Internalizing Remote Resources
Request Package
Maintain Packages for My Software
Become a Maintainer
Take Over Package Maintenance Exclusively
Parse Package Parameters
Mount Iso
Create Custom Package Templates
Extend Chocolatey With PowerShell Modules (extensions)
Deprecate a Package
Install licensed edition
Host Your Own Package Repository Server
Set up the Chocolatey.Server
Set up Chocolatey for internal/organizational use
Automate Package Internalizer (MSP/C4B)
C4B Quick Start Guide


Chocolatey GUI


Chocolatey GUI Overview
Chocolatey GUI Branding
Chocolatey GUI Known Issues


Quick Deployment Environment (QDE)


QDE Overview
QDE Setup
QDE Desktop ReadMe Files
QDE SSL/TLS Setup
QDE Firewall Changes
QDE Client Setup
QDE Internet Setup

QDE v1


QDE Setup v1
QDE Desktop ReadMe Files v1
QDE SSL/TLS Setup v1
QDE Firewall Changes v1
QDE Client Setup v1





Chocolatey Central Management (CCM)


Central Management Overview
Central Management Setup
Central Management Client Setup
Central Management Upgrade
Central Management Deployments


Use Cases


Development Environment
Host on MyGet


Learning Resources


Resources
Videos
Presentations


Additional Information


Legal
History









Outdated Command (choco outdated)
Returns a list of outdated packages.
NOTE: Available with 0.9.9.6+.


Usage
Examples
Exit Codes
See It In Action
Options and Switches


Usage
choco outdated [<options/switches>]

Examples
choco outdated
choco outdated -s https://somewhere/out/there
choco outdated -s ""'https://somewhere/protected'"" -u user -p pass

If you use --source=https://somewhere/out/there, it is
going to look for outdated packages only based on that source, so
you may want to add --ignore-unfound to your options.
NOTE: See scripting in how to pass arguments (choco -?) for how to
write proper scripts and integrations.
Exit Codes
Exit codes that normally result from running this command.
Normal:

0: operation was successful, no issues detected
-1 or 1: an error has occurred

Enhanced:

0: no outdated packages
-1 or 1: an error has occurred
2: outdated packages have been found

NOTE: Starting in v0.10.12, if you have the feature 'useEnhancedExitCodes'
turned on, then choco will provide enhanced exit codes that allow
better integration and scripting.
If you find other exit codes that we have not yet documented, please
file a ticket so we can document it at
https://github.com/chocolatey/choco/issues/new/choose.
See It In Action

Options and Switches
NOTE: Options and switches apply to all items passed, so if you are
running a command like install that allows installing multiple
packages, and you use --version=1.0.0, it is going to look for and
try to install version 1.0.0 of every package passed. So please split
out multiple package calls when wanting to pass specific options.
Includes default options/switches (included below for completeness).

 -?, --help, -h
     Prints out the help menu.

 -d, --debug
     Debug - Show debug messaging.

 -v, --verbose
     Verbose - Show verbose messaging. Very verbose messaging, avoid using
       under normal circumstances.

     --trace
     Trace - Show trace messaging. Very, very verbose trace messaging. Avoid
       except when needing super low-level .NET Framework debugging. Available
       in 0.10.4+.

     --nocolor, --no-color
     No Color - Do not show colorization in logging output. This overrides
       the feature 'logWithoutColor', set to 'False'. Available in 0.10.9+.

     --acceptlicense, --accept-license
     AcceptLicense - Accept license dialogs automatically. Reserved for
       future use.

 -y, --yes, --confirm
     Confirm all prompts - Chooses affirmative answer instead of prompting.
       Implies --accept-license

 -f, --force
     Force - force the behavior. Do not use force during normal operation -
       it subverts some of the smart behavior for commands.

     --noop, --whatif, --what-if
     NoOp / WhatIf - Don't actually do anything.

 -r, --limitoutput, --limit-output
     LimitOutput - Limit the output to essential information

     --timeout, --execution-timeout=VALUE
     CommandExecutionTimeout (in seconds) - The time to allow a command to
       finish before timing out. Overrides the default execution timeout in the
       configuration of 2700 seconds. '0' for infinite starting in 0.10.4.

 -c, --cache, --cachelocation, --cache-location=VALUE
     CacheLocation - Location for download cache, defaults to %TEMP% or value
       in chocolatey.config file.

     --allowunofficial, --allow-unofficial, --allowunofficialbuild, --allow-unofficial-build
     AllowUnofficialBuild - When not using the official build you must set
       this flag for choco to continue.

     --failstderr, --failonstderr, --fail-on-stderr, --fail-on-standard-error, --fail-on-error-output
     FailOnStandardError - Fail on standard error output (stderr), typically
       received when running external commands during install providers. This
       overrides the feature failOnStandardError.

     --use-system-powershell
     UseSystemPowerShell - Execute PowerShell using an external process
       instead of the built-in PowerShell host. Should only be used when
       internal host is failing. Available in 0.9.10+.

     --no-progress
     Do Not Show Progress - Do not show download progress percentages.
       Available in 0.10.4+.

     --proxy=VALUE
     Proxy Location - Explicit proxy location. Overrides the default proxy
       location of ''. Available for config settings in 0.9.9.9+, this CLI
       option available in 0.10.4+.

     --proxy-user=VALUE
     Proxy User Name - Explicit proxy user (optional). Requires explicity
       proxy (`--proxy` or config setting). Overrides the default proxy user of
       '123'. Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-password=VALUE
     Proxy Password - Explicit proxy password (optional) to be used with
       username. Requires explicity proxy (`--proxy` or config setting) and
       user name.  Overrides the default proxy password (encrypted in settings
       if set). Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-bypass-list=VALUE
     ProxyBypassList - Comma separated list of regex locations to bypass on
       proxy. Requires explicity proxy (`--proxy` or config setting). Overrides
       the default proxy bypass list of ''. Available in 0.10.4+.

     --proxy-bypass-on-local
     Proxy Bypass On Local - Bypass proxy for local connections. Requires
       explicity proxy (`--proxy` or config setting). Overrides the default
       proxy bypass on local setting of 'True'. Available in 0.10.4+.

     --log-file=VALUE
     Log File to output to in addition to regular loggers. Available in 0.1-
       0.8+.

 -s, --source=VALUE
     Source - The source to find the package(s) to install. Special sources
       include: ruby, webpi, cygwin, windowsfeatures, and python. To specify
       more than one source, pass it with a semi-colon separating the values (-
       e.g. ""'source1;source2'""). Defaults to default feeds.

 -u, --user=VALUE
     User - used with authenticated feeds. Defaults to empty.

 -p, --password=VALUE
     Password - the user's password to the source. Defaults to empty.

     --cert=VALUE
     Client certificate - PFX pathname for an x509 authenticated feeds.
       Defaults to empty. Available in 0.9.10+.

     --cp, --certpassword=VALUE
     Certificate Password - the client certificate's password to the source.
       Defaults to empty. Available in 0.9.10+.

     --ignore-pinned
     Ignore Pinned - Ignore pinned packages. Defaults to false. Available in
       0.10.6+.

     --ignore-unfound
     Ignore Unfound Packages - Ignore packages that are not found on the
       sources used (or the defaults). Overrides the default feature
       'ignoreUnfoundPackagesOnUpgradeOutdated' set to 'False'. Available in -
       0.10.9+.


Command Reference
NOTE: This documentation has been automatically generated from choco outdated -h.












Overview

About
Getting Started Guide
Why Chocolatey
How Chocolatey Works
Security
Privacy Policy
Kickstarter
Partner
Customer Stories




Product

Solution: Self-Service Anywhere
Solution: Quick Deployment Environment (QDE)
Chocolatey for Business
Pro Edition
Open Source
C4B Trial
Pricing
Support
Community Packages
Events




Learn

Resource Library
Events
COVID-19 Resources
Docs
Videos
Case Studies
Courses
Blog 
Media Kit
Sitemap




Connect

Contact Us
Support
Newsletter
Shop
Report a Bug
Status
Careers



Follow Chocolatey Software on Twitter



Follow Chocolatey Software on Facebook



Find Chocolatey Software on GitHub



Subscribe to Chocolatey Software on YouTube









© 2020 Chocolatey Software, Inc.
Deployed from 16d5ee0bdb. You are on web.3. Page generated 25 Sep 2020 08:27:36 +00:00.





Chocolatey.org uses cookies to enhance the user experience of the site.

        I accept
    

        I accept
    









",,"# choco outdated

> Check for outdated packages with Chocolatey.
> More information: <https://chocolatey.org/docs/commands-outdated>.

- Display a list of outdated packages in table format:

`choco outdated`

- Ignore pinned packages in the output:

`choco outdated --ignore-pinned`

- Specify a custom source to check packages from:

`choco outdated --source {{source_url|alias}}`

- Provide a username and password for authentication:

`choco outdated --user {{username}} --password {{password}}`
"
dir,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/dir,"





































dir | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















dir


10/16/2017

7 minutes to read








+5





In this article


Displays a list of a directory's files and subdirectories. If used without parameters, this command displays the disk's volume label and serial number, followed by a list of directories and files on the disk (including their names and the date and time each was last modified). For files, this command displays the name extension and the size in bytes. This command also displays the total number of files and directories listed, their cumulative size, and the free space (in bytes) remaining on the disk.
The dir command can also run from the Windows Recovery Console, using different parameters. For more information, see Windows Recovery Environment (WinRE).
Syntax
dir [<drive>:][<path>][<filename>] [...] [/p] [/q] [/w] [/d] [/a[[:]<attributes>]][/o[[:]<sortorder>]] [/t[[:]<timefield>]] [/s] [/b] [/l] [/n] [/x] [/c] [/4] [/r]

Parameters



Parameter
Description




[<drive>:][<path>]
Specifies the drive and directory for which you want to see a listing.


[<filename>]
Specifies a particular file or group of files for which you want to see a listing.


/p
Displays one screen of the listing at a time. To see the next screen, press any key.


/q
Displays file ownership information.


/w
Displays the listing in wide format, with as many as five file names or directory names on each line.


/d
Displays the listing in the same format as /w, but the files are sorted by column.


/a[[:]<attributes>]
Displays only the names of those directories and files with your specified attributes. If you don't use this parameter, the command displays the names of all files except hidden and system files. If you use this parameter without specifying any attributes, the command displays the names of all files, including hidden and system files. The list of possible attributes values are:d - Directoriesh - Hidden filess - System filesl - Reparse pointsr - Read-only filesa - Files ready for archivingi - Not content indexed filesYou can use any combination of these values, but don't separate your values using spaces. Optionally you can use a colon (:) separator, or you can use a hyphen (-) as a prefix to mean, ""not"". For example, using the -s attribute won't show the system files.


/o[[:]<sortorder>]
Sorts the output according to sortorder, which can be any combination of the following values:n - Alphabetically by namee - Alphabetically by extensiong - Group directories firsts - By size, smallest firstd - By date/time, oldest firstUse the - prefix to reverse the sort orderMultiple values are processed in the order in which you list them. Don't separate multiple values with spaces, but you can optionally use a colon (:).If sortorder isn't specified, dir /o lists the directories alphabetically, followed by the files, which are also sorted alphabetically.


/t[[:]<timefield>]
Specifies which time field to display or to use for sorting. The available timefield values are:c - Creationa - Last accessedw - Last written


/s
Lists every occurrence of the specified file name within the specified directory and all subdirectories.


/b
Displays a bare list of directories and files, with no additional information. The /b parameter overrides /w.


/l
Displays unsorted directory names and file names, using lowercase.


/n
Displays a long list format with file names on the far right of the screen.


/x
Displays the short names generated for non-8dot3 file names. The display is the same as the display for /n, but the short name is inserted before the long name.


/c
Displays the thousand separator in file sizes. This is the default behavior. Use /c to hide separators.


/4
Displays years in four-digit format.


/r
Display alternate data streams of the file.


/?
Displays help at the command prompt.



Remarks

To use multiple filename parameters, separate each file name with a space, comma, or semicolon.

You can use wildcard characters (* or ?), to represent one or more characters of a file name and to display a subset of files or subdirectories.

You can use the wildcard character, *, to substitute for any string of characters, for example:

dir *.txt lists all files in the current directory with extensions that begin with .txt, such as .txt, .txt1, .txt_old.

dir read *.txt lists all files in the current directory that begin with read and with extensions that begin with .txt, such as .txt, .txt1, or .txt_old.

dir read *.* lists all files in the current directory that begin with read with any extension.


The asterisk wildcard always uses short file name mapping, so you might get unexpected results. For example, the following directory contains two files (t.txt2 and t97.txt):
C:\test>dir /x
Volume in drive C has no label.
Volume Serial Number is B86A-EF32

Directory of C:\test

11/30/2004  01:40 PM <DIR>  .
11/30/2004  01:40 PM <DIR> ..
11/30/2004  11:05 AM 0 T97B4~1.TXT t.txt2
11/30/2004  01:16 PM 0 t97.txt

You might expect that typing dir t97\* would return the file t97.txt. However, typing dir t97\* returns both files, because the asterisk wildcard matches the file t.txt2 to t97.txt by using its short name map T97B4~1.TXT. Similarly, typing del t97\* would delete both files.

You can use the question mark (?) as a substitute for a single character in a name. For example, typing dir read???.txt lists any files in the current directory with the .txt extension that begin with read and are followed by up to three characters. This includes Read.txt, Read1.txt, Read12.txt, Read123.txt, and Readme1.txt, but not Readme12.txt.

If you use /a with more than one value in attributes, this command displays the names of only those files with all the specified attributes. For example, if you use /a with r and -h as attributes (by using either /a:r-h or /ar-h), this command will only display the names of the read-only files that aren't hidden.

If you specify more than one sortorder value, this command sorts the file names by the first criterion, then by the second criterion, and so on. For example, if you use /o with the e and -s parameters for sortorder (by using either /o:e-s or /oe-s), this command sorts the names of directories and files by extension, with the largest first, and then displays the final result. The alphabetic sorting by extension causes file names with no extensions to appear first, then directory names, and then file names with extensions.

If you use the redirection symbol (>) to send this command's output to a file, or if you use a pipe (|) to send this command's output to another command, you must use /a:-d and /b to only list the file names. You can use filename with /b and /s to specify that this command is to search the current directory and its subdirectories for all file names that match filename. This command lists only the drive letter, directory name, file name, and file name extension (one path per line), for each file name it finds. Before you use a pipe to send this command's output to another command, you should set the TEMP environment variable in your Autoexec.nt file.


Examples
To display all directories one after the other, in alphabetical order, in wide format, and pausing after each screen, make sure that the root directory is the current directory, and then type:
dir /s/w/o/p

The output lists the root directory, the subdirectories, and the files in the root directory, including extensions. This command also lists the subdirectory names and the file names in each subdirectory in the tree.
To alter the preceding example so that dir displays the file names and extensions, but omits the directory names, type:
dir /s/w/o/p/a:-d

To print a directory listing, type:
dir > prn

When you specify prn, the directory list is sent to the printer that is attached to the LPT1 port. If your printer is attached to a different port, you must replace prn with the name of the correct port.
You can also redirect output of the dir command to a file by replacing prn with a file name. You can also type a path. For example, to direct dir output to the file dir.doc in the Records directory, type:
dir > \records\dir.doc

If dir.doc does not exist, dir creates it, unless the Records directory does not exist. In that case, the following message appears:
File creation error

To display a list of all the file names with the .txt extension in all directories on drive C, type:
dir c:\*.txt /w/o/s/p

The dir command displays, in wide format, an alphabetized list of the matching file names in each directory, and it pauses each time the screen fills until you press any key to continue.
Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
DIR(5)			    BSD File Formats Manual			DIR(5)

NAME
     dir, dirent -- directory file format

SYNOPSIS
     #include <sys/types.h>
     #include <sys/dir.h>

DESCRIPTION
     Directories provide a convenient hierarchical method of grouping files
     while obscuring the underlying details of the storage medium.  A direc-
     tory file is differentiated from a plain file by a flag in its inode(5)
     entry.  It consists of records (directory entries) each of which contains
     information about a file and a pointer to the file itself.  Directory
     entries may contain other directories as well as plain files; such nested
     directories are refered to as subdirectories.  A hierarchy of directories
     and files is formed in this manner and is called a file system (or
     referred to as a file system tree).

     Each directory file contains two special directory entries; one is a
     pointer to the directory itself called dot `.' and the other a pointer to
     its parent directory called dot-dot `..'.	Dot and dot-dot are valid
     pathnames, however, the system root directory `/', has no parent and dot-
     dot points to itself like dot.

     File system nodes are ordinary directory files on which has been grafted
     a file system object, such as a physical disk or a partitioned area of
     such a disk.  (See mount(1) and mount(8).)

     The directory entry format is defined in the file <sys/dirent.h> and fur-
     ther in the file <dirent.h>.  When the macro _DARWIN_FEATURE_64_BIT_INODE
     is not defined (see stat(2) for more information on this macro), the
     dirent structure is defined as:

     /*** Excerpt from <sys/dirent.h> ***/
     /*
      * The dirent structure defines the format of directory entries.
      *
      * A directory entry has a struct dirent at the front of it, containing its
      * inode number, the length of the entry, and the length of the name
      * contained in the entry.  These are followed by the name padded to a 4
      * byte boundary with null bytes.	All names are guaranteed null terminated.
      * The maximum length of a name in a directory is 255.
      */

     struct dirent { /* when _DARWIN_FEATURE_64_BIT_INODE is NOT defined */
	     ino_t	d_ino;		      /* file number of entry */
	     __uint16_t d_reclen;	      /* length of this record */
	     __uint8_t	d_type; 	      /* file type, see below */
	     __uint8_t	d_namlen;	      /* length of string in d_name */
	     char    d_name[255 + 1];	/* name must be no longer than this */
     };

     However, when the macro _DARWIN_FEATURE_64_BIT_INODE is defined, the
     dirent structure is defined as:

     /*
      * The dirent structure defines the format of directory entries.
      *
      * A directory entry has a struct dirent at the front of it, containing its
      * inode number, the length of the entry, and the length of the name
      * contained in the entry.  These are followed by the name padded to a 4
      * byte boundary with null bytes.	All names are guaranteed null terminated.
      * The maximum length of a name in a directory is 1023.
      */

     struct dirent { /* when _DARWIN_FEATURE_64_BIT_INODE is defined */
	     ino_t	d_fileno;     /* file number of entry */
	     __uint64_t d_seekoff;    /* seek offset (optional, used by servers) */
	     __uint16_t d_reclen;     /* length of this record */
	     __uint16_t d_namlen;     /* length of string in d_name */
	     __uint8_t	d_type;       /* file type, see below */
	     char    d_name[1024];    /* name must be no longer than this */
     };

     In addition:

     /*
      * File types
      */
     #define DT_UNKNOWN       0
     #define DT_FIFO	      1
     #define DT_CHR	      2
     #define DT_DIR	      4
     #define DT_BLK	      6
     #define DT_REG	      8
     #define DT_LNK	     10
     #define DT_SOCK	     12
     #define DT_WHT	     14

     -----------------------------------------

     /*** Excerpt from <dirent.h> ***/

     #define d_fileno	     d_ino	  /* backward compatibility */

     /* definitions for library routines operating on directories. */
     #define DIRBLKSIZ	     1024

     struct _telldir;		     /* see telldir.h */

     /* structure describing an open directory. */
     typedef struct _dirdesc {
	     int     __dd_fd;	   /* file descriptor associated with directory */
	     long    __dd_loc;	   /* offset in current buffer */
	     long    __dd_size;    /* amount of data returned by getdirentries */
	     char    *__dd_buf;    /* data buffer */
	     int     __dd_len;	   /* size of data buffer */
	     long    __dd_seek;    /* magic cookie returned by getdirentries */
	     long    __dd_rewind;  /* magic cookie for rewinding */
	     int     __dd_flags;   /* flags for readdir */
	     pthread_mutex_t __dd_lock; /* for thread locking */
	     struct _telldir *__dd_td; /* telldir position recording */
     } DIR;

     #define dirfd(dirp)     ((dirp)->dd_fd)

     /* flags for opendir2 */
     #define DTF_HIDEW	     0x0001  /* hide whiteout entries */
     #define DTF_NODUP	     0x0002  /* don't return duplicate names */
     #define DTF_REWIND      0x0004  /* rewind after reading union stack */
     #define __DTF_READALL   0x0008  /* everything has been read */

SEE ALSO
     fs(5), inode(5)

HISTORY
     A dir file format appeared in Version 7 AT&T UNIX.

4.2 Berkeley Distribution	April 19, 1994	     4.2 Berkeley Distribution
","# dir

> List directory contents.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/dir>.

- Show the contents of the current directory:

`dir`

- Show the contents of a given directory:

`dir {{path/to/directory}}`

- Show the contents of the current directory, including hidden ones:

`dir /A`

- Show the contents of a given directory, including hidden ones:

`dir {{path/to/directory}} /A`
"
units,,,"
UNITS(1)		  BSD General Commands Manual		      UNITS(1)

NAME
     units -- conversion program

SYNOPSIS
     units [-f filename] [-qv] [from-unit to-unit]

OPTIONS
     The following options are available:

     -f filename
	     Specify the name of the units data file to load.

     -q      Suppress prompting of the user for units and the display of sta-
	     tistics about the number of units loaded.

     -v      Print the version number.

     from-unit to-unit
	     Allow a single unit conversion to be done directly from the com-
	     mand line.  The program will not print prompts.  It will print
	     out the result of the single specified conversion.

DESCRIPTION
     The units program converts quantities expressed in various scales to
     their equivalents in other scales.  The units program can only handle
     multiplicative scale changes.  It cannot convert Celsius to Fahrenheit,
     for example.  It works interactively by prompting the user for input:

	 You have: meters
	 You want: feet
		 * 3.2808399
		 / 0.3048

	 You have: cm^3
	 You want: gallons
		 * 0.00026417205
		 / 3785.4118

	 You have: meters/s
	 You want: furlongs/fortnight
		 * 6012.8848
		 / 0.00016630952

	 You have: 1|2 inch
	 You want: cm
		 * 1.27
		 / 0.78740157

     Powers of units can be specified using the '^' character as shown in the
     example, or by simple concatenation: 'cm3' is equivalent to 'cm^3'.  Mul-
     tiplication of units can be specified by using spaces, a dash or an
     asterisk.	Division of units is indicated by the slash ('/').  Note that
     multiplication has a higher precedence than division, so 'm/s/s' is the
     same as 'm/s^2' or 'm/s s'.  Division of numbers must be indicated using
     the vertical bar ('|').  To convert half a meter, you would write '1|2
     meter'.  If you write '1/2 meter' then the units program would interpret
     that as equivalent to '0.5/meter'.  If you enter incompatible unit types,
     the units program will print a message indicating that the units are not
     conformable and it will display the reduced form for each unit:

	 You have: ergs/hour
	 You want: fathoms kg^2 / day
	 conformability error
		 2.7777778e-11 kg m^2 / sec^3
		 2.1166667e-05 kg^2 m / sec

     The conversion information is read from a units data file.  The default
     file includes definitions for most familiar units, abbreviations and met-
     ric prefixes.  Some constants of nature included are:

	   pi	      ratio of circumference to diameter
	   c	      speed of light
	   e	      charge on an electron
	   g	      acceleration of gravity
	   force      same as g
	   mole       Avogadro's number
	   water      pressure per unit height of water
	   mercury    pressure per unit height of mercury
	   au	      astronomical unit

     The unit 'pound' is a unit of mass.  Compound names are run together so
     'pound force' is a unit of force.	The unit 'ounce' is also a unit of
     mass.  The fluid ounce is 'floz'.	British units that differ from their
     US counterparts are prefixed with 'br', and currency is prefixed with its
     country name: 'belgiumfranc', 'britainpound'.  When searching for a unit,
     if the specified string does not appear exactly as a unit name, then
     units will try to remove a trailing 's' or a trailing 'es' and check
     again for a match.

     To find out what units are available read the standard units file.  If
     you want to add your own units you can supply your own file.  A unit is
     specified on a single line by giving its name and an equivalence.	Be
     careful to define new units in terms of old ones so that a reduction
     leads to the primitive units which are marked with '!' characters.  The
     units program will not detect infinite loops that could be caused by
     careless unit definitions.  Comments in the unit definition file begin
     with a '/' character at the beginning of a line.

     Prefixes are defined in the same was as standard units, but with a trail-
     ing dash at the end of the prefix name.  If a unit is not found even
     after removing trailing 's' or 'es', then it will be checked against the
     list of prefixes.	Prefixes will be removed until a legal base unit is
     identified.

     Here is an example of a short units file that defines some basic units.

	   m	     !a!
	   sec	     !b!
	   micro-    1e-6
	   minute    60 sec
	   hour      60 min
	   inch      0.0254 m
	   ft	     12 inches
	   mile      5280 ft

FILES
     /usr/share/misc/units.lib	the standard units library

AUTHORS
     Adrian Mariano <adrian@cam.cornell.edu>

BUGS
     The effect of including a '/' in a prefix is surprising.

     Exponents entered by the user can be only one digit.  You can work around
     this by multiplying several terms.

     The user must use | to indicate division of numbers and / to indicate
     division of symbols.  This distinction should not be necessary.

     The program contains various arbitrary limits on the length of the units
     converted and on the length of the data file.

     The program should use a hash table to store units so that it does not
     take so long to load the units list and check for duplication.

BSD				 July 14, 1993				   BSD
","# units

> Provide the conversion between two units of measure.

- Run in interactive mode:

`units`

- Show the conversion between two simple units:

`units {{quarts}} {{tablespoons}}`

- Convert between units with quantities:

`units {{15 pounds}} {{kilograms}}`

- Show the conversion between two compound units:

`units {{""meters / second""}} {{""inches / hour""}}`

- Show the conversion between units with different dimensions:

`units {{""acres""}} {{""ft^2""}}`
"
choco-pin,https://chocolatey.org/docs/commands-pin,"




Chocolatey Software | Commands Pin






































Here's how we're responding to COVID-19 plus resources to help

×













Resources
Watch videos, read documentation, and hear Chocolatey success stories from companies you trust.
View Resources






Events
Find past and upcoming webinars, workshops, and conferences. New events have recently been added!
View Events






Courses
Step-by-step guides for all things Chocolatey! Earn badges as you learn through interactive digital courses.
View Courses











Tuesday, 22 September 20203 PM BST/GMT+1 / 4 PM CEST / 9 AM Central / 10 AM Eastern

            Standardising tool sets across different Teams is not always easy... especially when different Teams have traditionally used different approaches and methodologies.
            In this webinar we will unpack the advantages of a more standard, consistent approach with Puppet & Chocolatey.
        
Register Now






Webinar Replay fromTuesday, 23 June 2020
Chocolatey Central Management now includes the premiere feature of managing endpoints through a Chocolatey-centered solution aka Deployments. We are excited to share what Deployments is all about!
Learn More
Watch Now



COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.
Find Resources






Chocolatey for Business Feature Video Series

            In this video series, come take a tour of the many features available in our Chocolatey for Business offering.
            Many organizations choose Chocolatey for Business when they want to scale out their solution across thousands of nodes, deploy rapidly and reliably every time,
            mitigate risks with a greatly-simplified patching workflow, and access a Support Team that will guide you on your automation journey.
        
Watch the Series

































id:searchValue search by id only
tag:searchValue search by tags













Overview




 Go Back
Overview




Why Chocolatey?
Chocolatey is a software management solution unlike anything else you've ever experienced on Windows. Chocolatey brings the concepts of true package management to allow you to version things, manage dependencies and installation order, better inventory management, and other features.

How Chocolatey Works




Use Cases
Server
Desktop
Cloud / Containers
Integrations




Customer Stories
Puppet
Yelp
CME Group







Product




 Go Back
Product




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.


Pro Edition
Pro is a personal, named license that grants having licensed versions of Chocolatey on up to 8 machines and provides the ultimate Chocolatey experience!


Open Source
Chocolatey has the largest online registry of Windows packages. Learn how Open Source Chocolatey can support your next project.






Compare Editions
Learn the difference between the Chocolatey Editions and what will fit your needs the best.

Pricing
Try Chocolatey for Business Free

Purchase
I'm ready to get started now!

Support





Events
Find past and upcoming webinars, workshops, and conferences.








Solutions




 Go Back
Solutions




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.






Self-Service Anywhere

                                                Chocolatey provides a unique approach to managing your end-user software (desktops / laptops) and can be combined with your existing solutions.
                                                Chocolatey for Business (C4B) enables better security, enhanced visibility with centralized reporting, and a self-service GUI. Self-Service Anywhere allows non-administrators to easily access and manage IT approved software from the office, from home, or anywhere they have an internet connection.
                                            






Quick Deployment Environment (QDE)

                                                The Quick Deployment Environment (QDE) provides a single virtual machine appliance to be imported into your hypervisor-of-choice, which contains most of the various components of a Chocolatey organizational solution. Deploy recommended architecture in 2-3 hours.
                                            








Community




 Go Back
Community




Community Packages
Search the largest online registry of Windows packages. Chocolatey packages encapsulate everything required to manage a particular piece of software into one deployment artifact by wrapping installers, executables, zips, and scripts into a compiled package file.





Community Resources
Chocolatey on GitHub
Blog





Events
Find past and upcoming webinars, workshops, and conferences.








Learn




 Go Back
Learn




Install Chocolatey
Get step-by-step instructions on how to install Chocolatey.


Getting Started Course
New to Chocolatey? Learn the requirements and how to get Chocolatey up and running in no time!





Resource Library
Docs
Videos
Case Studies
Courses
Media Kit





Events
Find past and upcoming webinars, workshops, and conferences.


COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.


Support
Need help? Read our Support FAQ to find out the next steps.

Blog
Newsletter







Partners




 Go Back
Partners



Overview
Become a Partner




Technology Partners
Resellers







About




 Go Back
About




About Chocolatey
Chocolatey Software is focused on helping our community, customers, and partners with solutions that help fill the gaps that are often ignored. We offer a simple, pragmatic, and open approach to software management.





Careers
Contact







Install Now
Install Now












Videos





Featured Series





Success Stories





Case Studies





Docs





Blog










Documentation Table of Contents


















id:searchValue search by id only
tag:searchValue search by tags





Docs Home
Why Chocolatey?
Security

Features



Free


Create your own packages
Host packages internally
Integrates with everything
Package Shims
Custom Package Templates
Package Extensions




Paid


Self-Service / Background Mode (C4B)
Chocolatey Central Management (C4B)
Package Internalizer (C4B)
Package Builder (C4B)
Package Audit (C4B)
Branding Chocolatey Applications (C4B)
Runtime Malware Protection (Pro+)
Download CDN Cache (Pro+)
Package Reducer (Pro+)
Ubiquitous Install Directory Option (Pro+)
Package Throttle (Pro+)
Package Synchronizer (Pro+ Auto / C4B Sync Command)
Windows Service Management PowerShell Functions (C4B)





General


Release Notes
Licensed Release Notes
Troubleshooting
FAQs
Chocolatey.org Moderation
Chocolatey.org Packages Disclaimer
Software Vendor?


Usage


How to install
How to install licensed edition
Configuration / chocolatey.config
How to uninstall
Getting Started
Proxy Settings

Commands


Passing args to choco
Complete Reference
List / Search
Info
Install
Pin
Outdated
Upgrade
Uninstall
Config
Source / Sources
Feature
Download





Creating Packages


Create Packages
Quick Start

Commands


New
Pack
Apikey
Push




PowerShell References


Function and Variable Reference
Install-ChocolateyPackage
Install-ChocolateyZipPackage
Install-ChocolateyPowershellCommand
Install-ChocolateyVsixPackage
Get-ChocolateyWebFile
Install-ChocolateyInstallPackage



Automatic Packaging


How To's


Use Chocolatey w/Proxy Server
Change Download Cache Location aka Don't use TEMP for downloads
Install/Upgrade a Package w/out running install scripts
Request Package Fixes/Updates
Manually Recompile Packages, Embedding/Internalizing Remote Resources
Request Package
Maintain Packages for My Software
Become a Maintainer
Take Over Package Maintenance Exclusively
Parse Package Parameters
Mount Iso
Create Custom Package Templates
Extend Chocolatey With PowerShell Modules (extensions)
Deprecate a Package
Install licensed edition
Host Your Own Package Repository Server
Set up the Chocolatey.Server
Set up Chocolatey for internal/organizational use
Automate Package Internalizer (MSP/C4B)
C4B Quick Start Guide


Chocolatey GUI


Chocolatey GUI Overview
Chocolatey GUI Branding
Chocolatey GUI Known Issues


Quick Deployment Environment (QDE)


QDE Overview
QDE Setup
QDE Desktop ReadMe Files
QDE SSL/TLS Setup
QDE Firewall Changes
QDE Client Setup
QDE Internet Setup

QDE v1


QDE Setup v1
QDE Desktop ReadMe Files v1
QDE SSL/TLS Setup v1
QDE Firewall Changes v1
QDE Client Setup v1





Chocolatey Central Management (CCM)


Central Management Overview
Central Management Setup
Central Management Client Setup
Central Management Upgrade
Central Management Deployments


Use Cases


Development Environment
Host on MyGet


Learning Resources


Resources
Videos
Presentations


Additional Information


Legal
History









Pin Command (choco pin)
Pin a package to suppress upgrades.
This is especially helpful when running choco upgrade for all
packages, as it will automatically skip those packages. Another
alternative is choco upgrade --except=""pkg1,pk2"".


Usage
Examples
Exit Codes
Options and Switches


Usage
choco pin [list]|add|remove [<options/switches>]

Examples
choco pin
choco pin list
choco pin add -n=git
choco pin add -n=git --version 1.2.3
choco pin remove --name git

NOTE: See scripting in how to pass arguments (choco -?) for how to
write proper scripts and integrations.
Exit Codes
Exit codes that normally result from running this command.
Normal:

0: operation was successful, no issues detected
-1 or 1: an error has occurred

If you find other exit codes that we have not yet documented, please
file a ticket so we can document it at
https://github.com/chocolatey/choco/issues/new/choose.
Options and Switches
NOTE: Options and switches apply to all items passed, so if you are
running a command like install that allows installing multiple
packages, and you use --version=1.0.0, it is going to look for and
try to install version 1.0.0 of every package passed. So please split
out multiple package calls when wanting to pass specific options.
Includes default options/switches (included below for completeness).

 -?, --help, -h
     Prints out the help menu.

 -d, --debug
     Debug - Show debug messaging.

 -v, --verbose
     Verbose - Show verbose messaging. Very verbose messaging, avoid using
       under normal circumstances.

     --trace
     Trace - Show trace messaging. Very, very verbose trace messaging. Avoid
       except when needing super low-level .NET Framework debugging. Available
       in 0.10.4+.

     --nocolor, --no-color
     No Color - Do not show colorization in logging output. This overrides
       the feature 'logWithoutColor', set to 'False'. Available in 0.10.9+.

     --acceptlicense, --accept-license
     AcceptLicense - Accept license dialogs automatically. Reserved for
       future use.

 -y, --yes, --confirm
     Confirm all prompts - Chooses affirmative answer instead of prompting.
       Implies --accept-license

 -f, --force
     Force - force the behavior. Do not use force during normal operation -
       it subverts some of the smart behavior for commands.

     --noop, --whatif, --what-if
     NoOp / WhatIf - Don't actually do anything.

 -r, --limitoutput, --limit-output
     LimitOutput - Limit the output to essential information

     --timeout, --execution-timeout=VALUE
     CommandExecutionTimeout (in seconds) - The time to allow a command to
       finish before timing out. Overrides the default execution timeout in the
       configuration of 2700 seconds. '0' for infinite starting in 0.10.4.

 -c, --cache, --cachelocation, --cache-location=VALUE
     CacheLocation - Location for download cache, defaults to %TEMP% or value
       in chocolatey.config file.

     --allowunofficial, --allow-unofficial, --allowunofficialbuild, --allow-unofficial-build
     AllowUnofficialBuild - When not using the official build you must set
       this flag for choco to continue.

     --failstderr, --failonstderr, --fail-on-stderr, --fail-on-standard-error, --fail-on-error-output
     FailOnStandardError - Fail on standard error output (stderr), typically
       received when running external commands during install providers. This
       overrides the feature failOnStandardError.

     --use-system-powershell
     UseSystemPowerShell - Execute PowerShell using an external process
       instead of the built-in PowerShell host. Should only be used when
       internal host is failing. Available in 0.9.10+.

     --no-progress
     Do Not Show Progress - Do not show download progress percentages.
       Available in 0.10.4+.

     --proxy=VALUE
     Proxy Location - Explicit proxy location. Overrides the default proxy
       location of ''. Available for config settings in 0.9.9.9+, this CLI
       option available in 0.10.4+.

     --proxy-user=VALUE
     Proxy User Name - Explicit proxy user (optional). Requires explicity
       proxy (`--proxy` or config setting). Overrides the default proxy user of
       '123'. Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-password=VALUE
     Proxy Password - Explicit proxy password (optional) to be used with
       username. Requires explicity proxy (`--proxy` or config setting) and
       user name.  Overrides the default proxy password (encrypted in settings
       if set). Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-bypass-list=VALUE
     ProxyBypassList - Comma separated list of regex locations to bypass on
       proxy. Requires explicity proxy (`--proxy` or config setting). Overrides
       the default proxy bypass list of ''. Available in 0.10.4+.

     --proxy-bypass-on-local
     Proxy Bypass On Local - Bypass proxy for local connections. Requires
       explicity proxy (`--proxy` or config setting). Overrides the default
       proxy bypass on local setting of 'True'. Available in 0.10.4+.

     --log-file=VALUE
     Log File to output to in addition to regular loggers. Available in 0.1-
       0.8+.

 -n, --name=VALUE
     Name - the name of the package. Required with some actions. Defaults to
       empty.

     --version=VALUE
     Version - Used when multiple versions of a package are installed.
       Defaults to empty.

     --reason, --pin-reason, --note=VALUE
     Pin Reason - Text information about why you are setting a pin. Available
       in business editions 1.12.2+.


Command Reference
NOTE: This documentation has been automatically generated from choco pin -h.












Overview

About
Getting Started Guide
Why Chocolatey
How Chocolatey Works
Security
Privacy Policy
Kickstarter
Partner
Customer Stories




Product

Solution: Self-Service Anywhere
Solution: Quick Deployment Environment (QDE)
Chocolatey for Business
Pro Edition
Open Source
C4B Trial
Pricing
Support
Community Packages
Events




Learn

Resource Library
Events
COVID-19 Resources
Docs
Videos
Case Studies
Courses
Blog 
Media Kit
Sitemap




Connect

Contact Us
Support
Newsletter
Shop
Report a Bug
Status
Careers



Follow Chocolatey Software on Twitter



Follow Chocolatey Software on Facebook



Find Chocolatey Software on GitHub



Subscribe to Chocolatey Software on YouTube









© 2020 Chocolatey Software, Inc.
Deployed from 16d5ee0bdb. You are on web.3. Page generated 25 Sep 2020 08:27:36 +00:00.





Chocolatey.org uses cookies to enhance the user experience of the site.

        I accept
    

        I accept
    









",,"# choco pin

> Pin a package at a specific version with Chocolatey.
> Pinned packages are skipped automatically when upgrading.
> More information: <https://chocolatey.org/docs/commands-pin>.

- Display a list of pinned packages and their versions:

`choco pin list`

- Pin a package at its current version:

`choco pin add --name {{package}}`

- Pin a package at a specific version:

`choco pin add --name {{package}} --version {{version}}`

- Remove a pin for a specific package:

`choco pin remove --name {{package}}`
"
reg-copy,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-copy,"





































reg copy | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















reg copy


10/16/2017

2 minutes to read













In this article


Copies a registry entry to a specified location on the local or remote computer.
Syntax
reg copy <keyname1> <keyname2> [/s] [/f]

Parameters



Parameter
Description




<keyname1>
Specifies the full path of the subkey or entry to be added. To specify a remote computer, include the computer name (in the format \\<computername>\) as part of the keyname. Omitting \\<computername>\ causes the operation to default to the local computer. The keyname must include a valid root key. Valid root keys for the local computer are: HKLM, HKCU, HKCR, HKU, and HKCC. If a remote computer is specified, valid root keys are: HKLM and HKU. If the registry key name contains a space, enclose the key name in quotes.


<keyname2>
Specifies the full path of the second subkey to be compared. To specify a remote computer, include the computer name (in the format \\<computername>\) as part of the keyname. Omitting \\<computername>\ causes the operation to default to the local computer. The keyname must include a valid root key. Valid root keys for the local computer are: HKLM, HKCU, HKCR, HKU, and HKCC. If a remote computer is specified, valid root keys are: HKLM and HKU. If the registry key name contains a space, enclose the key name in quotes.


/s
Copies all subkeys and entries under the specified subkey.


/f
Copies the subkey without prompting for confirmation.


/?
Displays help at the command prompt.



Remarks

This command doesn't ask for confirmation when copying a subkey.

The return values for the reg compare operation are:



Value
Description




0
Success


1
Failure





Examples
To copy all subkeys and values under the key MyApp to the key SaveMyApp, type:
reg copy HKLM\Software\MyCo\MyApp HKLM\Software\MyCo\SaveMyApp /s

To copy all values under the key MyCo on the computer named ZODIAC to the key MyCo1 on the current computer, type:
reg copy \\ZODIAC\HKLM\Software\MyCo HKLM\Software\MyCo1

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# reg copy

> Copy keys and their values in the registry.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-copy>.

- Copy a registry key to a new registry location:

`reg copy {{old_key_name}} {{new_key_name}}`

- Copy a registry key recursively to a new registry location:

`reg copy {{old_key_name}} {{new_key_name}} /s`

- Forcefully copy a registry key without a prompt:

`reg copy {{old_key_name}} {{new_key_name}} /f`
"
color,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/color,"





































color | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















color


10/16/2017

2 minutes to read








+1





In this article


Changes the foreground and background colors in the Command Prompt window for the current session. If used without parameters, color restores the default Command Prompt window foreground and background colors.
Syntax
color [[<b>]<f>]

Parameters



Parameter
Description




<b>
Specifies the background color.


<f>
Specifies the foreground color.


/?
Displays help at the command prompt.



Where:
The following table lists valid hexadecimal digits that you can use as the values for <b> and <f>:



Value
Color




0
Black


1
Blue


2
Green


3
Aqua


4
Red


5
Purple


6
Yellow


7
White


8
Gray


9
Light blue


a
Light green


b
Light aqua


c
Light red


d
Light purple


e
Light yellow


f
Bright white



Remarks

Don't use space characters between <b> and <f>.

If you specify only one hexadecimal digit, the corresponding color is used as the foreground color and the background color is set to the default color.

To set the default Command Prompt window color, select the upper-left corner of the Command Prompt window, select Defaults, select the Colors tab, and then select the colors that you want to use for the Screen Text and Screen Background.

If <b> and <f> are the same color value, the ERRORLEVEL is set to 1, and no change is made to either the foreground or the background color.


Examples
To change the Command Prompt window background color to gray and the foreground color to red, type:
color 84

To change the Command Prompt window foreground color to light yellow, type:
color e


Note
In this example, the background is set to the default color because only one hexadecimal digit is specified.

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# color

> Set the console foreground and background colors.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/color>.

- Set the console colors to the default values:

`color`

- List available color values and detailed information:

`color /?`

- Set the console foreground and background to a specific color:

`color {{foreground_code}}{{background_code}}`
"
cmd,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/cmd,"





































cmd | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















cmd


10/16/2017

5 minutes to read








+2





In this article


Starts a new instance of the command interpreter, Cmd.exe. If used without parameters, cmd displays the version and copyright information of the operating system.
Syntax
cmd [/c|/k] [/s] [/q] [/d] [/a|/u] [/t:{<b><f> | <f>}] [/e:{on | off}] [/f:{on | off}] [/v:{on | off}] [<string>]

Parameters



Parameter
Description





/c
Carries out the command specified by string and then stops.



/k
Carries out the command specified by string and continues.



/s
Modifies the treatment of string after /c or /k.



/q
Turns the echo off.



/d
Disables execution of AutoRun commands.



/a
Formats internal command output to a pipe or a file as American National Standards Institute (ANSI).



/u
Formats internal command output to a pipe or a file as Unicode.



/t:{<b><f>
<f>}
Sets the background (b) and foreground (f) colors.


/e:on
Enables command extensions.



/e:off
Disables commands extensions.



/f:on
Enables file and directory name completion.



/f:off
Disables file and directory name completion.



/v:on
Enables delayed environment variable expansion.



/v:off
Disables delayed environment variable expansion.



<string>
Specifies the command you want to carry out.



/?
Displays help at the command prompt.




The following table lists valid hexadecimal digits that you can use as the values for <b> and <f>:



Value
Color




0
Black


1
Blue


2
Green


3
Aqua


4
Red


5
Purple


6
Yellow


7
White


8
Gray


9
Light blue


a
Light green


b
Light aqua


c
Light red


d
Light purple


e
Light yellow


f
Bright white



Remarks

To use multiple commands for <string>, separate them by the command separator && and enclose them in quotation marks. For example:
""<command1>&&<command2>&&<command3>""


If you specify /c or /k, cmd processes, the remainder of string, and the quotation marks are preserved only if all of the following conditions are met:

You don't also use /s.

You use exactly one set of quotation marks.

You don't use any special characters within the quotation marks (for example: & < > ( ) @ ^ | ).

You use one or more white-space characters within the quotation marks.

The string within quotation marks is the name of an executable file.


If the previous conditions aren't met, string is processed by examining the first character to verify whether it is an opening quotation mark. If the first character is an opening quotation mark, it is stripped along with the closing quotation mark. Any text following the closing quotation marks is preserved.

If you don't specify /d in string, Cmd.exe looks for the following registry subkeys:

HKEY_LOCAL_MACHINE\Software\Microsoft\Command Processor\AutoRun\REG_SZ

HKEY_CURRENT_USER\Software\Microsoft\Command Processor\AutoRun\REG_EXPAND_SZ


If one or both registry subkeys are present, they're executed before all other variables.

Caution
Incorrectly editing the registry may severely damage your system. Before making changes to the registry, you should back up any valued data on the computer.


You can disable command extensions for a particular process by using /e:off. You can enable or disable extensions for all cmd command-line options on a computer or user session by setting the following REG_DWORD values:

HKEY_LOCAL_MACHINE\Software\Microsoft\Command Processor\EnableExtensions\REG_DWORD

HKEY_CURRENT_USER\Software\Microsoft\Command Processor\EnableExtensions\REG_DWORD


Set the REG_DWORD value to either 0Ã1 (enabled) or 0Ã0 (disabled) in the registry by using Regedit.exe. User-specified settings take precedence over computer settings, and command-line options take precedence over registry settings.

Caution
Incorrectly editing the registry may severely damage your system. Before making changes to the registry, you should back up any valued data on the computer.

When you enable command extensions, the following commands are affected:

assoc

call

chdir (cd)

color

del (erase)

endlocal

for

ftype

goto

if

mkdir (md)

popd

prompt

pushd

set

setlocal

shift

start (also includes changes to external command processes)



If you enable delayed environment variable expansion, you can use the exclamation point character to substitute the value of an environment variable at run time.

File and directory name completion is not enabled by default. You can enable or disable file name completion for a particular process of the cmd command with /f:{on | off}. You can enable or disable file and directory name completion for all processes of the cmd command on a computer or for a user logon session by setting the following REG_DWORD values:

HKEY_LOCAL_MACHINE\Software\Microsoft\Command Processor\CompletionChar\REG_DWORD

HKEY_LOCAL_MACHINE\Software\Microsoft\Command Processor\PathCompletionChar\REG_DWORD

HKEY_CURRENT_USER\Software\Microsoft\Command Processor\CompletionChar\REG_DWORD

HKEY_CURRENT_USER\Software\Microsoft\Command Processor\PathCompletionChar\REG_DWORD


To set the REG_DWORD value, run Regedit.exe and use the hexadecimal value of a control character for a particular function (for example, 0Ã9 is TAB and 0Ã08 is BACKSPACE). User-specified settings take precedence over computer settings, and command-line options take precedence over registry settings.

Caution
Incorrectly editing the registry may severely damage your system. Before making changes to the registry, you should back up any valued data on the computer.


If you enable file and directory name completion by using /f:on, use CTRL+D for directory name completion and CTRL+F for file name completion. To disable a particular completion character in the registry, use the value for white space [0Ã20] because it is not a valid control character.

Pressing CTRL+D or CTRL+F, processes the file and directory name completion. These key combination functions append a wildcard character to string (if one is not present), builds a list of paths that match, and then displays the first matching path.If none of the paths match, the file and directory name completion function beeps and does not change the display. To move through the list of matching paths, press CTRL+D or CTRL+F repeatedly. To move through the list backwards, press the SHIFT key and CTRL+D or CTRL+F simultaneously. To discard the saved list of matching paths and generate a new list, edit string and press CTRL+D or CTRL+F. If you switch between CTRL+D and CTRL+F, the saved list of matching paths is discarded and a new list is generated. The only difference between the key combinations CTRL+D and CTRL+F is that CTRL+D only matches directory names and CTRL+F matches both file and directory names. If you use file and directory name completion on any of the built-in directory commands (that is, CD, MD, or RD), directory completion is assumed.

File and directory name completion correctly processes file names that contain white space or special characters if you place quotation marks around the matching path.

You must use quotation marks around the following special characters: & < > [ ] { } ^ = ; ! ' + , ` ~ [white space].

If the information that you supply contains spaces, you must use quotation marks around the text (for example, ""Computer Name"").

If you process file and directory name completion from within string, any part of the path to the right of the cursor is discarded (at the point in string where the completion was processed).




Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# cmd

> The Windows command interpreter.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/cmd>.

- Start a new instance of the command interpreter:

`cmd`

- Run the specified command and then exit:

`cmd /c ""{{command}}""`

- Run the specified command and then enter an interactive shell:

`cmd /k ""{{command}}""`

- Disable the usage of `echo` in command output:

`cmd /q`

- Enable or disable command extensions:

`cmd /e:{{on|off}}`

- Enable or disable file or directory autocompletion:

`cmd /f:{{on|off}}`

- Enable or disable environment variable expansion:

`cmd /v:{{on|off}}`

- Force output to use unicode encoding:

`cmd /u`
"
fc,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/fc,"





































fc | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















fc


10/16/2017

4 minutes to read








+2





In this article


Compares two files or sets of files and displays the differences between them.
Syntax
fc /a [/c] [/l] [/lb<n>] [/n] [/off[line]] [/t] [/u] [/w] [/<nnnn>] [<drive1>:][<path1>]<filename1> [<drive2>:][<path2>]<filename2>
fc /b [<drive1:>][<path1>]<filename1> [<drive2:>][<path2>]<filename2>

Parameters



Parameter
Description




/a
Abbreviates the output of an ASCII comparison. Instead of displaying all of the lines that are different, fc displays only the first and last line for each set of differences.


/b
Compares the two files in binary mode, byte by byte, and does not attempt to resynchronize the files after finding a mismatch. This is the default mode for comparing files that have the following file extensions: .exe, .com, .sys, .obj, .lib, or .bin.


/c
Ignores the letter case.


/l
Compares the files in ASCII mode, line-by-line, and attempts to resynchronize the files after finding a mismatch. This is the default mode for comparing files, except files with the following file extensions: .exe, .com, .sys, .obj, .lib, or .bin.


/lb<n>
Sets the number of lines for the internal line buffer to N. The default length of the line buffer is 100 lines. If the files that you are comparing have more than 100 consecutive differing lines, fc cancels the comparison.


/n
Displays the line numbers during an ASCII comparison.


/off[line]
Doesn't skip files that have the offline attribute set.


/t
Prevents fc from converting tabs to spaces. The default behavior is to treat tabs as spaces, with stops at each eighth character position.


/u
Compares files as Unicode text files.


/w
Compresses white space (that is, tabs and spaces) during the comparison. If a line contains many consecutive spaces or tabs, /w treats these characters as a single space. When used with /w, fc ignores white space at the beginning and end of a line.


/<nnnn>
Specifies the number of consecutive lines that must match following a mismatch, before fc considers the files to be resynchronized. If the number of matching lines in the files is less than nnnn, fc displays the matching lines as differences. The default value is 2.


[<drive1>:][<path1>]<filename1>
Specifies the location and name of the first file or set of files to compare. filename1 is required.


[<drive2>:][<path2>]<filename2>
Specifies the location and name of the second file or set of files to compare. filename2 is required.


/?
Displays help at the command prompt.



Remarks

This command is implemeted by c:\WINDOWS\fc.exe. You can use this command within PowerShell, but be sure to spell out the full executable (fc.exe) since 'fc' is also an alias for Format-Custom.

When you use fc for an ASCII comparison, fc displays the differences between two files in the following order:

Name of the first file

Lines from filename1 that differ between the files

First line to match in both files

Name of the second file

Lines from filename2 that differ

First line to match



/b displays mismatches that are found during a binary comparison in the following syntax:
\<XXXXXXXX: YY ZZ>
The value of XXXXXXXX specifies the relative hexadecimal address for the pair of bytes, measured from the beginning of the file. Addresses start at 00000000. The hexadecimal values for YY and ZZ represent the mismatched bytes from filename1 and filename2, respectively.

You can use wildcard characters (* and ?) in filename1 and filename2. If you use a wildcard in filename1, fc compares all the specified files to the file or set of files specified by filename2. If you use a wildcard in filename2, fc uses the corresponding value from filename1.

When comparing ASCII files, fc uses an internal buffer (large enough to hold 100 lines) as storage. If the files are larger than the buffer, fc compares what it can load into the buffer. If fc doesn't find a match in the loaded portions of the files, it stops and displays the following message:
Resynch failed. Files are too different.
When comparing binary files that are larger than the available memory, fc compares both files completely, overlaying the portions in memory with the next portions from the disk. The output is the same as that for files that fit completely in memory.


Examples
To make an ASCII comparison of two text files, monthly.rpt and sales.rpt, and display the results in abbreviated format, type:
fc /a monthly.rpt sales.rpt

To make a binary comparison of two batch files, profits.bat and earnings.bat, type:
fc /b profits.bat earnings.bat

Results similar to the following appear:
00000002: 72 43
00000004: 65 3A
0000000E: 56 92
000005E8: 00 6E
FC: earnings.bat longer than profits.bat

If the profits.bat and earnings.bat files are identical, fc displays the following message:
Comparing files profits.bat and earnings.bat
FC: no differences encountered

To compare every .bat file in the current directory with the file new.bat, type:
fc *.bat new.bat

To compare the file new.bat on drive C with the file new.bat on drive D, type:
fc c:new.bat d:*.bat

To compare each batch file in the root directory on drive C to the file with the same name in the root directory on drive D, type:
fc c:*.bat d:*.bat

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
BUILTIN(1)		  BSD General Commands Manual		    BUILTIN(1)

NAME
     builtin, !, %, ., :, @, {, }, alias, alloc, bg, bind, bindkey, break,
     breaksw, builtins, case, cd, chdir, command, complete, continue, default,
     dirs, do, done, echo, echotc, elif, else, end, endif, endsw, esac, eval,
     exec, exit, export, false, fc, fg, filetest, fi, for, foreach, getopts,
     glob, goto, hash, hashstat, history, hup, if, jobid, jobs, kill, limit,
     local, log, login, logout, ls-F, nice, nohup, notify, onintr, popd,
     printenv, pushd, pwd, read, readonly, rehash, repeat, return, sched, set,
     setenv, settc, setty, setvar, shift, source, stop, suspend, switch,
     telltc, test, then, time, times, trap, true, type, ulimit, umask,
     unalias, uncomplete, unhash, unlimit, unset, unsetenv, until, wait,
     where, which, while -- shell built-in commands

SYNOPSIS
     builtin [-options] [args ...]

DESCRIPTION
     Shell builtin commands are commands that can be executed within the run-
     ning shell's process.  Note that, in the case of csh(1) builtin commands,
     the command is executed in a subshell if it occurs as any component of a
     pipeline except the last.

     If a command specified to the shell contains a slash ``/'', the shell
     will not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying ``echo'' causes a builtin command to be executed under shells
     that support the echo builtin command, specifying ``/bin/echo'' or
     ``./echo'' does not.

     While some builtin commands may exist in more than one shell, their oper-
     ation may be different under each shell which supports them.  Below is a
     table which lists shell builtin commands, the standard shells that sup-
     port them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.	Beware that the sh(1) manual page, at least, calls some of
     these commands ``built-in commands'' and some of them ``reserved words''.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked ``No**'' under External do exist externally, but are
     implemented as scripts using a builtin command of the same name.

	   Command	 External    csh(1)    sh(1)
	   !		 No	     No        Yes
	   %		 No	     Yes       No
	   .		 No	     No        Yes
	   :		 No	     Yes       Yes
	   @		 No	     Yes       Yes
	   {		 No	     No        Yes
	   }		 No	     No        Yes
	   alias	 No**	     Yes       Yes
	   alloc	 No	     Yes       No
	   bg		 No**	     Yes       Yes
	   bind 	 No	     No        Yes
	   bindkey	 No	     Yes       No
	   break	 No	     Yes       Yes
	   breaksw	 No	     Yes       No
	   builtin	 No	     No        Yes
	   builtins	 No	     Yes       No
	   case 	 No	     Yes       Yes
	   cd		 No**	     Yes       Yes
	   chdir	 No	     Yes       Yes
	   command	 No**	     No        Yes
	   complete	 No	     Yes       No
	   continue	 No	     Yes       Yes
	   default	 No	     Yes       No
	   dirs 	 No	     Yes       No
	   do		 No	     No        Yes
	   done 	 No	     No        Yes
	   echo 	 Yes	     Yes       Yes
	   echotc	 No	     Yes       No
	   elif 	 No	     No        Yes
	   else 	 No	     Yes       Yes
	   end		 No	     Yes       No
	   endif	 No	     Yes       No
	   endsw	 No	     Yes       No
	   esac 	 No	     No        Yes
	   eval 	 No	     Yes       Yes
	   exec 	 No	     Yes       Yes
	   exit 	 No	     Yes       Yes
	   export	 No	     No        Yes
	   false	 Yes	     No        Yes
	   fc		 No**	     No        Yes
	   fg		 No**	     Yes       Yes
	   filetest	 No	     Yes       No
	   fi		 No	     No        Yes
	   for		 No	     No        Yes
	   foreach	 No	     Yes       No
	   getopts	 No**	     No        Yes
	   glob 	 No	     Yes       No
	   goto 	 No	     Yes       No
	   hash 	 No	     No        Yes
	   hashstat	 No	     Yes       No
	   history	 No	     Yes       No
	   hup		 No	     Yes       No
	   if		 No	     Yes       Yes
	   jobid	 No	     No        Yes
	   jobs 	 No**	     Yes       Yes
	   kill 	 Yes	     Yes       No
	   limit	 No	     Yes       No
	   local	 No	     No        Yes
	   log		 No	     Yes       No
	   login	 Yes	     Yes       No
	   logout	 No	     Yes       No
	   ls-F 	 No	     Yes       No
	   nice 	 Yes	     Yes       No
	   nohup	 Yes	     Yes       No
	   notify	 No	     Yes       No
	   onintr	 No	     Yes       No
	   popd 	 No	     Yes       No
	   printenv	 Yes	     Yes       No
	   pushd	 No	     Yes       No
	   pwd		 Yes	     No        Yes
	   read 	 No**	     No        Yes
	   readonly	 No	     No        Yes
	   rehash	 No	     Yes       No
	   repeat	 No	     Yes       No
	   return	 No	     No        Yes
	   sched	 No	     Yes       No
	   set		 No	     Yes       Yes
	   setenv	 No	     Yes       No
	   settc	 No	     Yes       No
	   setty	 No	     Yes       No
	   setvar	 No	     No        Yes
	   shift	 No	     Yes       Yes
	   source	 No	     Yes       No
	   stop 	 No	     Yes       No
	   suspend	 No	     Yes       No
	   switch	 No	     Yes       No
	   telltc	 No	     Yes       No
	   test 	 Yes	     No        Yes
	   then 	 No	     No        Yes
	   time 	 Yes	     Yes       No
	   times	 No	     No        Yes
	   trap 	 No	     No        Yes
	   true 	 Yes	     No        Yes
	   type 	 No	     No        Yes
	   ulimit	 No	     No        Yes
	   umask	 No**	     Yes       Yes
	   unalias	 No**	     Yes       Yes
	   uncomplete	 No	     Yes       No
	   unhash	 No	     Yes       No
	   unlimit	 No	     Yes       No
	   unset	 No	     Yes       Yes
	   unsetenv	 No	     Yes       No
	   until	 No	     No        Yes
	   wait 	 No**	     Yes       Yes
	   where	 No	     Yes       No
	   which	 Yes	     Yes       No
	   while	 No	     Yes       Yes

SEE ALSO
     csh(1), echo(1), false(1), info(1), kill(1), login(1), nice(1), nohup(1),
     printenv(1), pwd(1), sh(1), test(1), time(1), true(1), which(1)

HISTORY
     The builtin manual page first appeared in FreeBSD 3.4.

AUTHORS
     This manual page was written by Sheldon Hearn <sheldonh@FreeBSD.org>.

BSD			       February 23, 2005			   BSD
","# fc

> Compare the differences between two files or sets of files.
> Use wildcards (*) to compare sets of files.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/fc>.

- Compare 2 specified files:

`fc {{path/to/file_1}} {{path/to/file_2}}`

- Perform a case-insensitive comparison:

`fc /c {{path/to/file_1}} {{path/to/file_2}}`

- Compare files as Unicode text:

`fc /u {{path/to/file_1}} {{path/to/file_2}}`

- Compare files as ASCII text:

`fc /l {{path/to/file_1}} {{path/to/file_2}}`

- Compare files as binary:

`fc /b {{path/to/file_1}} {{path/to/file_2}}`

- Disable tab-to-space expansion:

`fc /t {{path/to/file_1}} {{path/to/file_2}}`

- Compress whitespace (tabs and spaces) for comparisons:

`fc /w {{path/to/file_1}} {{path/to/file_2}}`
"
reg-restore,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-restore,"





































reg restore | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















reg restore


10/16/2017

2 minutes to read













In this article


Writes saved subkeys and entries back to the registry.
Syntax
reg restore <keyname> <filename>

Parameters



Parameter
Description




<keyname>
Specifies the full path of the subkey to be restored. The restore operation only works with the local computer. The keyname must include a valid root key. Valid root keys for the local computer are: HKLM, HKCU, HKCR, HKU, and HKCC. If the registry key name contains a space, enclose the key name in quotes.


<filename>
Specifies the name and path of the file with content to be written into the registry. This file must be created in advance by using the reg save command, and must have a .hiv extension.


/?
Displays help at the command prompt.



Remarks

Before editing any registry entries, you must save the parent subkey using the reg save command. If the edit fails, you can then restore the original subkey using the reg restore operation.

The return values for the reg restore operation are:



Value
Description




0
Success


1
Failure





Examples
To restore the file named NTRKBkUp.hiv into the key HKLM\Software\Microsoft\ResKit, and overwrite the existing contents of the key, type:
reg restore HKLM\Software\Microsoft\ResKit NTRKBkUp.hiv

Additional References

Command-Line Syntax Key

reg save command









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# reg restore

> Restore a key and its values from a backup file.
> See `reg-save` for more information.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-restore>.

- Overwrite a specified key with data from a backup file:

`reg restore {{key_name}} {{path/to/file}}`
"
xcopy,,,,"# xcopy

> Copy files and directory trees.

- Copy the file(s) to the specified destination:

`xcopy {{path/to/file_or_directory}} {{path/to/destination}}`

- List files that will be copied before copying:

`xcopy {{path/to/file_or_directory}} {{path/to/destination}} /p`

- Copy the directory structure only, excluding files:

`xcopy {{path/to/file_or_directory}} {{path/to/destination}} /t`

- Include empty directories when copying:

`xcopy {{path/to/file_or_directory}} {{path/to/destination}} /e`

- Keep the source ACL in the destination:

`xcopy {{path/to/file_or_directory}} {{path/to/destination}} /o`

- Allow resuming when network connection is lost:

`xcopy {{path/to/file_or_directory}} {{path/to/destination}} /z`

- Disable the prompt when the file exists in the destination:

`xcopy {{path/to/file_or_directory}} {{path/to/destination}} /y`

- Display detailed usage information:

`xcopy /?`
"
reg-compare,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-compare,"





































reg compare | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















reg compare


10/16/2017

2 minutes to read








+1





In this article


Compares specified registry subkeys or entries.
Syntax
reg compare <keyname1> <keyname2> [{/v Valuename | /ve}] [{/oa | /od | /os | on}] [/s]

Parameters



Parameter
Description




<keyname1>
Specifies the full path of the subkey or entry to be added. To specify a remote computer, include the computer name (in the format \\<computername>\) as part of the keyname. Omitting \\<computername>\ causes the operation to default to the local computer. The keyname must include a valid root key. Valid root keys for the local computer are: HKLM, HKCU, HKCR, HKU, and HKCC. If a remote computer is specified, valid root keys are: HKLM and HKU. If the registry key name contains a space, enclose the key name in quotes.


<keyname2>
Specifies the full path of the second subkey to be compared. To specify a remote computer, include the computer name (in the format \\<computername>\) as part of the keyname. Omitting \\<computername>\ causes the operation to default to the local computer. Specifying only the computer name in keyname2 causes the operation to use the path to the subkey specified in keyname1. The keyname must include a valid root key. Valid root keys for the local computer are: HKLM, HKCU, HKCR, HKU, and HKCC. If a remote computer is specified, valid root keys are: HKLM and HKU. If the registry key name contains a space, enclose the key name in quotes.


/v <Valuename>
Specifies the value name to compare under the subkey.


/ve
Specifies that only entries that have a value name of null should be compared.


/oa
Specifies that all differences and matches are displayed. By default, only the differences are listed.


/od
Specifies that only differences are displayed. This is the default behavior.


/os
Specifies that only matches are displayed. By default, only the differences are listed.


/on
Specifies that nothing is displayed. By default, only the differences are listed.


/s
Compares all subkeys and entries recursively.


/?
Displays help at the command prompt.



Remarks

The return values for the reg compare operation are:



Value
Description




0
The comparison is successful and the result is identical.


1
The comparison failed.


2
The comparison was successful and differences were found.




The symbols displayed in the results, include:



Symbol
Description




=
KeyName1 data is equal to KeyName2 data.


<
KeyName1 data is less than KeyName2 data.


>
KeyName1 data is greater than KeyName2 data.





Examples
To compare all values under the key MyApp with all values under the key SaveMyApp, type:
reg compare HKLM\Software\MyCo\MyApp HKLM\Software\MyCo\SaveMyApp

To compare the value for the Version under the key MyCo and the value for the Version under the key MyCo1, type:
reg compare HKLM\Software\MyCo HKLM\Software\MyCo1 /v Version

To compare all subkeys and values under HKLM\Software\MyCo on the computer named ZODIAC, with all subkeys and values under HKLM\Software\MyCo on the local computer, type:
reg compare \\ZODIAC\HKLM\Software\MyCo \\. /s

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# reg compare

> Compare keys and their values in the registry.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-compare>.

- Compare all values under a specific key with a second key:

`reg compare {{first_key_name}} {{second_key_name}}`

- Compare a specific value under two keys:

`reg compare {{first_key_name}} {{second_key_name}} /v {{value}}`

- Compare all sub keys and values for two keys:

`reg compare {{first_key_name}} {{second_key_name}} /s`

- Only output the matches between the specified keys:

`reg compare {{first_key_name}} {{second_key_name}} /os`

- Output the differences and matches between the specified keys:

`reg compare {{first_key_name}} {{second_key_name}} /oa`
"
choco-search,https://chocolatey.org/docs/commands-search,"




Chocolatey Software | Commands Search






































Here's how we're responding to COVID-19 plus resources to help

×













Resources
Watch videos, read documentation, and hear Chocolatey success stories from companies you trust.
View Resources






Events
Find past and upcoming webinars, workshops, and conferences. New events have recently been added!
View Events






Courses
Step-by-step guides for all things Chocolatey! Earn badges as you learn through interactive digital courses.
View Courses











Tuesday, 22 September 20203 PM BST/GMT+1 / 4 PM CEST / 9 AM Central / 10 AM Eastern

            Standardising tool sets across different Teams is not always easy... especially when different Teams have traditionally used different approaches and methodologies.
            In this webinar we will unpack the advantages of a more standard, consistent approach with Puppet & Chocolatey.
        
Register Now






Webinar Replay fromTuesday, 23 June 2020
Chocolatey Central Management now includes the premiere feature of managing endpoints through a Chocolatey-centered solution aka Deployments. We are excited to share what Deployments is all about!
Learn More
Watch Now



COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.
Find Resources






Chocolatey for Business Feature Video Series

            In this video series, come take a tour of the many features available in our Chocolatey for Business offering.
            Many organizations choose Chocolatey for Business when they want to scale out their solution across thousands of nodes, deploy rapidly and reliably every time,
            mitigate risks with a greatly-simplified patching workflow, and access a Support Team that will guide you on your automation journey.
        
Watch the Series

































id:searchValue search by id only
tag:searchValue search by tags













Overview




 Go Back
Overview




Why Chocolatey?
Chocolatey is a software management solution unlike anything else you've ever experienced on Windows. Chocolatey brings the concepts of true package management to allow you to version things, manage dependencies and installation order, better inventory management, and other features.

How Chocolatey Works




Use Cases
Server
Desktop
Cloud / Containers
Integrations




Customer Stories
Puppet
Yelp
CME Group







Product




 Go Back
Product




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.


Pro Edition
Pro is a personal, named license that grants having licensed versions of Chocolatey on up to 8 machines and provides the ultimate Chocolatey experience!


Open Source
Chocolatey has the largest online registry of Windows packages. Learn how Open Source Chocolatey can support your next project.






Compare Editions
Learn the difference between the Chocolatey Editions and what will fit your needs the best.

Pricing
Try Chocolatey for Business Free

Purchase
I'm ready to get started now!

Support





Events
Find past and upcoming webinars, workshops, and conferences.








Solutions




 Go Back
Solutions




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.






Self-Service Anywhere

                                                Chocolatey provides a unique approach to managing your end-user software (desktops / laptops) and can be combined with your existing solutions.
                                                Chocolatey for Business (C4B) enables better security, enhanced visibility with centralized reporting, and a self-service GUI. Self-Service Anywhere allows non-administrators to easily access and manage IT approved software from the office, from home, or anywhere they have an internet connection.
                                            






Quick Deployment Environment (QDE)

                                                The Quick Deployment Environment (QDE) provides a single virtual machine appliance to be imported into your hypervisor-of-choice, which contains most of the various components of a Chocolatey organizational solution. Deploy recommended architecture in 2-3 hours.
                                            








Community




 Go Back
Community




Community Packages
Search the largest online registry of Windows packages. Chocolatey packages encapsulate everything required to manage a particular piece of software into one deployment artifact by wrapping installers, executables, zips, and scripts into a compiled package file.





Community Resources
Chocolatey on GitHub
Blog





Events
Find past and upcoming webinars, workshops, and conferences.








Learn




 Go Back
Learn




Install Chocolatey
Get step-by-step instructions on how to install Chocolatey.


Getting Started Course
New to Chocolatey? Learn the requirements and how to get Chocolatey up and running in no time!





Resource Library
Docs
Videos
Case Studies
Courses
Media Kit





Events
Find past and upcoming webinars, workshops, and conferences.


COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.


Support
Need help? Read our Support FAQ to find out the next steps.

Blog
Newsletter







Partners




 Go Back
Partners



Overview
Become a Partner




Technology Partners
Resellers







About




 Go Back
About




About Chocolatey
Chocolatey Software is focused on helping our community, customers, and partners with solutions that help fill the gaps that are often ignored. We offer a simple, pragmatic, and open approach to software management.





Careers
Contact







Install Now
Install Now












Videos





Featured Series





Success Stories





Case Studies





Docs





Blog










Documentation Table of Contents


















id:searchValue search by id only
tag:searchValue search by tags





Docs Home
Why Chocolatey?
Security

Features



Free


Create your own packages
Host packages internally
Integrates with everything
Package Shims
Custom Package Templates
Package Extensions




Paid


Self-Service / Background Mode (C4B)
Chocolatey Central Management (C4B)
Package Internalizer (C4B)
Package Builder (C4B)
Package Audit (C4B)
Branding Chocolatey Applications (C4B)
Runtime Malware Protection (Pro+)
Download CDN Cache (Pro+)
Package Reducer (Pro+)
Ubiquitous Install Directory Option (Pro+)
Package Throttle (Pro+)
Package Synchronizer (Pro+ Auto / C4B Sync Command)
Windows Service Management PowerShell Functions (C4B)





General


Release Notes
Licensed Release Notes
Troubleshooting
FAQs
Chocolatey.org Moderation
Chocolatey.org Packages Disclaimer
Software Vendor?


Usage


How to install
How to install licensed edition
Configuration / chocolatey.config
How to uninstall
Getting Started
Proxy Settings

Commands


Passing args to choco
Complete Reference
List / Search
Info
Install
Pin
Outdated
Upgrade
Uninstall
Config
Source / Sources
Feature
Download





Creating Packages


Create Packages
Quick Start

Commands


New
Pack
Apikey
Push




PowerShell References


Function and Variable Reference
Install-ChocolateyPackage
Install-ChocolateyZipPackage
Install-ChocolateyPowershellCommand
Install-ChocolateyVsixPackage
Get-ChocolateyWebFile
Install-ChocolateyInstallPackage



Automatic Packaging


How To's


Use Chocolatey w/Proxy Server
Change Download Cache Location aka Don't use TEMP for downloads
Install/Upgrade a Package w/out running install scripts
Request Package Fixes/Updates
Manually Recompile Packages, Embedding/Internalizing Remote Resources
Request Package
Maintain Packages for My Software
Become a Maintainer
Take Over Package Maintenance Exclusively
Parse Package Parameters
Mount Iso
Create Custom Package Templates
Extend Chocolatey With PowerShell Modules (extensions)
Deprecate a Package
Install licensed edition
Host Your Own Package Repository Server
Set up the Chocolatey.Server
Set up Chocolatey for internal/organizational use
Automate Package Internalizer (MSP/C4B)
C4B Quick Start Guide


Chocolatey GUI


Chocolatey GUI Overview
Chocolatey GUI Branding
Chocolatey GUI Known Issues


Quick Deployment Environment (QDE)


QDE Overview
QDE Setup
QDE Desktop ReadMe Files
QDE SSL/TLS Setup
QDE Firewall Changes
QDE Client Setup
QDE Internet Setup

QDE v1


QDE Setup v1
QDE Desktop ReadMe Files v1
QDE SSL/TLS Setup v1
QDE Firewall Changes v1
QDE Client Setup v1





Chocolatey Central Management (CCM)


Central Management Overview
Central Management Setup
Central Management Client Setup
Central Management Upgrade
Central Management Deployments


Use Cases


Development Environment
Host on MyGet


Learning Resources


Resources
Videos
Presentations


Additional Information


Legal
History









List/Search Command (choco search)
Chocolatey will perform a search for a package local or remote. Some
may prefer to use clist as a shortcut for choco list.
NOTE: 100% compatible with older Chocolatey client (0.9.8.x and below)
with options and switches. In most cases you can still pass options
and switches  with one dash (-). For more details, see
how to pass arguments (choco -?).


Usage
Examples
Exit Codes
See It In Action
Alternative Sources

WebPI
Windows Features


Options and Switches


Usage
choco search <filter> [<options/switches>]
choco list <filter> [<options/switches>]
clist <filter> [<options/switches>]

Examples
choco list --local-only
choco list -li
choco list -lai
choco list --page=0 --page-size=25
choco search git
choco search git --source=""'https://somewhere/out/there'""
choco search bob -s ""'https://somewhere/protected'"" -u user -p pass

NOTE: See scripting in how to pass arguments (choco -?) for how to
write proper scripts and integrations.
Exit Codes
Exit codes that normally result from running this command.
Normal:

0: operation was successful, no issues detected
-1 or 1: an error has occurred

Enhanced:

0: operation was successful, no issues detected
-1 or 1: an error has occurred
2: no results (enhanced)

NOTE: Starting in v0.10.12, if you have the feature 'useEnhancedExitCodes'
turned on, then choco will provide enhanced exit codes that allow
better integration and scripting.
If you find other exit codes that we have not yet documented, please
file a ticket so we can document it at
https://github.com/chocolatey/choco/issues/new/choose.
See It In Action

Alternative Sources
Available in 0.9.10+.
WebPI
This specifies the source is Web PI (Web Platform Installer) and that
we are searching for a WebPI product, such as IISExpress. If you do
not have the Web PI command line installed, it will install that first
and then perform the search requested.
e.g. choco list --source webpi
Windows Features
This specifies that the source is a Windows Feature and we should
install via the Deployment Image Servicing and Management tool (DISM)
on the local machine.
e.g. choco list --source windowsfeatures
Options and Switches
NOTE: Options and switches apply to all items passed, so if you are
running a command like install that allows installing multiple
packages, and you use --version=1.0.0, it is going to look for and
try to install version 1.0.0 of every package passed. So please split
out multiple package calls when wanting to pass specific options.
Includes default options/switches (included below for completeness).

 -?, --help, -h
     Prints out the help menu.

 -d, --debug
     Debug - Show debug messaging.

 -v, --verbose
     Verbose - Show verbose messaging. Very verbose messaging, avoid using
       under normal circumstances.

     --trace
     Trace - Show trace messaging. Very, very verbose trace messaging. Avoid
       except when needing super low-level .NET Framework debugging. Available
       in 0.10.4+.

     --nocolor, --no-color
     No Color - Do not show colorization in logging output. This overrides
       the feature 'logWithoutColor', set to 'False'. Available in 0.10.9+.

     --acceptlicense, --accept-license
     AcceptLicense - Accept license dialogs automatically. Reserved for
       future use.

 -y, --yes, --confirm
     Confirm all prompts - Chooses affirmative answer instead of prompting.
       Implies --accept-license

 -f, --force
     Force - force the behavior. Do not use force during normal operation -
       it subverts some of the smart behavior for commands.

     --noop, --whatif, --what-if
     NoOp / WhatIf - Don't actually do anything.

 -r, --limitoutput, --limit-output
     LimitOutput - Limit the output to essential information

     --timeout, --execution-timeout=VALUE
     CommandExecutionTimeout (in seconds) - The time to allow a command to
       finish before timing out. Overrides the default execution timeout in the
       configuration of 2700 seconds. '0' for infinite starting in 0.10.4.

 -c, --cache, --cachelocation, --cache-location=VALUE
     CacheLocation - Location for download cache, defaults to %TEMP% or value
       in chocolatey.config file.

     --allowunofficial, --allow-unofficial, --allowunofficialbuild, --allow-unofficial-build
     AllowUnofficialBuild - When not using the official build you must set
       this flag for choco to continue.

     --failstderr, --failonstderr, --fail-on-stderr, --fail-on-standard-error, --fail-on-error-output
     FailOnStandardError - Fail on standard error output (stderr), typically
       received when running external commands during install providers. This
       overrides the feature failOnStandardError.

     --use-system-powershell
     UseSystemPowerShell - Execute PowerShell using an external process
       instead of the built-in PowerShell host. Should only be used when
       internal host is failing. Available in 0.9.10+.

     --no-progress
     Do Not Show Progress - Do not show download progress percentages.
       Available in 0.10.4+.

     --proxy=VALUE
     Proxy Location - Explicit proxy location. Overrides the default proxy
       location of ''. Available for config settings in 0.9.9.9+, this CLI
       option available in 0.10.4+.

     --proxy-user=VALUE
     Proxy User Name - Explicit proxy user (optional). Requires explicity
       proxy (`--proxy` or config setting). Overrides the default proxy user of
       '123'. Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-password=VALUE
     Proxy Password - Explicit proxy password (optional) to be used with
       username. Requires explicity proxy (`--proxy` or config setting) and
       user name.  Overrides the default proxy password (encrypted in settings
       if set). Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-bypass-list=VALUE
     ProxyBypassList - Comma separated list of regex locations to bypass on
       proxy. Requires explicity proxy (`--proxy` or config setting). Overrides
       the default proxy bypass list of ''. Available in 0.10.4+.

     --proxy-bypass-on-local
     Proxy Bypass On Local - Bypass proxy for local connections. Requires
       explicity proxy (`--proxy` or config setting). Overrides the default
       proxy bypass on local setting of 'True'. Available in 0.10.4+.

     --log-file=VALUE
     Log File to output to in addition to regular loggers. Available in 0.1-
       0.8+.

 -s, --source=VALUE
     Source - Source location for install. Can use special 'webpi' or
       'windowsfeatures' sources. Defaults to sources.

 -l, --lo, --localonly, --local-only
     LocalOnly - Only search against local machine items.

     --idonly, --id-only
     Id Only - Only return Package Ids in the list results. Available in 0.1-
       0.6+.

     --pre, --prerelease
     Prerelease - Include Prereleases? Defaults to false.

 -i, --includeprograms, --include-programs
     IncludePrograms - Used in conjunction with LocalOnly, filters out apps
       chocolatey has listed as packages and includes those in the list.
       Defaults to false.

 -a, --all, --allversions, --all-versions
     AllVersions - include results from all versions.

     --version=VALUE
     Version - Specific version of a package to return.

 -u, --user=VALUE
     User - used with authenticated feeds. Defaults to empty.

 -p, --password=VALUE
     Password - the user's password to the source. Defaults to empty.

     --cert=VALUE
     Client certificate - PFX pathname for an x509 authenticated feeds.
       Defaults to empty. Available in 0.9.10+.

     --cp, --certpassword=VALUE
     Certificate Password - the client certificate's password to the source.
       Defaults to empty. Available in 0.9.10+.

     --page=VALUE
     Page - the 'page' of results to return. Defaults to return all results.
       Available in 0.9.10+.

     --page-size=VALUE
     Page Size - the amount of package results to return per page. Defaults
       to 25. Available in 0.9.10+.

 -e, --exact
     Exact - Only return packages with this exact name. Available in 0.9.10+.

     --by-id-only
     ByIdOnly - Only return packages where the id contains the search filter.
       Available in 0.9.10+.

     --by-tag-only, --by-tags-only
     ByTagOnly - Only return packages where the search filter matches on the
       tags. Available in 0.10.6+.

     --id-starts-with
     IdStartsWith - Only return packages where the id starts with the search
       filter. Available in 0.9.10+.

     --order-by-popularity
     OrderByPopularity - Sort by package results by popularity. Available in
       0.9.10+.

     --approved-only
     ApprovedOnly - Only return approved packages - this option will filter
       out results not from the [community repository](https://chocolatey.org/packages). Available in 0.9.10+.

     --download-cache, --download-cache-only
     DownloadCacheAvailable - Only return packages that have a download cache
       available - this option will filter out results not from the community
       repository. Available in 0.9.10+.

     --not-broken
     NotBroken - Only return packages that are not failing testing - this
       option only filters out failing results from the [community feed](https://chocolatey.org/packages). It will
       not filter against other sources. Available in 0.9.10+.

     --detail, --detailed
     Detailed - Alias for verbose. Available in 0.9.10+.

     --audit, --showaudit, --show-audit, --show-audit-info
     Show Audit Information - Display auditing information for a package.
       Available in business editions 1.12.0+.


Command Reference
NOTE: This documentation has been automatically generated from choco search -h.












Overview

About
Getting Started Guide
Why Chocolatey
How Chocolatey Works
Security
Privacy Policy
Kickstarter
Partner
Customer Stories




Product

Solution: Self-Service Anywhere
Solution: Quick Deployment Environment (QDE)
Chocolatey for Business
Pro Edition
Open Source
C4B Trial
Pricing
Support
Community Packages
Events




Learn

Resource Library
Events
COVID-19 Resources
Docs
Videos
Case Studies
Courses
Blog 
Media Kit
Sitemap




Connect

Contact Us
Support
Newsletter
Shop
Report a Bug
Status
Careers



Follow Chocolatey Software on Twitter



Follow Chocolatey Software on Facebook



Find Chocolatey Software on GitHub



Subscribe to Chocolatey Software on YouTube









© 2020 Chocolatey Software, Inc.
Deployed from 16d5ee0bdb. You are on web.1. Page generated 25 Sep 2020 08:27:36 +00:00.





Chocolatey.org uses cookies to enhance the user experience of the site.

        I accept
    

        I accept
    










",,"# choco search

> Search for a local or remote package with Chocolatey.
> More information: <https://chocolatey.org/docs/commands-search>.

- Search for a package:

`choco search {{query}}`

- Search for a package locally:

`choco search {{query}} --local-only`

- Only include exact matches in the results:

`choco search {{query}} --exact`

- Confirm all prompts automatically:

`choco search {{query}} --yes`

- Specify a custom source to search for packages in:

`choco search {{query}} --source {{source_url|alias}}`

- Provide a username and password for authentication:

`choco search {{query}} --user {{username}} --password {{password}}`
"
rdpsign,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/rdpsign,"





































rdpsign | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















rdpsign


07/11/2018

2 minutes to read








+2





In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

Enables you to digitally sign a Remote Desktop Protocol (.rdp) file.

Note
To find out what's new in the latest version, see What's New in Remote Desktop Services in Windows Server.

Syntax
rdpsign /sha1 <hash> [/q | /v |] [/l] <file_name.rdp>

Parameters



Parameter
Description




/sha1 <hash>
Specifies the thumbprint, which is the Secure Hash Algorithm 1 (SHA1) hash of the signing certificate that is included in the certificate store. Used in Windows Server 2012 R2 and older.


/sha256 <hash>
Specifies the thumbprint, which is the Secure Hash Algorithm 256 (SHA256) hash of the signing certificate that is included in the certificate store. Replaces /sha1 in Windows Server 2016 and newer.


/q
Quiet mode. No output when the command succeeds and minimal output if the command fails.


/v
verbose mode. Displays all warnings, messages, and status.


/l
Tests the signing and output results without actually replacing any of the input files.


<file_name.rdp>
The name of the .rdp file. You must specify the .rdp file (or files) to sign by using the full file name. Wildcard characters are not accepted.


/?
Displays help at the command prompt.



Remarks

The SHA1 or SHA256 certificate thumbprint should represent a trusted .rdp file publisher. To obtain the certificate thumbprint, open the Certificates snap-in, double-click the certificate that you want to use (either in the local computer's certificates store or in your personal certificates store), click the details tab, and then in the Field list, click Thumbprint.

Note
When you copy the thumbprint for use with the rdpsign.exe tool, you must remove any spaces.


The signed output files overwrite the input files.

If multiple files are specified, and if any of the .rdp files can't be read or written to, the tool continues to the next file.


Examples
To sign an .rdp file named file1.rdp, navigate to the folder where you saved the .rdp file, and then type:
rdpsign /sha1 hash file1.rdp


Note
The hash value represents the SHA1 certificate thumbprint, without any spaces.

To test whether digital signing will succeed for an .rdp file without actually signing the file, type:
rdpsign /sha1 hash /l file1.rdp

To sign multiple .rdp files that are named, file1.rdp, file2.rdp, and file3.rdp, type (including the spaces between file names):
rdpsign /sha1 hash file1.rdp file2.rdp file3.rdp

See Also

Command-Line Syntax Key

Remote Desktop Services (Terminal Services) Command Reference









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# rdpsign

> A tool for signing Remote Desktop Protocol (RDP) files.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/rdpsign>.

- Sign an RDP file:

`rdpsign {{path/to/file.rdp}}`

- Sign an RDP file using a specific sha256 hash:

`rdpsign {{path/to/file.rdp}} /sha265 {{hash}}`

- Enable quiet output:

`rdpsign {{path/to/file.rdp}} /q`

- Display verbose warnings, messages and statuses:

`rdpsign {{path/to/file.rdp}} /v`

- Test the signing by displaying the output to `stdout` without updating the file:

`rdpsign {{path/to/file.rdp}} /l`
"
reg-query,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-query,"





































reg query | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















reg query


10/16/2017

2 minutes to read













In this article


Returns a list of the next tier of subkeys and entries that are located under a specified subkey in the registry.
Syntax
reg query <keyname> [{/v <Valuename> | /ve}] [/s] [/se <separator>] [/f <data>] [{/k | /d}] [/c] [/e] [/t <Type>] [/z]

Parameters



Parameter
Description




<keyname>
Specifies the full path of the subkey. To specify a remote computer, include the computer name (in the format \\<computername>\) as part of the keyname. Omitting \\<computername>\ causes the operation to default to the local computer. The keyname must include a valid root key. Valid root keys for the local computer are: HKLM, HKCU, HKCR, HKU, and HKCC. If a remote computer is specified, valid root keys are: HKLM and HKU. If the registry key name contains a space, enclose the key name in quotes.


/v <Valuename>
Specifies the registry value name that is to be queried. If omitted, all value names for keyname are returned. Valuename for this parameter is optional if the /f option is also used.


/ve
Runs a query for value names that are empty.


/s
Specifies to query all subkeys and value names recursively.


/se <separator>
Specifies the single value separator to search for in the value name type REG_MULTI_SZ. If separator isn't specified, \0 is used.


/f <data>
Specifies the data or pattern to search for. Use double quotes if a string contains spaces. If not specified, a wildcard (*) is used as the search pattern.


/k
Specifies to search in key names only.


/d
Specifies to search in data only.


/c
Specifies that the query is case sensitive. By default, queries are not case sensitive.


/e
Specifies to return only exact matches. By default, all the matches are returned.


/t <Type>
Specifies registry types to search. Valid types are: REG_SZ, REG_MULTI_SZ, REG_EXPAND_SZ, REG_DWORD, REG_BINARY, REG_NONE. If not specified, all types are searched.


/z
Specifies to include the numeric equivalent for the registry type in search results.


/?
Displays help at the command prompt.



Remarks

The return values for the reg query operation are:



Value
Description




0
Success


1
Failure





Examples
To display the value of the name value Version in the HKLM\Software\Microsoft\ResKit key, type:
reg query HKLM\Software\Microsoft\ResKit /v Version

To display all subkeys and values under the key HKLM\Software\Microsoft\ResKit\Nt\Setup on a remote computer named ABC, type:
reg query \\ABC\HKLM\Software\Microsoft\ResKit\Nt\Setup /s

To display all the subkeys and values of the type REG_MULTI_SZ using # as the separator, type:
reg query HKLM\Software\Microsoft\ResKit\Nt\Setup /se #

To display the key, value, and data for exact and case sensitive matches of SYSTEM under the HKLM root of data type REG_SZ, type:
reg query HKLM /f SYSTEM /t REG_SZ /c /e

To display the key, value, and data that match 0F in the data under the HKCU root key of data type REG_BINARY, type:
reg query HKCU /f 0F /d /t REG_BINARY

To display the value and data for value names of null (default) under HKLM\SOFTWARE, type:
reg query HKLM\SOFTWARE /ve

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# reg query

> Display the values of keys and sub keys in the registry.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-query>.

- Display all values of a key:

`reg query {{key_name}}`

- Display a specific value of a key:

`reg query {{key_name}} /v {{value}}`

- Display all values of a key and its sub keys:

`reg query {{key_name}} /s`

- Search for keys and values matching a specific pattern:

`reg query {{key_name}} /f ""{{query_pattern}}""`

- Display a value of a key matching a specified data type:

`reg query {{key_name}} /t {{type}}`
"
nfsstat,https://docs.microsoft.com/windows-server/administration/windows-commands/nfsstat,"





































nfsstat | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















nfsstat


10/16/2017

2 minutes to read








+1





In this article


A command-line utility that displays statistical info about the Network File System (NFS) and Remote Procedure Call (RPC) calls. Used without parameters, this command displays all of the statistical data without resetting anything.
Syntax
nfsstat [-c][-s][-n][-r][-z][-m]

Parameters



Parameter
Description




-c
Displays only the client-side NFS and RPC and NFS calls sent and rejected by the client. To display NFS or RPC information only, combine this flag with the -n or -r parameter.


-s
Displays only the server-side NFS and RPC and NFS calls sent and rejected by the server. To display NFS or RPC information only, combine this flag with the -n or -r parameter.


-m
Displays information about mount flags set by mount options, mount flags internal to the system, and other mount information.


-n
Displays NFS information for both the client and server. To display only the NFS client or server information, combine this flag with the -c or -s parameter.


-r
Displays RPC information for both the client and server. To display only the RPC client or server information, combine this flag with the -c or -s parameter.


-z
Resets the call statistics. This flag is only available to the root user and can be combined with any of the other parameters to reset particular sets of statistics after displaying them.



Examples
To display information about the number of RPC and NFS calls sent and rejected by the client, type:
nfsstat -c

To display and print the client NFS call-related information, type:
nfsstat -cn

To display RPC call-related information for both the client and server, type:
nfsstat -r

To display information about the number of RPC and NFS calls received and rejected by the server, type:
nfsstat -s

To reset all call-related information to zero on the client and server, type:
nfsstat -z

Additional References

Command-Line Syntax Key

Services for Network File System Command Reference

NFS cmdlets reference









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
NFSSTAT(1)		  BSD General Commands Manual		    NFSSTAT(1)

NAME
     nfsstat -- display NFS statistics

SYNOPSIS
     nfsstat [-cseuv] [-w wait] [-n net|user] [-m [mountpath]]

DESCRIPTION
     nfsstat displays statistics kept about NFS client and server activity,
     active user activity, exported directories, and mount information.  In
     the absence of any options, nfsstat displays NFS client and server sta-
     tistics.

     The options are as follows:

     -c      Show NFS client statistics.

     -e      Show NFS server exported directory statistics.

     -m [mountpath]
	     Show NFS mount information.

     -s      Show NFS server statistics.

     -u      Show NFS server active user statistics.

     -w wait
	     Display a shorter summary at wait second intervals.

     -n net|user
	     Show network addresses as numbers, or show users as uid numbers.
	     This option can appear multiple times.

     -v      Show additional information (if available).

OUTPUT
     The data fields that nfsstat displays for each set of statistics are:

     Client Information:
	 Statistics for NFS file system mounts.

	 RPC Counts
	     Counts of the RPC calls made to each of the NFS protocol proce-
	     dures.

	 RPC Info
	     Statistics for NFS RPC calls:

	     TimedOut
		  RPC calls that timed out, perhaps to a slow or dead server.

	     Invalid
		  Invalid RPC replies.

	     X Replies
		  RPC replies received that did not have calls pending.

	     Retries
		  RPC calls that were retried.

	     Requests
		  Total number of RPC calls made.

	 Cache Info
	     Statistics on NFS client-side cache performance:

	     Attr Hits/Misses
		  Performance of the NFS file attribute cache.

	     Lkup Hits/Misses
		  Performance of the directory name lookup cache.

	     BioR Hits/Misses
		  Performance of block cache for reads.

	     BioW Hits/Misses
		  Performance of block cache for writes.

	     BioRL Hits/Misses
		  Performance of symbolic link cache.

	     BioD Hits/Misses
		  Performance of directory cache.

	     DirE Hits/Misses
		  Performance of directory offset cache.

     Server Information:
	 Statistics for the NFS server.

	 RPC Counts
	     Counts of RPC calls on each of the NFS server's procedures are
	     recorded here.

	 Server Ret-Failed
	     RPC errors returned by the server.

	 Server Faults
	     Errors in the NFS server.

	 Server Cache Stats
	     Statistics from the NFS server's RPC duplicate request cache:

	     Inprog
		  Calls already in progress.

	     Idem
		  Cache hits for idempotent procedures.

	     Non-idem
		  Cache hits for non-idempotent procedures.

	     Misses
		  Cache Misses.

	 Server Write Gathering
	     These statistics describe the efficiency of the NFS server's
	     write gathering feature.

	     WriteOps
		  Write operations to disk.

	     WriteRPC
		  Write operations received by the server.

	     Opsaved
		  Write operations that were gathered (WriteRPC - WriteOps)

     NFS Server Exported Directory Information:
	 Statistics for each exported directory on the NFS server.

	 NFS Requests
	      Count of NFS requests processed by an exported directory.

	 Bytes Read
	      Count of bytes read from an exported directory.

	 Bytes Written
	      Count of bytes written to an exported directory.

     NFS Server Active User Information:
	 List of active NFS users and statistics on the NFS server.

	 NFS Requests
	      Count of NFS requests received from an active user.

	 Bytes Read
	      Count of bytes read by an active user.

	 Bytes Written
	      Count of bytes written by an active user.

	 Idle
	      Amount of time an active user has been idle.

	 User
	      Name (or uid if -n user was given) of active user.

	 IP Address
	      Host name (or network address if -n net was given) of client
	      machine.

     NFS Mount Information:
	 Information about the given NFS mount (or all NFS mounts).

	 The path mounted on and the server:/path that is mounted.

	 Mount arguments originally passed in to the mount.

	 Current mount parameter values and status information.

SEE ALSO
     netstat(1), iostat(8), mount_nfs(8), nfsd(8)

HISTORY
     The nfsstat command appears in 4.4BSD.

4.4BSD			       January 11, 2011 			4.4BSD
","# nfsstat

> Display or reset the number of calls made to the NFS server.
> More information: <https://docs.microsoft.com/windows-server/administration/windows-commands/nfsstat>.

- Display the recorded number of calls made to the NFS server:

`nfsstat`

- Reset the recorded number of calls made to the NFS server:

`nfsstat -z`
"
choco-feature,https://chocolatey.org/docs/commands-feature,"




Chocolatey Software | Commands Feature






































Here's how we're responding to COVID-19 plus resources to help

×













Resources
Watch videos, read documentation, and hear Chocolatey success stories from companies you trust.
View Resources






Events
Find past and upcoming webinars, workshops, and conferences. New events have recently been added!
View Events






Courses
Step-by-step guides for all things Chocolatey! Earn badges as you learn through interactive digital courses.
View Courses











Tuesday, 22 September 20203 PM BST/GMT+1 / 4 PM CEST / 9 AM Central / 10 AM Eastern

            Standardising tool sets across different Teams is not always easy... especially when different Teams have traditionally used different approaches and methodologies.
            In this webinar we will unpack the advantages of a more standard, consistent approach with Puppet & Chocolatey.
        
Register Now






Webinar Replay fromTuesday, 23 June 2020
Chocolatey Central Management now includes the premiere feature of managing endpoints through a Chocolatey-centered solution aka Deployments. We are excited to share what Deployments is all about!
Learn More
Watch Now



COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.
Find Resources






Chocolatey for Business Feature Video Series

            In this video series, come take a tour of the many features available in our Chocolatey for Business offering.
            Many organizations choose Chocolatey for Business when they want to scale out their solution across thousands of nodes, deploy rapidly and reliably every time,
            mitigate risks with a greatly-simplified patching workflow, and access a Support Team that will guide you on your automation journey.
        
Watch the Series

































id:searchValue search by id only
tag:searchValue search by tags













Overview




 Go Back
Overview




Why Chocolatey?
Chocolatey is a software management solution unlike anything else you've ever experienced on Windows. Chocolatey brings the concepts of true package management to allow you to version things, manage dependencies and installation order, better inventory management, and other features.

How Chocolatey Works




Use Cases
Server
Desktop
Cloud / Containers
Integrations




Customer Stories
Puppet
Yelp
CME Group







Product




 Go Back
Product




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.


Pro Edition
Pro is a personal, named license that grants having licensed versions of Chocolatey on up to 8 machines and provides the ultimate Chocolatey experience!


Open Source
Chocolatey has the largest online registry of Windows packages. Learn how Open Source Chocolatey can support your next project.






Compare Editions
Learn the difference between the Chocolatey Editions and what will fit your needs the best.

Pricing
Try Chocolatey for Business Free

Purchase
I'm ready to get started now!

Support





Events
Find past and upcoming webinars, workshops, and conferences.








Solutions




 Go Back
Solutions




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.






Self-Service Anywhere

                                                Chocolatey provides a unique approach to managing your end-user software (desktops / laptops) and can be combined with your existing solutions.
                                                Chocolatey for Business (C4B) enables better security, enhanced visibility with centralized reporting, and a self-service GUI. Self-Service Anywhere allows non-administrators to easily access and manage IT approved software from the office, from home, or anywhere they have an internet connection.
                                            






Quick Deployment Environment (QDE)

                                                The Quick Deployment Environment (QDE) provides a single virtual machine appliance to be imported into your hypervisor-of-choice, which contains most of the various components of a Chocolatey organizational solution. Deploy recommended architecture in 2-3 hours.
                                            








Community




 Go Back
Community




Community Packages
Search the largest online registry of Windows packages. Chocolatey packages encapsulate everything required to manage a particular piece of software into one deployment artifact by wrapping installers, executables, zips, and scripts into a compiled package file.





Community Resources
Chocolatey on GitHub
Blog





Events
Find past and upcoming webinars, workshops, and conferences.








Learn




 Go Back
Learn




Install Chocolatey
Get step-by-step instructions on how to install Chocolatey.


Getting Started Course
New to Chocolatey? Learn the requirements and how to get Chocolatey up and running in no time!





Resource Library
Docs
Videos
Case Studies
Courses
Media Kit





Events
Find past and upcoming webinars, workshops, and conferences.


COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.


Support
Need help? Read our Support FAQ to find out the next steps.

Blog
Newsletter







Partners




 Go Back
Partners



Overview
Become a Partner




Technology Partners
Resellers







About




 Go Back
About




About Chocolatey
Chocolatey Software is focused on helping our community, customers, and partners with solutions that help fill the gaps that are often ignored. We offer a simple, pragmatic, and open approach to software management.





Careers
Contact







Install Now
Install Now












Videos





Featured Series





Success Stories





Case Studies





Docs





Blog










Documentation Table of Contents


















id:searchValue search by id only
tag:searchValue search by tags





Docs Home
Why Chocolatey?
Security

Features



Free


Create your own packages
Host packages internally
Integrates with everything
Package Shims
Custom Package Templates
Package Extensions




Paid


Self-Service / Background Mode (C4B)
Chocolatey Central Management (C4B)
Package Internalizer (C4B)
Package Builder (C4B)
Package Audit (C4B)
Branding Chocolatey Applications (C4B)
Runtime Malware Protection (Pro+)
Download CDN Cache (Pro+)
Package Reducer (Pro+)
Ubiquitous Install Directory Option (Pro+)
Package Throttle (Pro+)
Package Synchronizer (Pro+ Auto / C4B Sync Command)
Windows Service Management PowerShell Functions (C4B)





General


Release Notes
Licensed Release Notes
Troubleshooting
FAQs
Chocolatey.org Moderation
Chocolatey.org Packages Disclaimer
Software Vendor?


Usage


How to install
How to install licensed edition
Configuration / chocolatey.config
How to uninstall
Getting Started
Proxy Settings

Commands


Passing args to choco
Complete Reference
List / Search
Info
Install
Pin
Outdated
Upgrade
Uninstall
Config
Source / Sources
Feature
Download





Creating Packages


Create Packages
Quick Start

Commands


New
Pack
Apikey
Push




PowerShell References


Function and Variable Reference
Install-ChocolateyPackage
Install-ChocolateyZipPackage
Install-ChocolateyPowershellCommand
Install-ChocolateyVsixPackage
Get-ChocolateyWebFile
Install-ChocolateyInstallPackage



Automatic Packaging


How To's


Use Chocolatey w/Proxy Server
Change Download Cache Location aka Don't use TEMP for downloads
Install/Upgrade a Package w/out running install scripts
Request Package Fixes/Updates
Manually Recompile Packages, Embedding/Internalizing Remote Resources
Request Package
Maintain Packages for My Software
Become a Maintainer
Take Over Package Maintenance Exclusively
Parse Package Parameters
Mount Iso
Create Custom Package Templates
Extend Chocolatey With PowerShell Modules (extensions)
Deprecate a Package
Install licensed edition
Host Your Own Package Repository Server
Set up the Chocolatey.Server
Set up Chocolatey for internal/organizational use
Automate Package Internalizer (MSP/C4B)
C4B Quick Start Guide


Chocolatey GUI


Chocolatey GUI Overview
Chocolatey GUI Branding
Chocolatey GUI Known Issues


Quick Deployment Environment (QDE)


QDE Overview
QDE Setup
QDE Desktop ReadMe Files
QDE SSL/TLS Setup
QDE Firewall Changes
QDE Client Setup
QDE Internet Setup

QDE v1


QDE Setup v1
QDE Desktop ReadMe Files v1
QDE SSL/TLS Setup v1
QDE Firewall Changes v1
QDE Client Setup v1





Chocolatey Central Management (CCM)


Central Management Overview
Central Management Setup
Central Management Client Setup
Central Management Upgrade
Central Management Deployments


Use Cases


Development Environment
Host on MyGet


Learning Resources


Resources
Videos
Presentations


Additional Information


Legal
History









Feature Command (choco feature)
Chocolatey will allow you to interact with features.


Usage
Examples
Exit Codes
Options and Switches


Usage
choco feature [list]|disable|enable [<options/switches>]

Examples
choco feature
choco feature list
choco feature disable -n=bob
choco feature enable -n=bob

NOTE: See scripting in how to pass arguments (choco -?) for how to
write proper scripts and integrations.
Exit Codes
Exit codes that normally result from running this command.
Normal:

0: operation was successful, no issues detected
-1 or 1: an error has occurred

If you find other exit codes that we have not yet documented, please
file a ticket so we can document it at
https://github.com/chocolatey/choco/issues/new/choose.
Options and Switches
NOTE: Options and switches apply to all items passed, so if you are
running a command like install that allows installing multiple
packages, and you use --version=1.0.0, it is going to look for and
try to install version 1.0.0 of every package passed. So please split
out multiple package calls when wanting to pass specific options.
Includes default options/switches (included below for completeness).

 -?, --help, -h
     Prints out the help menu.

 -d, --debug
     Debug - Show debug messaging.

 -v, --verbose
     Verbose - Show verbose messaging. Very verbose messaging, avoid using
       under normal circumstances.

     --trace
     Trace - Show trace messaging. Very, very verbose trace messaging. Avoid
       except when needing super low-level .NET Framework debugging. Available
       in 0.10.4+.

     --nocolor, --no-color
     No Color - Do not show colorization in logging output. This overrides
       the feature 'logWithoutColor', set to 'False'. Available in 0.10.9+.

     --acceptlicense, --accept-license
     AcceptLicense - Accept license dialogs automatically. Reserved for
       future use.

 -y, --yes, --confirm
     Confirm all prompts - Chooses affirmative answer instead of prompting.
       Implies --accept-license

 -f, --force
     Force - force the behavior. Do not use force during normal operation -
       it subverts some of the smart behavior for commands.

     --noop, --whatif, --what-if
     NoOp / WhatIf - Don't actually do anything.

 -r, --limitoutput, --limit-output
     LimitOutput - Limit the output to essential information

     --timeout, --execution-timeout=VALUE
     CommandExecutionTimeout (in seconds) - The time to allow a command to
       finish before timing out. Overrides the default execution timeout in the
       configuration of 2700 seconds. '0' for infinite starting in 0.10.4.

 -c, --cache, --cachelocation, --cache-location=VALUE
     CacheLocation - Location for download cache, defaults to %TEMP% or value
       in chocolatey.config file.

     --allowunofficial, --allow-unofficial, --allowunofficialbuild, --allow-unofficial-build
     AllowUnofficialBuild - When not using the official build you must set
       this flag for choco to continue.

     --failstderr, --failonstderr, --fail-on-stderr, --fail-on-standard-error, --fail-on-error-output
     FailOnStandardError - Fail on standard error output (stderr), typically
       received when running external commands during install providers. This
       overrides the feature failOnStandardError.

     --use-system-powershell
     UseSystemPowerShell - Execute PowerShell using an external process
       instead of the built-in PowerShell host. Should only be used when
       internal host is failing. Available in 0.9.10+.

     --no-progress
     Do Not Show Progress - Do not show download progress percentages.
       Available in 0.10.4+.

     --proxy=VALUE
     Proxy Location - Explicit proxy location. Overrides the default proxy
       location of ''. Available for config settings in 0.9.9.9+, this CLI
       option available in 0.10.4+.

     --proxy-user=VALUE
     Proxy User Name - Explicit proxy user (optional). Requires explicity
       proxy (`--proxy` or config setting). Overrides the default proxy user of
       '123'. Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-password=VALUE
     Proxy Password - Explicit proxy password (optional) to be used with
       username. Requires explicity proxy (`--proxy` or config setting) and
       user name.  Overrides the default proxy password (encrypted in settings
       if set). Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-bypass-list=VALUE
     ProxyBypassList - Comma separated list of regex locations to bypass on
       proxy. Requires explicity proxy (`--proxy` or config setting). Overrides
       the default proxy bypass list of ''. Available in 0.10.4+.

     --proxy-bypass-on-local
     Proxy Bypass On Local - Bypass proxy for local connections. Requires
       explicity proxy (`--proxy` or config setting). Overrides the default
       proxy bypass on local setting of 'True'. Available in 0.10.4+.

     --log-file=VALUE
     Log File to output to in addition to regular loggers. Available in 0.1-
       0.8+.

 -n, --name=VALUE
     Name - the name of the source. Required with actions other than list.
       Defaults to empty.


Command Reference
NOTE: This documentation has been automatically generated from choco feature -h.












Overview

About
Getting Started Guide
Why Chocolatey
How Chocolatey Works
Security
Privacy Policy
Kickstarter
Partner
Customer Stories




Product

Solution: Self-Service Anywhere
Solution: Quick Deployment Environment (QDE)
Chocolatey for Business
Pro Edition
Open Source
C4B Trial
Pricing
Support
Community Packages
Events




Learn

Resource Library
Events
COVID-19 Resources
Docs
Videos
Case Studies
Courses
Blog 
Media Kit
Sitemap




Connect

Contact Us
Support
Newsletter
Shop
Report a Bug
Status
Careers



Follow Chocolatey Software on Twitter



Follow Chocolatey Software on Facebook



Find Chocolatey Software on GitHub



Subscribe to Chocolatey Software on YouTube









© 2020 Chocolatey Software, Inc.
Deployed from 16d5ee0bdb. You are on web.4. Page generated 25 Sep 2020 08:27:37 +00:00.





Chocolatey.org uses cookies to enhance the user experience of the site.

        I accept
    

        I accept
    









",,"# choco feature

> Interact with features with Chocolatey.
> More information: <https://chocolatey.org/docs/commands-feature>.

- Display a list of available features:

`choco feature list`

- Enable a feature:

`choco feature enable --name {{name}}`

- Disable a feature:

`choco feature disable --name {{name}}`
"
taskkill,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/taskkill,"





































taskkill | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















taskkill


10/16/2017

3 minutes to read








+4





In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

Ends one or more tasks or processes. Processes can be ended by process ID or image name. taskkill replaces the kill tool.
For examples of how to use this command, see Examples.
Syntax
taskkill [/s <computer> [/u [<Domain>\]<UserName> [/p [<Password>]]]] {[/fi <Filter>] [...] [/pid <ProcessID> | /im <ImageName>]} [/f] [/t]

Parameters



Parameter
Description




/s <computer>
Specifies the name or IP address of a remote computer (do not use backslashes). The default is the local computer.


/u <Domain>\<UserName>
Runs the command with the account permissions of the user who is specified by UserName or Domain\UserName. /u can be specified only if /s is specified. The default is the permissions of the user who is currently logged on to the computer that is issuing the command.


/p <Password>
Specifies the password of the user account that is specified in the /u parameter.


/fi <Filter>
Applies a filter to select a set of tasks. You can use more than one filter or use the wildcard character (\*) to specify all tasks or image names. See the following table for valid filter names, operators, and values.


/pid <ProcessID>
Specifies the process ID of the process to be terminated.


/im <ImageName>
Specifies the image name of the process to be terminated. Use the wildcard character (\*) to specify all image names.


/f
Specifies that processes be forcefully terminated. This parameter is ignored for remote processes; all remote processes are forcefully terminated.


/t
Terminates the specified process and any child processes started by it.



Filter names, operators, and values



Filter Name
Valid Operators
Valid Value(s)




STATUS
eq, ne
RUNNING | NOT RESPONDING | UNKNOWN


IMAGENAME
eq, ne
Image name


PID
eq, ne, gt, lt, ge, le
PID value


SESSION
eq, ne, gt, lt, ge, le
Session number


CPUtime
eq, ne, gt, lt, ge, le
CPU time in the format HH:MM:SS, where MM and SS are between 0 and 59 and HH is any unsigned number


MEMUSAGE
eq, ne, gt, lt, ge, le
Memory usage in KB


USERNAME
eq, ne
Any valid user name (User or Domain\User)


SERVICES
eq, ne
Service name


WINDOWTITLE
eq, ne
Window title


MODULES
eq, ne
DLL name



Remarks

The WINDOWTITLE and STATUS filters are not supported when a remote system is specified.
The wildcard character (\) is accepted for the */im option only when a filter is applied.
Termination of remote processes is always carried out forcefully, regardless of whether the /f option is specified.
Supplying a computer name to the hostname filter causes a shutdown and all processes are stopped.
You can use tasklist to determine the process ID (PID) for the process to be terminated.

Examples
To end the processes with process IDs 1230, 1241, and 1253, type:
taskkill /pid 1230 /pid 1241 /pid 1253

To forcefully end the process Notepad.exe if it was started by the system, type:
taskkill /f /fi USERNAME eq NT AUTHORITY\SYSTEM /im notepad.exe

To end all processes on the remote computer Srvmain with an image name beginning with note, while using the credentials for the user account Hiropln, type:
taskkill /s srvmain /u maindom\hiropln /p p@ssW23 /fi IMAGENAME eq note* /im *

To end the process with the process ID 2134 and any child processes that it started, but only if those processes were started by the Administrator account, type:
taskkill /pid 2134 /t /fi username eq administrator

To end all processes that have a process ID greater than or equal to 1000, regardless of their image names, type:
taskkill /f /fi PID ge 1000 /im *

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# taskkill

> Terminate a process by its process id or name.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/taskkill>.

- Terminate a process by its id:

`taskkill /pid {{process_id}}`

- Terminate a process by its name:

`taskkill /im {{process_name}}`

- Forcefully terminate a specified process:

`taskkill /pid {{process_id}} /f`

- Terminate a process and its child processes:

`taskkill /im {{process_name}} /t`

- Terminate a process on a remote machine:

`taskkill /pid {{process_id}} /s {{remote_name}}`

- Display information about the usage of the command:

`taskkill /?`
"
choco-upgrade,https://chocolatey.org/docs/commands-upgrade,"




Chocolatey Software | Commands Upgrade






































Here's how we're responding to COVID-19 plus resources to help

×













Resources
Watch videos, read documentation, and hear Chocolatey success stories from companies you trust.
View Resources






Events
Find past and upcoming webinars, workshops, and conferences. New events have recently been added!
View Events






Courses
Step-by-step guides for all things Chocolatey! Earn badges as you learn through interactive digital courses.
View Courses











Tuesday, 22 September 20203 PM BST/GMT+1 / 4 PM CEST / 9 AM Central / 10 AM Eastern

            Standardising tool sets across different Teams is not always easy... especially when different Teams have traditionally used different approaches and methodologies.
            In this webinar we will unpack the advantages of a more standard, consistent approach with Puppet & Chocolatey.
        
Register Now






Webinar Replay fromTuesday, 23 June 2020
Chocolatey Central Management now includes the premiere feature of managing endpoints through a Chocolatey-centered solution aka Deployments. We are excited to share what Deployments is all about!
Learn More
Watch Now



COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.
Find Resources






Chocolatey for Business Feature Video Series

            In this video series, come take a tour of the many features available in our Chocolatey for Business offering.
            Many organizations choose Chocolatey for Business when they want to scale out their solution across thousands of nodes, deploy rapidly and reliably every time,
            mitigate risks with a greatly-simplified patching workflow, and access a Support Team that will guide you on your automation journey.
        
Watch the Series

































id:searchValue search by id only
tag:searchValue search by tags













Overview




 Go Back
Overview




Why Chocolatey?
Chocolatey is a software management solution unlike anything else you've ever experienced on Windows. Chocolatey brings the concepts of true package management to allow you to version things, manage dependencies and installation order, better inventory management, and other features.

How Chocolatey Works




Use Cases
Server
Desktop
Cloud / Containers
Integrations




Customer Stories
Puppet
Yelp
CME Group







Product




 Go Back
Product




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.


Pro Edition
Pro is a personal, named license that grants having licensed versions of Chocolatey on up to 8 machines and provides the ultimate Chocolatey experience!


Open Source
Chocolatey has the largest online registry of Windows packages. Learn how Open Source Chocolatey can support your next project.






Compare Editions
Learn the difference between the Chocolatey Editions and what will fit your needs the best.

Pricing
Try Chocolatey for Business Free

Purchase
I'm ready to get started now!

Support





Events
Find past and upcoming webinars, workshops, and conferences.








Solutions




 Go Back
Solutions




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.






Self-Service Anywhere

                                                Chocolatey provides a unique approach to managing your end-user software (desktops / laptops) and can be combined with your existing solutions.
                                                Chocolatey for Business (C4B) enables better security, enhanced visibility with centralized reporting, and a self-service GUI. Self-Service Anywhere allows non-administrators to easily access and manage IT approved software from the office, from home, or anywhere they have an internet connection.
                                            






Quick Deployment Environment (QDE)

                                                The Quick Deployment Environment (QDE) provides a single virtual machine appliance to be imported into your hypervisor-of-choice, which contains most of the various components of a Chocolatey organizational solution. Deploy recommended architecture in 2-3 hours.
                                            








Community




 Go Back
Community




Community Packages
Search the largest online registry of Windows packages. Chocolatey packages encapsulate everything required to manage a particular piece of software into one deployment artifact by wrapping installers, executables, zips, and scripts into a compiled package file.





Community Resources
Chocolatey on GitHub
Blog





Events
Find past and upcoming webinars, workshops, and conferences.








Learn




 Go Back
Learn




Install Chocolatey
Get step-by-step instructions on how to install Chocolatey.


Getting Started Course
New to Chocolatey? Learn the requirements and how to get Chocolatey up and running in no time!





Resource Library
Docs
Videos
Case Studies
Courses
Media Kit





Events
Find past and upcoming webinars, workshops, and conferences.


COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.


Support
Need help? Read our Support FAQ to find out the next steps.

Blog
Newsletter







Partners




 Go Back
Partners



Overview
Become a Partner




Technology Partners
Resellers







About




 Go Back
About




About Chocolatey
Chocolatey Software is focused on helping our community, customers, and partners with solutions that help fill the gaps that are often ignored. We offer a simple, pragmatic, and open approach to software management.





Careers
Contact







Install Now
Install Now












Videos





Featured Series





Success Stories





Case Studies





Docs





Blog










Documentation Table of Contents


















id:searchValue search by id only
tag:searchValue search by tags





Docs Home
Why Chocolatey?
Security

Features



Free


Create your own packages
Host packages internally
Integrates with everything
Package Shims
Custom Package Templates
Package Extensions




Paid


Self-Service / Background Mode (C4B)
Chocolatey Central Management (C4B)
Package Internalizer (C4B)
Package Builder (C4B)
Package Audit (C4B)
Branding Chocolatey Applications (C4B)
Runtime Malware Protection (Pro+)
Download CDN Cache (Pro+)
Package Reducer (Pro+)
Ubiquitous Install Directory Option (Pro+)
Package Throttle (Pro+)
Package Synchronizer (Pro+ Auto / C4B Sync Command)
Windows Service Management PowerShell Functions (C4B)





General


Release Notes
Licensed Release Notes
Troubleshooting
FAQs
Chocolatey.org Moderation
Chocolatey.org Packages Disclaimer
Software Vendor?


Usage


How to install
How to install licensed edition
Configuration / chocolatey.config
How to uninstall
Getting Started
Proxy Settings

Commands


Passing args to choco
Complete Reference
List / Search
Info
Install
Pin
Outdated
Upgrade
Uninstall
Config
Source / Sources
Feature
Download





Creating Packages


Create Packages
Quick Start

Commands


New
Pack
Apikey
Push




PowerShell References


Function and Variable Reference
Install-ChocolateyPackage
Install-ChocolateyZipPackage
Install-ChocolateyPowershellCommand
Install-ChocolateyVsixPackage
Get-ChocolateyWebFile
Install-ChocolateyInstallPackage



Automatic Packaging


How To's


Use Chocolatey w/Proxy Server
Change Download Cache Location aka Don't use TEMP for downloads
Install/Upgrade a Package w/out running install scripts
Request Package Fixes/Updates
Manually Recompile Packages, Embedding/Internalizing Remote Resources
Request Package
Maintain Packages for My Software
Become a Maintainer
Take Over Package Maintenance Exclusively
Parse Package Parameters
Mount Iso
Create Custom Package Templates
Extend Chocolatey With PowerShell Modules (extensions)
Deprecate a Package
Install licensed edition
Host Your Own Package Repository Server
Set up the Chocolatey.Server
Set up Chocolatey for internal/organizational use
Automate Package Internalizer (MSP/C4B)
C4B Quick Start Guide


Chocolatey GUI


Chocolatey GUI Overview
Chocolatey GUI Branding
Chocolatey GUI Known Issues


Quick Deployment Environment (QDE)


QDE Overview
QDE Setup
QDE Desktop ReadMe Files
QDE SSL/TLS Setup
QDE Firewall Changes
QDE Client Setup
QDE Internet Setup

QDE v1


QDE Setup v1
QDE Desktop ReadMe Files v1
QDE SSL/TLS Setup v1
QDE Firewall Changes v1
QDE Client Setup v1





Chocolatey Central Management (CCM)


Central Management Overview
Central Management Setup
Central Management Client Setup
Central Management Upgrade
Central Management Deployments


Use Cases


Development Environment
Host on MyGet


Learning Resources


Resources
Videos
Presentations


Additional Information


Legal
History









Upgrade Command (choco upgrade)
Upgrades a package or a list of packages. Some may prefer to use cup
as a shortcut for choco upgrade. If you do not have a package
installed, upgrade will install it.
NOTE: 100% compatible with older Chocolatey client (0.9.8.x and below)
with options and switches. Add -y for previous behavior with no
prompt. In most cases you can still pass options and switches with one
dash (-). For more details, see how to pass arguments (choco -?).


Usage
Examples
Exit Codes
See It In Action
Options and Switches


Usage
choco upgrade <pkg|all> [<pkg2> <pkgN>] [<options/switches>]
cup <pkg|all> [<pkg2> <pkgN>] [<options/switches>]

NOTE: all is a special package keyword that will allow you to upgrade
all currently installed packages.
Skip upgrading certain packages with choco pin or with the option
--except.
NOTE: Chocolatey Pro / Business automatically synchronizes with
Programs and Features, ensuring automatically updating apps' versions
(like Chrome) are up to date in Chocolatey's repository.
Examples
choco upgrade chocolatey
choco upgrade notepadplusplus googlechrome atom 7zip
choco upgrade notepadplusplus googlechrome atom 7zip -dvfy
choco upgrade git -y --params=""'/GitAndUnixToolsOnPath /NoAutoCrlf'""
choco upgrade git -y --params=""'/GitAndUnixToolsOnPath /NoAutoCrlf'"" --install-args=""'/DIR=C:\git'""
# Params are package parameters, passed to the package
# Install args are installer arguments, appended to the silentArgs
#  in the package for the installer itself
choco upgrade nodejs.install --version 0.10.35
choco upgrade git -s ""'https://somewhere/out/there'""
choco upgrade git -s ""'https://somewhere/protected'"" -u user -p pass
choco upgrade all
choco upgrade all --except=""'skype,conemu'""

NOTE: See scripting in how to pass arguments (choco -?) for how to
write proper scripts and integrations.
Exit Codes
Exit codes that normally result from running this command.
Normal:

0: operation was successful, no issues detected
-1 or 1: an error has occurred

Package Exit Codes:

1641: success, reboot initiated
3010: success, reboot required
other (not listed): likely an error has occurred

In addition to normal exit codes, packages are allowed to exit
with their own codes when the feature 'usePackageExitCodes' is
turned on.  Uninstall command has additional valid exit codes.
Available in v0.9.10+.
Reboot Exit Codes:

350: pending reboot detected, no action has occurred
1604: install suspended, incomplete

In addition to the above exit codes, you may also see reboot exit codes
when the feature 'exitOnRebootDetected' is turned on. It typically requires
the feature 'usePackageExitCodes' to also be turned on to work properly.
Available in v0.10.12+.
See It In Action

Options and Switches
NOTE: Options and switches apply to all items passed, so if you are
running a command like install that allows installing multiple
packages, and you use --version=1.0.0, it is going to look for and
try to install version 1.0.0 of every package passed. So please split
out multiple package calls when wanting to pass specific options.
Includes default options/switches (included below for completeness).



 -?, --help, -h
     Prints out the help menu.

 -d, --debug
     Debug - Show debug messaging.

 -v, --verbose
     Verbose - Show verbose messaging. Very verbose messaging, avoid using
       under normal circumstances.

     --trace
     Trace - Show trace messaging. Very, very verbose trace messaging. Avoid
       except when needing super low-level .NET Framework debugging. Available
       in 0.10.4+.

     --nocolor, --no-color
     No Color - Do not show colorization in logging output. This overrides
       the feature 'logWithoutColor', set to 'False'. Available in 0.10.9+.

     --acceptlicense, --accept-license
     AcceptLicense - Accept license dialogs automatically. Reserved for
       future use.

 -y, --yes, --confirm
     Confirm all prompts - Chooses affirmative answer instead of prompting.
       Implies --accept-license

 -f, --force
     Force - force the behavior. Do not use force during normal operation -
       it subverts some of the smart behavior for commands.

     --noop, --whatif, --what-if
     NoOp / WhatIf - Don't actually do anything.

 -r, --limitoutput, --limit-output
     LimitOutput - Limit the output to essential information

     --timeout, --execution-timeout=VALUE
     CommandExecutionTimeout (in seconds) - The time to allow a command to
       finish before timing out. Overrides the default execution timeout in the
       configuration of 2700 seconds. '0' for infinite starting in 0.10.4.

 -c, --cache, --cachelocation, --cache-location=VALUE
     CacheLocation - Location for download cache, defaults to %TEMP% or value
       in chocolatey.config file.

     --allowunofficial, --allow-unofficial, --allowunofficialbuild, --allow-unofficial-build
     AllowUnofficialBuild - When not using the official build you must set
       this flag for choco to continue.

     --failstderr, --failonstderr, --fail-on-stderr, --fail-on-standard-error, --fail-on-error-output
     FailOnStandardError - Fail on standard error output (stderr), typically
       received when running external commands during install providers. This
       overrides the feature failOnStandardError.

     --use-system-powershell
     UseSystemPowerShell - Execute PowerShell using an external process
       instead of the built-in PowerShell host. Should only be used when
       internal host is failing. Available in 0.9.10+.

     --no-progress
     Do Not Show Progress - Do not show download progress percentages.
       Available in 0.10.4+.

     --proxy=VALUE
     Proxy Location - Explicit proxy location. Overrides the default proxy
       location of ''. Available for config settings in 0.9.9.9+, this CLI
       option available in 0.10.4+.

     --proxy-user=VALUE
     Proxy User Name - Explicit proxy user (optional). Requires explicity
       proxy (`--proxy` or config setting). Overrides the default proxy user of
       '123'. Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-password=VALUE
     Proxy Password - Explicit proxy password (optional) to be used with
       username. Requires explicity proxy (`--proxy` or config setting) and
       user name.  Overrides the default proxy password (encrypted in settings
       if set). Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-bypass-list=VALUE
     ProxyBypassList - Comma separated list of regex locations to bypass on
       proxy. Requires explicity proxy (`--proxy` or config setting). Overrides
       the default proxy bypass list of ''. Available in 0.10.4+.

     --proxy-bypass-on-local
     Proxy Bypass On Local - Bypass proxy for local connections. Requires
       explicity proxy (`--proxy` or config setting). Overrides the default
       proxy bypass on local setting of 'True'. Available in 0.10.4+.

     --log-file=VALUE
     Log File to output to in addition to regular loggers. Available in 0.1-
       0.8+.

 -s, --source=VALUE
     Source - The source to find the package(s) to install. Special sources
       include: ruby, webpi, cygwin, windowsfeatures, and python. To specify
       more than one source, pass it with a semi-colon separating the values (-
       e.g. ""'source1;source2'""). Defaults to default feeds.

     --version=VALUE
     Version - A specific version to install. Defaults to unspecified.

     --pre, --prerelease
     Prerelease - Include Prereleases? Defaults to false.

     --x86, --forcex86
     ForceX86 - Force x86 (32bit) installation on 64 bit systems. Defaults to
       false.

     --ia, --installargs, --installarguments, --install-arguments=VALUE
     InstallArguments - Install Arguments to pass to the native installer in
       the package. Defaults to unspecified.

 -o, --override, --overrideargs, --overridearguments, --override-arguments
     OverrideArguments - Should install arguments be used exclusively without
       appending to current package passed arguments? Defaults to false.

     --notsilent, --not-silent
     NotSilent - Do not install this silently. Defaults to false.

     --params, --parameters, --pkgparameters, --packageparameters, --package-parameters=VALUE
     PackageParameters - Parameters to pass to the package. Defaults to
       unspecified.

     --argsglobal, --args-global, --installargsglobal, --install-args-global, --applyargstodependencies, --apply-args-to-dependencies, --apply-install-arguments-to-dependencies
     Apply Install Arguments To Dependencies  - Should install arguments be
       applied to dependent packages? Defaults to false.

     --paramsglobal, --params-global, --packageparametersglobal, --package-parameters-global, --applyparamstodependencies, --apply-params-to-dependencies, --apply-package-parameters-to-dependencies
     Apply Package Parameters To Dependencies  - Should package parameters be
       applied to dependent packages? Defaults to false.

     --allowdowngrade, --allow-downgrade
     AllowDowngrade - Should an attempt at downgrading be allowed? Defaults
       to false.

 -m, --sxs, --sidebyside, --side-by-side, --allowmultiple, --allow-multiple, --allowmultipleversions, --allow-multiple-versions
     AllowMultipleVersions - Should multiple versions of a package be
       installed? Defaults to false.

 -i, --ignoredependencies, --ignore-dependencies
     IgnoreDependencies - Ignore dependencies when upgrading package(s).
       Defaults to false.

 -n, --skippowershell, --skip-powershell, --skipscripts, --skip-scripts, --skip-automation-scripts
     Skip Powershell - Do not run chocolateyInstall.ps1. Defaults to false.

     --failonunfound, --fail-on-unfound
     Fail On Unfound Packages - If a package is not found in sources
       specified, fail instead of warn.

     --ignore-unfound
     Ignore Unfound Packages - Ignore packages that are not found on the
       sources used (or the defaults). Overrides the default feature
       'ignoreUnfoundPackagesOnUpgradeOutdated' set to 'False'. Available in -
       0.10.9+.

     --failonnotinstalled, --fail-on-not-installed
     Fail On Non-installed Packages - If a package is not already installed,
       fail instead of installing.

 -u, --user=VALUE
     User - used with authenticated feeds. Defaults to empty.

 -p, --password=VALUE
     Password - the user's password to the source. Defaults to empty.

     --cert=VALUE
     Client certificate - PFX pathname for an x509 authenticated feeds.
       Defaults to empty. Available in 0.9.10+.

     --cp, --certpassword=VALUE
     Certificate Password - the client certificate's password to the source.
       Defaults to empty. Available in 0.9.10+.

     --ignorechecksum, --ignore-checksum, --ignorechecksums, --ignore-checksums
     IgnoreChecksums - Ignore checksums provided by the package. Overrides
       the default feature 'checksumFiles' set to 'True'. Available in 0.9.9.9+.

     --allowemptychecksum, --allowemptychecksums, --allow-empty-checksums
     Allow Empty Checksums - Allow packages to have empty/missing checksums
       for downloaded resources from non-secure locations (HTTP, FTP). Use this
       switch is not recommended if using sources that download resources from
       the internet. Overrides the default feature 'allowEmptyChecksums' set to
       'False'. Available in 0.10.0+.

     --allowemptychecksumsecure, --allowemptychecksumssecure, --allow-empty-checksums-secure
     Allow Empty Checksums Secure - Allow packages to have empty checksums
       for downloaded resources from secure locations (HTTPS). Overrides the
       default feature 'allowEmptyChecksumsSecure' set to 'True'. Available in
       0.10.0+.

     --requirechecksum, --requirechecksums, --require-checksums
     Require Checksums - Requires packages to have checksums for downloaded
       resources (both non-secure and secure). Overrides the default feature
       'allowEmptyChecksums' set to 'False' and 'allowEmptyChecksumsSecure' set
       to 'True'. Available in 0.10.0+.

     --checksum, --downloadchecksum, --download-checksum=VALUE
     Download Checksum - a user provided checksum for downloaded resources
       for the package. Overrides the package checksum (if it has one).
       Defaults to empty. Available in 0.10.0+.

     --checksum64, --checksumx64, --downloadchecksumx64, --download-checksum-x64=VALUE
     Download Checksum 64bit - a user provided checksum for 64bit downloaded
       resources for the package. Overrides the package 64-bit checksum (if it
       has one). Defaults to same as Download Checksum. Available in 0.10.0+.

     --checksumtype, --checksum-type, --downloadchecksumtype, --download-checksum-type=VALUE
     Download Checksum Type - a user provided checksum type. Overrides the
       package checksum type (if it has one). Used in conjunction with Download
       Checksum. Available values are 'md5', 'sha1', 'sha256' or 'sha512'.
       Defaults to 'md5'. Available in 0.10.0+.

     --checksumtype64, --checksumtypex64, --checksum-type-x64, --downloadchecksumtypex64, --download-checksum-type-x64=VALUE
     Download Checksum Type 64bit - a user provided checksum for 64bit
       downloaded resources for the package. Overrides the package 64-bit
       checksum (if it has one). Used in conjunction with Download Checksum
       64bit. Available values are 'md5', 'sha1', 'sha256' or 'sha512'.
       Defaults to same as Download Checksum Type. Available in 0.10.0+.

     --ignorepackagecodes, --ignorepackageexitcodes, --ignore-package-codes, --ignore-package-exit-codes
     IgnorePackageExitCodes - Exit with a 0 for success and 1 for non-succes-
       s, no matter what package scripts provide for exit codes. Overrides the
       default feature 'usePackageExitCodes' set to 'True'. Available in 0.-
       9.10+.

     --usepackagecodes, --usepackageexitcodes, --use-package-codes, --use-package-exit-codes
     UsePackageExitCodes - Package scripts can provide exit codes. Use those
       for choco's exit code when non-zero (this value can come from a
       dependency package). Chocolatey defines valid exit codes as 0, 1605,
       1614, 1641, 3010. Overrides the default feature 'usePackageExitCodes'
       set to 'True'. Available in 0.9.10+.

     --except=VALUE
     Except - a comma-separated list of package names that should not be
       upgraded when upgrading 'all'. Defaults to empty. Available in 0.9.10+.

     --stoponfirstfailure, --stop-on-first-failure, --stop-on-first-package-failure
     Stop On First Package Failure - stop running install, upgrade or
       uninstall on first package failure instead of continuing with others.
       Overrides the default feature 'stopOnFirstPackageFailure' set to 'False-
       '. Available in 0.10.4+.

     --skip-if-not-installed, --only-upgrade-installed, --skip-when-not-installed
     Skip Packages Not Installed - if a package is not installed, do not
       install it during the upgrade process. Overrides the default feature
       'skipPackageUpgradesWhenNotInstalled' set to 'False'. Available in 0.1-
       0.12+.

     --install-if-not-installed
     Install Missing Packages When Not Installed - if a package is not
       installed, install it as part of running upgrade (typically default
       behavior). Overrides the default feature
       'skipPackageUpgradesWhenNotInstalled' set to 'False'. Available in 0.1-
       0.12+.

     --exclude-pre, --exclude-prerelease, --exclude-prereleases
     Exclude Prerelease - Should prerelease be ignored for upgrades? Will be
       ignored if you pass `--pre`. Available in 0.10.4+.

     --userememberedargs, --userememberedarguments, --userememberedoptions, --use-remembered-args, --use-remembered-arguments, --use-remembered-options
     Use Remembered Options for Upgrade - use the arguments and options used
       during install for upgrade. Does not override arguments being passed at
       runtime. Overrides the default feature
       'useRememberedArgumentsForUpgrades' set to 'False'. Available in 0.10.4+.

     --ignorerememberedargs, --ignorerememberedarguments, --ignorerememberedoptions, --ignore-remembered-args, --ignore-remembered-arguments, --ignore-remembered-options
     Ignore Remembered Options for Upgrade - ignore the arguments and options
       used during install for upgrade. Overrides the default feature
       'useRememberedArgumentsForUpgrades' set to 'False'. Available in 0.10.4+.

     --exitwhenrebootdetected, --exit-when-reboot-detected
     Exit When Reboot Detected - Stop running install, upgrade, or uninstall
       when a reboot request is detected. Requires 'usePackageExitCodes'
       feature to be turned on. Will exit with either 350 or 1604.  Overrides
       the default feature 'exitOnRebootDetected' set to 'False'.  Available in
       0.10.12+.

     --ignoredetectedreboot, --ignore-detected-reboot
     Ignore Detected Reboot - Ignore any detected reboots if found. Overrides
       the default feature 'exitOnRebootDetected' set to 'False'.  Available in
       0.10.12+.

     --sdc, --skipdownloadcache, --skip-download-cache
     Skip Download Cache - Use the original download even if a private CDN
       cache is available for a package. Overrides the default feature
       'downloadCache' set to 'True'. Available in 0.9.10+. [Licensed editions](https://chocolatey.org/compare)
       only. See https://chocolatey.org/docs/features-private-cdn

     --dc, --downloadcache, --download-cache, --use-download-cache
     Use Download Cache - Use private CDN cache if available for a package.
       Overrides the default feature 'downloadCache' set to 'True'. Available
       in 0.9.10+. [Licensed editions](https://chocolatey.org/compare) only. See https://chocolate-
       y.org/docs/features-private-cdn

     --svc, --skipvirus, --skip-virus, --skipviruscheck, --skip-virus-check
     Skip Virus Check - Skip the virus check for downloaded files on this ru-
       n. Overrides the default feature 'virusCheck' set to 'True'. Available
       in 0.9.10+. [Licensed editions](https://chocolatey.org/compare) only. See https://chocolate-
       y.org/docs/features-virus-check

     --virus, --viruscheck, --virus-check
     Virus Check - check downloaded files for viruses. Overrides the default
       feature 'virusCheck' set to 'True'. Available in 0.9.10+. Licensed
       editions only. See https://chocolatey.org/docs/features-virus-check

     --viruspositivesmin, --virus-positives-minimum=VALUE
     Virus Check Minimum Scan Result Positives - the minimum number of scan
       result positives required to flag a package. Used when virusScannerType
       is VirusTotal. Overrides the default configuration value
       'virusCheckMinimumPositives' set to '5'. Available in 0.9.10+. Licensed
       editions only. See https://chocolatey.org/docs/features-virus-check

     --install-arguments-sensitive=VALUE
     InstallArgumentsSensitive - Install Arguments to pass to the native
       installer in the package that are sensitive and you do not want logged.
       Defaults to unspecified. Available in 0.10.1+. [Licensed editions](https://chocolatey.org/compare) only.

     --package-parameters-sensitive=VALUE
     PackageParametersSensitive - Package Parameters to pass the package that
       are sensitive and you do not want logged. Defaults to unspecified.
       Available in 0.10.1+. [Licensed editions](https://chocolatey.org/compare) only.

     --dir, --directory, --installdir, --installdirectory, --install-dir, --install-directory=VALUE
     Install Directory Override - Override the default installation director-
       y. Chocolatey will automatically determine the type of installer and
       pass the appropriate arguments to override the install directory. The
       package must use Chocolatey install helpers and be installing an
       installer for software. Available in 0.9.10+. [Licensed editions](https://chocolatey.org/compare) only.
       See https://chocolatey.org/docs/features-install-directory-override

     --bps, --maxdownloadrate, --max-download-rate, --maxdownloadbitspersecond, --max-download-bits-per-second, --maximumdownloadbitspersecond, --maximum-download-bits-per-second=VALUE
     Maximum Download Rate Bits Per Second - The maximum download rate in
       bits per second. '0' or empty means no maximum. A number means that will
       be the maximum download rate in bps. Defaults to config setting of '0'.
       Available in [licensed editions](https://chocolatey.org/compare) v1.10+ only. See https://chocolate-
       y.org/docs/features-package-throttle

     --reduce, --reduce-package-size, --deflate, --deflate-package-size
     Reducer Installed Package Size (Package Reducer) - Reduce size of the
       nupkg file to very small and remove extracted archives and installers.
       Overrides the default feature 'reduceInstalledPackageSpaceUsage' set to
       'True'. [Licensed editions](https://chocolatey.org/compare) only (version 1.12.0+). See https://chocolate-
       y.org/docs/features-package-reducer

     --no-reduce, --no-reduce-package-size, --no-deflate, --no-deflate-package-size
     Do Not Reduce Installed Package Size - Leave the nupkg and files alone
       in the package. Overrides the default feature
       'reduceInstalledPackageSpaceUsage' set to 'True'. [Licensed editions](https://chocolatey.org/compare) only
       (version 1.12.0+). See https://chocolatey.org/docs/features-package-
       reducer

     --reduce-nupkg-only, --deflate-nupkg-only
     Reduce Only Nupkg File Size - reduce only the size of nupkg file when
       using Package Reducer. Overrides the default feature
       'reduceOnlyNupkgSize' set to 'False'. [Licensed editions](https://chocolatey.org/compare) only (version -
       1.12.0+). See https://chocolatey.org/docs/features-package-reducer


Command Reference
NOTE: This documentation has been automatically generated from choco upgrade -h.












Overview

About
Getting Started Guide
Why Chocolatey
How Chocolatey Works
Security
Privacy Policy
Kickstarter
Partner
Customer Stories




Product

Solution: Self-Service Anywhere
Solution: Quick Deployment Environment (QDE)
Chocolatey for Business
Pro Edition
Open Source
C4B Trial
Pricing
Support
Community Packages
Events




Learn

Resource Library
Events
COVID-19 Resources
Docs
Videos
Case Studies
Courses
Blog 
Media Kit
Sitemap




Connect

Contact Us
Support
Newsletter
Shop
Report a Bug
Status
Careers



Follow Chocolatey Software on Twitter



Follow Chocolatey Software on Facebook



Find Chocolatey Software on GitHub



Subscribe to Chocolatey Software on YouTube









© 2020 Chocolatey Software, Inc.
Deployed from 16d5ee0bdb. You are on web.1. Page generated 25 Sep 2020 08:27:38 +00:00.





Chocolatey.org uses cookies to enhance the user experience of the site.

        I accept
    

        I accept
    









",,"# choco upgrade

> Upgrade one or more packages with Chocolatey.
> More information: <https://chocolatey.org/docs/commands-upgrade>.

- Upgrade one or more space-separated packages:

`choco upgrade {{package(s)}}`

- Upgrade to a specific version of a package:

`choco upgrade {{package}} --version {{version}}`

- Upgrade all packages:

`choco upgrade all`

- Upgrade all except specified comma-separated packages:

`choco upgrade all --except ""{{package(s)}}""`

- Confirm all prompts automatically:

`choco upgrade {{package}} --yes`

- Specify a custom source to receive packages from:

`choco upgrade {{package}} --source {{source_url|alias}}`

- Provide a username and password for authentication:

`choco upgrade {{package}} --user {{username}} --password {{password}}`
"
repair-bde,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/repair-bde,"





































repair-bde | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















repair-bde


10/16/2017

3 minutes to read








+1





In this article


Attempts to reconstruct critical parts of a severely damaged drive and salvage recoverable data if the drive was encrypted by using BitLocker and if it has a valid recovery password or recovery key for decryption.

Important
If the BitLocker metadata data on the drive is corrupt, you must be able to supply a backup key package in addition to the recovery password or recovery key. If you used the default key back up setting for Active Directory Domain Services, your key package is backed up there. You can use the BitLocker: Use BitLocker Recovery Password Viewer to obtain the key package from AD DS.
Using the key package and either the recovery password or recovery key, you can decrypt portions of a BitLocker-protected drive, even if the disk is corrupted. Each key package works only for a drive with the corresponding drive identifier.

Syntax
repair-bde <inputvolume> <outputvolumeorimage> [-rk] [ârp] [-pw] [âkp] [âlf] [-f] [{-?|/?}]

Parameters



Parameter
Description




<inputvolume>
Identifies the drive letter of the BitLocker-encrypted drive that you want to repair. The drive letter must include a colon; for example: C:. If the path to a key package isn't specified, this command searches the drive for a key package. In the event that the hard drive is damaged, this command might not be able to find the package and will prompt you to provide the path.


<outputvolumeorimage>
Identifies the drive on which to store the content of the repaired drive. All information on the output drive will be overwritten.


-rk
Identifies the location of the recovery key that should be used to unlock the volume. This command can also be specified as -recoverykey.


-rp
Identifies the numerical recovery password that should be used to unlock the volume. This command can also be specified as -recoverypassword.


-pw
Identifies the password that should be used to unlock the volume. This command can also be specified as -password


-kp
Identifies the recovery key package that can be used to unlock the volume. This command can also be specified as -keypackage.


-lf
Specifies the path to the file that will store Repair-bde error, warning, and information messages. This command may also be specified as -logfile.


-f
Forces a volume to be dismounted even if it cannot be locked. This command can also be specified as -force.


-? or /?
Displays Help at the command prompt.



Limitations
The following limitations exist for the this command:

This command can't repair a drive that failed during the encryption or decryption process.

This command assumes that if the drive has any encryption, then the drive has been fully encrypted.


Examples
To attempt to repair drive C:, to write the content from drive C: to drive D: using the recovery key file (RecoveryKey.bek) stored on drive F:, and to write the results of this attempt to the log file (log.txt) on drive Z:, type:
repair-bde C: D: -rk F:\RecoveryKey.bek âlf Z:\log.txt

To attempt to repair drive C: and to write the content from drive C: to drive D: using the 48-digit recovery password specified, type:
repair-bde C: D: -rp 111111-222222-333333-444444-555555-666666-777777-888888


Note
The recovery password should be typed in eight blocks of six digits with a hyphen separating each block.

To force drive C: to dismount, attempt to repair drive C:, and then to write the content from drive C: to drive D: using the recovery key package and recovery key file (RecoveryKey.bek) stored on drive F:, type:
repair-bde C: D: -kp F:\RecoveryKeyPackage -rk F:\RecoveryKey.bek -f

To attempt to repair drive C: and to write the content from drive C: to drive D:, where you must type a password to unlock drive C: (when prompted), type:
repair-bde C: D: -pw

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# repair-bde

> Attempt to repair or decrypt a damaged BitLocker-encrypted volume.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/repair-bde>.

- Attempt to repair a specified volume:

`repair-bde {{C:}}`

- Attempt to repair a specified volume and output to another volume:

`repair-bde {{C:}} {{D:}}`

- Attempt to repair a specified volume using the provided recovery key file:

`repair-bde {{C:}} -RecoveryKey {{path/to/file.bek}}`

- Attempt to repair a specified volume using the provided numerical recovery password:

`repair-bde {{C:}} -RecoveryPassword {{password}}`

- Attempt to repair a specified volume using the provided password:

`repair-bde {{C:}} -Password {{password}}`

- Attempt to repair a specified volume using the provided key package:

`repair-bde {{C:}} -KeyPackage {{path/to/directory}}`

- Log all output to a specific file:

`repair-bde {{C:}} -LogFile {{path/to/file}}`

- Display all available options:

`repair-bde /?`
"
comp,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/comp,"





































comp | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















comp


10/16/2017

3 minutes to read













In this article


Compares the contents of two files or sets of files byte-by-byte. These files can be stored on the same drive or on different drives, and in the same directory or in different directories. When this command compares files, it displays their location and file names. If used without parameters, comp prompts you to enter the files to compare.
Syntax
comp [<data1>] [<data2>] [/d] [/a] [/l] [/n=<number>] [/c]

Parameters



Parameter
Description




<data1>
Specifies the location and name of the first file or set of files that you want to compare. You can use wildcard characters (* and ?) to specify multiple files.


<data2>
Specifies the location and name of the second file or set of files that you want to compare. You can use wildcard characters (* and ?) to specify multiple files.


/d
Displays differences in decimal format. (The default format is hexadecimal.)


/a
Displays differences as characters.


/l
Displays the number of the line where a difference occurs, instead of displaying the byte offset.


/n=<number>
Compares only the number of lines that are specified for each file, even if the files are different sizes.


/c
Performs a comparison that is not case-sensitive.


/off[line]
Processes files with the offline attribute set.


/?
Displays Help at the command prompt.



Remarks

During the comparison, comp displays messages that identify the locations of unequal information between the files. Each message indicates the offset memory address of the unequal bytes and the contents of the bytes (in hexadecimal notation unless the /a or /d command-line parameter is specified). Messages appear in the following format:
Compare error at OFFSET xxxxxxxx
file1 = xx
file2 = xx

After ten unequal comparisons, comp stops comparing the files and displays the following message:
10 Mismatches - ending compare

If you omit necessary components of either data1 or data2, or if you omit data2 entirely, this command prompts you for the missing information.

If data1 contains only a drive letter or a directory name with no file name, this command compares all of the files in the specified directory to the file specified in data1.

If data2 contains only a drive letter or a directory name, the default file name for data2 becomes the same name as for data1.

If the comp command can't find the specified files, it will prompt you with a message about whether you want to compare additional files.

The files that you compare can have the same file name, provided they're in different directories or on different drives. You can use wildcard characters (* and ?) to specify file names.

You must specify /n to compare files of different sizes. If the file sizes are different and /n isn't specified, the following message is displayed:
Files are different sizes
Compare more files (Y/N)?

To compare these files anyway, press N to stop the command. Then, run the comp command again, using the /n option to compare only the first portion of each file.

If you use wildcard characters (* and ?) to specify multiple files, comp finds the first file that matches data1 and compares it with the corresponding file in data2, if it exists. The comp command reports the results of the comparison for each file matching data1. When finished, comp displays the following message:
Compare more files (Y/N)?
To compare more files, press Y. The comp command prompts you for the locations and names of the new files. To stop the comparisons, press N. When you press Y, you're prompted for which command-line options to use. If you don't specify any command-line options, comp uses the ones you specified before.


Examples
To compare the contents of the directory c:\reports with the backup directory \\sales\backup\april, type:
comp c:\reports \\sales\backup\april

To compare the first ten lines of the text files in the \invoice directory and display the result in decimal format, type:
comp \invoice\*.txt \invoice\backup\*.txt /n=10 /d

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# comp

> Compare the contents of two files or sets of files.
> Use wildcards (*) to compare sets of files.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/comp>.

- Compare files interactively:

`comp`

- Compare two specified files:

`comp {{path/to/file_1}} {{path/to/file_2}}`

- Compare two sets of files:

`comp {{path/to/directory_1/*}} {{path/to/directory_2/*}}`

- Display differences in decimal format:

`comp /d {{path/to/file_1}} {{path/to/file_2}}`

- Display differences in ASCII format:

`comp /a {{path/to/file_1}} {{path/to/file_2}}`

- Display line numbers for differences:

`comp /l {{path/to/file_1}} {{path/to/file_2}}`

- Compare files case-insensitively:

`comp /c {{path/to/file_1}} {{path/to/file_2}}`

- Compare only the first 5 lines of each file:

`comp /n={{5}} {{path/to/file_1}} {{path/to/file_2}}`
"
del,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/del,"





































del | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















del


10/16/2017

2 minutes to read








+3





In this article


Deletes one or more files. This command performs the same actions as the erase command.
The del command can also run from the Windows Recovery Console, using different parameters. For more information, see Windows Recovery Environment (WinRE).

Warning
If you use del to delete a file from your disk, you can't retrieve it.

Syntax
del [/p] [/f] [/s] [/q] [/a[:]<attributes>] <names>
erase [/p] [/f] [/s] [/q] [/a[:]<attributes>] <names>

Parameters



Parameter
Description




<names>
Specifies a list of one or more files or directories. Wildcards may be used to delete multiple files. If a directory is specified, all files within the directory will be deleted.


/p
Prompts for confirmation before deleting the specified file.


/f
Forces deletion of read-only files.


/s
Deletes specified files from the current directory and all subdirectories. Displays the names of the files as they are being deleted.


/q
Specifies quiet mode. You are not prompted for delete confirmation.


/a[:]<attributes>
Deletes files based on the following file attributes:r Read-only filesh Hidden filesi Not content indexed filess System filesa Files ready for archivingl Reparse points- Used as a prefix meaning 'not'.


/?
Displays help at the command prompt.



Remarks

If you use the del /p command, you'll see the following message:
FileName, Delete (Y/N)?
To confirm the deletion, press Y. To cancel the deletion and to display the next file name (if you specified a group of files), press N. To stop the del command, press CTRL+C.

If you disable command extension, the /s parameter will display the names of any files that weren't found ,instead of displaying the names of files that are being deleted.

If you specify specific folders in the <names> parameter, all of the included files will also be deleted. For example, if you want to delete all of the files in the \work folder, type:
del \work


You can use wildcards (* and ?) to delete more than one file at a time. However, to avoid deleting files unintentionally, you should use wildcards cautiously. For example, if you type the following command:
del *.*

The del command displays the following prompt:
Are you sure (Y/N)?
To delete all of the files in the current directory, press Y and then press ENTER. To cancel the deletion, press N and then press ENTER.

Note
Before you use wildcard characters with the del command, use the same wildcard characters with the dir command to list all the files that will be deleted.



Examples
To delete all the files in a folder named Test on drive C, type either of the following:
del c:\test
del c:\test\*.*

To delete all files with the .bat file name extension from the current directory, type:
del *.bat

To delete all read-only files in the current directory, type:
del /a:r *.*

Additional References

Command-Line Syntax Key

Windows Recovery Environment (WinRE)









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# del

> Delete one or more files.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/del>.

- Delete one or more space-separated files or patterns:

`del {{file_pattern}}`

- Prompt for confirmation before deleting each file:

`del {{file_pattern}} /p`

- Force the deletion of read-only files:

`del {{file_pattern}} /f`

- Recursively delete file(s) from all subdirectories:

`del {{file_pattern}} /s`

- Do not prompt when deleting files based on a global wildcard:

`del {{file_pattern}} /q`

- Display the help and list available attributes:

`del /?`

- Delete files based on specified attributes:

`del {{file_pattern}} /a {{attribute}}`
"
fondue,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/fondue,"





































fondue | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















fondue


10/16/2017

2 minutes to read













In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

Enables Windows optional features by downloading required files from Windows Update or another source specified by Group Policy. The manifest file for the feature must already be installed in your Windows image.
Syntax
fondue.exe /enable-feature:<feature_name> [/caller-name:<program_name>] [/hide-ux:{all | rebootrequest}]

Parameters



Parameter
Description




/enable-feature:<feature_name>
Specifies the name of the Windows optional feature you want to enable. You can only enable one feature per command line. To enable multiple features, use fondue.exe for each feature.


/caller-name:<program_name>
Specifies the program or process name when you call fondue.exe from a script or batch file. You can use this option to add the program name to the SQM report if there is an error.


/hide-ux:{all | rebootrequest}
Use all to hide all messages to the user including progress and permission requests to access Windows Update. If permission is required, the operation will fail.Use rebootrequest to only hide user messages asking for permission to reboot the computer. Use this option if you have a script that controls reboot requests.



Examples
To enable Microsoft .NET Framework 4.8, type:
fondue.exe /enable-feature:NETFX4

To enable Microsoft .NET Framework 4.8, add the program name to the SQM report, and not display messages to the user, type:
fondue.exe /enable-feature:NETFX4 /caller-name:Admin.bat /hide-ux:all

Additional References

Command-Line Syntax Key

Microsoft .NET Framework 4.8 Download









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# fondue

> A command line installer for optional Windows features.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/fondue>.

- Enable a specific Windows feature:

`fondue /enable-feature:{{feature}}`

- Hide all output messages to the user:

`fondue /enable-feature:{{feature}} /hide-ux:all`

- Specify a caller process name for error reporting:

`fondue /enable-feature:{{feature}} /caller-name:{{name}}`
"
tree,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/tree,"





































tree | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















tree


10/16/2017

2 minutes to read













In this article


Displays the directory structure of a path or of the disk in a drive graphically.
Syntax
tree [<Drive>:][<Path>] [/f] [/a]

Parameters



Parameter
Description




<Drive>:
Specifies the drive that contains the disk for which you want to display the directory structure.


<Path>
Specifies the directory for which you want to display the directory structure.


/f
Displays the names of the files in each directory.


/a
Specifies that tree is to use text characters instead of graphic characters to show the lines that link subdirectories.


/?
Displays help at the command prompt.



Remarks
The structure displayed by tree depends upon the parameters that you specify at the command prompt. If you do not specify a drive or path, tree displays the tree structure beginning with the current directory of the current drive.
Examples
To display the names of all the subdirectories on the disk in your current drive, type:
tree \

To display, one screen at a time, the files in all the directories on drive C, type:
tree c:\ /f | more

To print a list of all the directories on drive C, type:
tree c:\ /f  prn

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","TREE(1) 							       TREE(1)



NAME
       tree - list contents of directories in a tree-like format.

SYNOPSIS
       tree  [-acdfghilnpqrstuvxACDFQNSUX]  [-L  level [-R]] [-H baseHREF] [-T
       title] [-o filename] [--nolinks] [-P pattern] [-I  pattern]  [--inodes]
       [--device] [--noreport] [--dirsfirst] [--version] [--help] [--filelimit
       #] [--si] [--prune] [--du] [--timefmt  format]  [--matchdirs]  [--from-
       file] [--] [directory ...]


DESCRIPTION
       Tree  is  a  recursive  directory listing program that produces a depth
       indented listing of files, which is  colorized  ala  dircolors  if  the
       LS_COLORS  environment  variable  is set and output is to tty.  With no
       arguments, tree lists the files in the current directory.  When	direc-
       tory  arguments	are given, tree lists all the files and/or directories
       found in the given directories each in turn.  Upon completion of  list-
       ing all files/directories found, tree returns the total number of files
       and/or directories listed.

       By default, when a symbolic link is encountered, the path that the sym-
       bolic  link refers to is printed after the name of the link in the for-
       mat:

	   name -> real-path

       If the `-l' option is given and the symbolic link refers to  an	actual
       directory, then tree will follow the path of the symbolic link as if it
       were a real directory.


OPTIONS
       Tree understands the following command line switches:


LISTING OPTIONS
       -a     All files are printed.  By default tree does  not  print	hidden
	      files  (those  beginning with a dot `.').  In no event does tree
	      print the file system constructs	`.'  (current  directory)  and
	      `..' (previous directory).


       -d     List directories only.


       -l     Follows  symbolic links if they point to directories, as if they
	      were directories. Symbolic links that will result  in  recursion
	      are avoided when detected.


       -f     Prints the full path prefix for each file.


       -x     Stay on the current file-system only.  Ala find -xdev.


       -L level
	      Max display depth of the directory tree.


       -R     Recursively  cross  down the tree each level directories (see -L
	      option), and at each of  them  execute  tree  again  adding  `-o
	      00Tree.html' as a new option.


       -P pattern
	      List  only  those files that match the wild-card pattern.  Note:
	      you must use the -a option to also consider those  files	begin-
	      ning with a dot `.'  for matching.  Valid wildcard operators are
	      `*' (any zero or more characters), `?' (any  single  character),
	      `[...]'  (any single character listed between brackets (optional
	      - (dash) for character  range  may  be  used:  ex:  [A-Z]),  and
	      `[^...]'	(any  single character not listed in brackets) and `|'
	      separates alternate patterns.


       -I pattern
	      Do not list those files that match the wild-card pattern.


       --ignore-case
	      If a match pattern is specified by the -P  or  -I  option,  this
	      will  cause  the pattern to match without regards to the case of
	      each letter.


       --matchdirs
	      If a match pattern is specified by  the  -P  option,  this  will
	      cause  the pattern to be applied to directory names (in addition
	      to filenames).  In the event of a match on the  directory  name,
	      matching	is  disabled  for  the	directory's  contents.	If the
	      --prune option is used, empty folders  that  match  the  pattern
	      will not be pruned.


       --prune
	      Makes  tree prune empty directories from the output, useful when
	      used in conjunction with -P or -I.  See BUGS AND NOTES below for
	      more information on this option.


       --noreport
	      Omits  printing  of  the file and directory report at the end of
	      the tree listing.


       --charset charset
	      Set the character set to use when outputting HTML and  for  line
	      drawing.


       --filelimit #
	      Do not descend directories that contain more than # entries.


       --timefmt format
	      Prints (implies -D) and formats the date according to the format
	      string which uses the strftime(3) syntax.


       -o filename
	      Send output to filename.



FILE OPTIONS
       -q     Print non-printable characters in filenames  as  question  marks
	      instead of the default.


       -N     Print non-printable characters as is instead of as escaped octal
	      numbers.


       -Q     Quote the names of files in double quotes.


       -p     Print the file type and permissions for each  file  (as  per  ls
	      -l).


       -u     Print the username, or UID # if no username is available, of the
	      file.


       -g     Print the group name, or GID # if no group name is available, of
	      the file.


       -s     Print the size of each file in bytes along with the name.


       -h     Print  the  size	of each file but in a more human readable way,
	      e.g. appending a size letter for kilobytes (K),  megabytes  (M),
	      gigabytes (G), terabytes (T), petabytes (P) and exabytes (E).


       --si   Like -h but use SI units (powers of 1000) instead.


       --du   For  each directory report its size as the accumulation of sizes
	      of all its files and sub-directories (and their  files,  and  so
	      on).   The total amount of used space is also given in the final
	      report (like the 'du -c' command.) This option requires tree  to
	      read  the entire directory tree before emitting it, see BUGS AND
	      NOTES below.  Implies -s.


       -D     Print the date of the last modification time or if -c  is  used,
	      the last status change time for the file listed.


       -F     Append  a `/' for directories, a `=' for socket files, a `*' for
	      executable files, a `>'  for  doors  (Solaris)  and  a  `|'  for
	      FIFO's, as per ls -F


       --inodes
	      Prints the inode number of the file or directory


       --device
	      Prints the device number to which the file or directory belongs



SORTING OPTIONS
       -v     Sort the output by version.


       -t     Sort  the output by last modification time instead of alphabeti-
	      cally.


       -c     Sort the output by last status change instead of alphabetically.
	      Modifies the -D option (if used) to print the last status change
	      instead of modification time.


       -U     Do not sort.  Lists files in directory order.  Disables  --dirs-
	      first.


       -r     Sort  the  output  in  reverse  order.  This is a meta-sort that
	      alter the above sorts.  This option is disabled when -U is used.


       --dirsfirst
	      List  directories  before files. This is a meta-sort that alters
	      the above sorts.	This option is disabled when -U is used.


       --sort[=]type
	      Sort the output by type instead of name.	Possible  values  are:
	      ctime (-c), mtime (-t), size, or version (-v).


GRAPHICS OPTIONS
       -i     Makes  tree not print the indentation lines, useful when used in
	      conjunction with the -f option.  Also removes as much whitespace
	      as possible when used with the -J or -x options.


       -A     Turn  on	ANSI  line graphics hack when printing the indentation
	      lines.


       -S     Turn on CP437 line graphics (useful  when  using	Linux  console
	      mode fonts). This option is now equivalent to `--charset=IBM437'
	      and may eventually be depreciated.


       -n     Turn colorization off always, over-ridden by the -C option.


       -C     Turn colorization on always, using built-in  color  defaults  if
	      the  LS_COLORS or TREE_COLORS environment variables are not set.
	      Useful to colorize output to a pipe.



XML/JSON/HTML OPTIONS
       -X     Turn on XML output. Outputs the directory tree as an XML format-
	      ted file.


       -J     Turn  on JSON output. Outputs the directory tree as an JSON for-
	      matted array.


       -H baseHREF
	      Turn on HTML output, including HTTP references. Useful  for  ftp
	      sites.   baseHREF  gives	the  base ftp location when using HTML
	      output. That is, the local directory  may  be  `/local/ftp/pub',
	      but   it	 must	be   referenced  as  `ftp://hostname.organiza-
	      tion.domain/pub' (baseHREF should  be  `ftp://hostname.organiza-
	      tion.domain').  Hint: don't use ANSI lines with this option, and
	      don't give more than one directory in the directory list. If you
	      wish  to	use  colors  via CSS style-sheet, use the -C option in
	      addition to this option to force color output.


       -T title
	      Sets the title and H1 header string in HTML output mode.


       --nolinks
	      Turns off hyperlinks in HTML output.



INPUT OPTIONS
       --fromfile Reads a directory listing from a file rather than the  file-
       system.	 Paths	provided  on  the  command line are files to read from
       rather than directories to search.  The	dot  (.)  directory  indicates
       that tree should read paths from standard input.


MISC OPTIONS
       --help Outputs a verbose usage listing.


       --version
	      Outputs the version of tree.


       --     Option  processing  terminator.  No further options will be pro-
	      cessed after this.



FILES
       /etc/DIR_COLORS		System color database.
       ~/.dircolors	   Users color database.


ENVIRONMENT
       LS_COLORS      Color information created by dircolors
       TREE_COLORS    Uses this for color information over LS_COLORS if it  is
       set.
       TREE_CHARSET   Character set for tree to use in HTML mode.
       CLICOLOR       Enables colorization even if TREE_COLORS or LS_COLORS is
       not set.
       CLICOLOR_FORCE Always enables colorization (effectively -C)
       LC_CTYPE       Locale for filename output.
       LC_TIME	      Locale for timefmt output, see strftime(3).
       TZ	 Timezone for timefmt output, see strftime(3).


AUTHOR
       Steve Baker (ice@mama.indstate.edu)
       HTML output hacked by Francesc Rocher (rocher@econ.udg.es)
       Charsets and OS/2 support by Kyosuke Tokoro (NBG01720@nifty.ne.jp)


BUGS AND NOTES
       Tree does not prune ""empty"" directories when the -P and -I options  are
       used by default. Use the --prune option.

       The -h and --si options round to the nearest whole number unlike the ls
       implementations which rounds up always.

       Pruning files and directories with the -I, -P and  --filelimit  options
       will lead to incorrect file/directory count reports.

       The  --prune  and --du options cause tree to accumulate the entire tree
       in memory before emitting it. For large directory trees this can  cause
       a significant delay in output and the use of large amounts of memory.

       The  timefmt  expansion	buffer	is limited to a ridiculously large 255
       characters.  Output of time strings longer than this will be undefined,
       but are guaranteed to not exceed 255 characters.

       XML/JSON trees are not colored, which is a bit of a shame.

       Probably more.


SEE ALSO
       dircolors(1), ls(1), find(1), du(1), strftime(3)



Tree 1.8.0							       TREE(1)
","# tree

> Display a graphical tree of the directory structure for a path.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/tree>.

- Display the tree for the current directory:

`tree`

- Display the tree for a specific directory:

`tree {{path/to/directory}}`

- Display the tree for a directory including files:

`tree {{path/to/directory}} /f`

- Display the tree using ASCII characters instead of extended characters:

`tree {{path/to/directory}} /a`
"
choco-source,https://chocolatey.org/docs/commands-source,"




Chocolatey Software | Commands Source






































Here's how we're responding to COVID-19 plus resources to help

×













Resources
Watch videos, read documentation, and hear Chocolatey success stories from companies you trust.
View Resources






Events
Find past and upcoming webinars, workshops, and conferences. New events have recently been added!
View Events






Courses
Step-by-step guides for all things Chocolatey! Earn badges as you learn through interactive digital courses.
View Courses











Tuesday, 22 September 20203 PM BST/GMT+1 / 4 PM CEST / 9 AM Central / 10 AM Eastern

            Standardising tool sets across different Teams is not always easy... especially when different Teams have traditionally used different approaches and methodologies.
            In this webinar we will unpack the advantages of a more standard, consistent approach with Puppet & Chocolatey.
        
Register Now






Webinar Replay fromTuesday, 23 June 2020
Chocolatey Central Management now includes the premiere feature of managing endpoints through a Chocolatey-centered solution aka Deployments. We are excited to share what Deployments is all about!
Learn More
Watch Now



COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.
Find Resources






Chocolatey for Business Feature Video Series

            In this video series, come take a tour of the many features available in our Chocolatey for Business offering.
            Many organizations choose Chocolatey for Business when they want to scale out their solution across thousands of nodes, deploy rapidly and reliably every time,
            mitigate risks with a greatly-simplified patching workflow, and access a Support Team that will guide you on your automation journey.
        
Watch the Series

































id:searchValue search by id only
tag:searchValue search by tags













Overview




 Go Back
Overview




Why Chocolatey?
Chocolatey is a software management solution unlike anything else you've ever experienced on Windows. Chocolatey brings the concepts of true package management to allow you to version things, manage dependencies and installation order, better inventory management, and other features.

How Chocolatey Works




Use Cases
Server
Desktop
Cloud / Containers
Integrations




Customer Stories
Puppet
Yelp
CME Group







Product




 Go Back
Product




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.


Pro Edition
Pro is a personal, named license that grants having licensed versions of Chocolatey on up to 8 machines and provides the ultimate Chocolatey experience!


Open Source
Chocolatey has the largest online registry of Windows packages. Learn how Open Source Chocolatey can support your next project.






Compare Editions
Learn the difference between the Chocolatey Editions and what will fit your needs the best.

Pricing
Try Chocolatey for Business Free

Purchase
I'm ready to get started now!

Support





Events
Find past and upcoming webinars, workshops, and conferences.








Solutions




 Go Back
Solutions




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.






Self-Service Anywhere

                                                Chocolatey provides a unique approach to managing your end-user software (desktops / laptops) and can be combined with your existing solutions.
                                                Chocolatey for Business (C4B) enables better security, enhanced visibility with centralized reporting, and a self-service GUI. Self-Service Anywhere allows non-administrators to easily access and manage IT approved software from the office, from home, or anywhere they have an internet connection.
                                            






Quick Deployment Environment (QDE)

                                                The Quick Deployment Environment (QDE) provides a single virtual machine appliance to be imported into your hypervisor-of-choice, which contains most of the various components of a Chocolatey organizational solution. Deploy recommended architecture in 2-3 hours.
                                            








Community




 Go Back
Community




Community Packages
Search the largest online registry of Windows packages. Chocolatey packages encapsulate everything required to manage a particular piece of software into one deployment artifact by wrapping installers, executables, zips, and scripts into a compiled package file.





Community Resources
Chocolatey on GitHub
Blog





Events
Find past and upcoming webinars, workshops, and conferences.








Learn




 Go Back
Learn




Install Chocolatey
Get step-by-step instructions on how to install Chocolatey.


Getting Started Course
New to Chocolatey? Learn the requirements and how to get Chocolatey up and running in no time!





Resource Library
Docs
Videos
Case Studies
Courses
Media Kit





Events
Find past and upcoming webinars, workshops, and conferences.


COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.


Support
Need help? Read our Support FAQ to find out the next steps.

Blog
Newsletter







Partners




 Go Back
Partners



Overview
Become a Partner




Technology Partners
Resellers







About




 Go Back
About




About Chocolatey
Chocolatey Software is focused on helping our community, customers, and partners with solutions that help fill the gaps that are often ignored. We offer a simple, pragmatic, and open approach to software management.





Careers
Contact







Install Now
Install Now












Videos





Featured Series





Success Stories





Case Studies





Docs





Blog










Documentation Table of Contents


















id:searchValue search by id only
tag:searchValue search by tags





Docs Home
Why Chocolatey?
Security

Features



Free


Create your own packages
Host packages internally
Integrates with everything
Package Shims
Custom Package Templates
Package Extensions




Paid


Self-Service / Background Mode (C4B)
Chocolatey Central Management (C4B)
Package Internalizer (C4B)
Package Builder (C4B)
Package Audit (C4B)
Branding Chocolatey Applications (C4B)
Runtime Malware Protection (Pro+)
Download CDN Cache (Pro+)
Package Reducer (Pro+)
Ubiquitous Install Directory Option (Pro+)
Package Throttle (Pro+)
Package Synchronizer (Pro+ Auto / C4B Sync Command)
Windows Service Management PowerShell Functions (C4B)





General


Release Notes
Licensed Release Notes
Troubleshooting
FAQs
Chocolatey.org Moderation
Chocolatey.org Packages Disclaimer
Software Vendor?


Usage


How to install
How to install licensed edition
Configuration / chocolatey.config
How to uninstall
Getting Started
Proxy Settings

Commands


Passing args to choco
Complete Reference
List / Search
Info
Install
Pin
Outdated
Upgrade
Uninstall
Config
Source / Sources
Feature
Download





Creating Packages


Create Packages
Quick Start

Commands


New
Pack
Apikey
Push




PowerShell References


Function and Variable Reference
Install-ChocolateyPackage
Install-ChocolateyZipPackage
Install-ChocolateyPowershellCommand
Install-ChocolateyVsixPackage
Get-ChocolateyWebFile
Install-ChocolateyInstallPackage



Automatic Packaging


How To's


Use Chocolatey w/Proxy Server
Change Download Cache Location aka Don't use TEMP for downloads
Install/Upgrade a Package w/out running install scripts
Request Package Fixes/Updates
Manually Recompile Packages, Embedding/Internalizing Remote Resources
Request Package
Maintain Packages for My Software
Become a Maintainer
Take Over Package Maintenance Exclusively
Parse Package Parameters
Mount Iso
Create Custom Package Templates
Extend Chocolatey With PowerShell Modules (extensions)
Deprecate a Package
Install licensed edition
Host Your Own Package Repository Server
Set up the Chocolatey.Server
Set up Chocolatey for internal/organizational use
Automate Package Internalizer (MSP/C4B)
C4B Quick Start Guide


Chocolatey GUI


Chocolatey GUI Overview
Chocolatey GUI Branding
Chocolatey GUI Known Issues


Quick Deployment Environment (QDE)


QDE Overview
QDE Setup
QDE Desktop ReadMe Files
QDE SSL/TLS Setup
QDE Firewall Changes
QDE Client Setup
QDE Internet Setup

QDE v1


QDE Setup v1
QDE Desktop ReadMe Files v1
QDE SSL/TLS Setup v1
QDE Firewall Changes v1
QDE Client Setup v1





Chocolatey Central Management (CCM)


Central Management Overview
Central Management Setup
Central Management Client Setup
Central Management Upgrade
Central Management Deployments


Use Cases


Development Environment
Host on MyGet


Learning Resources


Resources
Videos
Presentations


Additional Information


Legal
History









Source Command (choco source)
Chocolatey will allow you to interact with sources.
NOTE: Mostly compatible with older chocolatey client (0.9.8.x and
below) with options and switches. When enabling, disabling or removing
a source, use -name in front of the option now. In most cases you
can still pass options and switches with one dash (-). For more
details, see how to pass arguments (choco -?).


Usage
Examples
Exit Codes
Options and Switches


Usage
choco source [list]|add|remove|disable|enable [<options/switches>]
choco sources [list]|add|remove|disable|enable [<options/switches>]

Examples
choco source
choco source list
choco source add -n=bob -s=""https://somewhere/out/there/api/v2/""
choco source add -n=bob -s ""'https://somewhere/out/there/api/v2/'"" -cert=\Users\bob\bob.pfx
choco source add -n=bob -s ""'https://somewhere/out/there/api/v2/'"" -u=bob -p=12345
choco source disable -n=bob
choco source enable -n=bob
choco source remove -n=bob

When it comes to the source location, this can be a folder/file share or an http
location. If it is a url, it will be a location you can go to in a browser and
it returns OData with something that says Packages in the browser, similar to
what you see when you go to https://chocolatey.org/api/v2/.
NOTE: See scripting in how to pass arguments (choco -?) for how to
write proper scripts and integrations.
Exit Codes
Exit codes that normally result from running this command.
Normal:

0: operation was successful, no issues detected
-1 or 1: an error has occurred

If you find other exit codes that we have not yet documented, please
file a ticket so we can document it at
https://github.com/chocolatey/choco/issues/new/choose.
Options and Switches
NOTE: Options and switches apply to all items passed, so if you are
running a command like install that allows installing multiple
packages, and you use --version=1.0.0, it is going to look for and
try to install version 1.0.0 of every package passed. So please split
out multiple package calls when wanting to pass specific options.
Includes default options/switches (included below for completeness).

 -?, --help, -h
     Prints out the help menu.

 -d, --debug
     Debug - Show debug messaging.

 -v, --verbose
     Verbose - Show verbose messaging. Very verbose messaging, avoid using
       under normal circumstances.

     --trace
     Trace - Show trace messaging. Very, very verbose trace messaging. Avoid
       except when needing super low-level .NET Framework debugging. Available
       in 0.10.4+.

     --nocolor, --no-color
     No Color - Do not show colorization in logging output. This overrides
       the feature 'logWithoutColor', set to 'False'. Available in 0.10.9+.

     --acceptlicense, --accept-license
     AcceptLicense - Accept license dialogs automatically. Reserved for
       future use.

 -y, --yes, --confirm
     Confirm all prompts - Chooses affirmative answer instead of prompting.
       Implies --accept-license

 -f, --force
     Force - force the behavior. Do not use force during normal operation -
       it subverts some of the smart behavior for commands.

     --noop, --whatif, --what-if
     NoOp / WhatIf - Don't actually do anything.

 -r, --limitoutput, --limit-output
     LimitOutput - Limit the output to essential information

     --timeout, --execution-timeout=VALUE
     CommandExecutionTimeout (in seconds) - The time to allow a command to
       finish before timing out. Overrides the default execution timeout in the
       configuration of 2700 seconds. '0' for infinite starting in 0.10.4.

 -c, --cache, --cachelocation, --cache-location=VALUE
     CacheLocation - Location for download cache, defaults to %TEMP% or value
       in chocolatey.config file.

     --allowunofficial, --allow-unofficial, --allowunofficialbuild, --allow-unofficial-build
     AllowUnofficialBuild - When not using the official build you must set
       this flag for choco to continue.

     --failstderr, --failonstderr, --fail-on-stderr, --fail-on-standard-error, --fail-on-error-output
     FailOnStandardError - Fail on standard error output (stderr), typically
       received when running external commands during install providers. This
       overrides the feature failOnStandardError.

     --use-system-powershell
     UseSystemPowerShell - Execute PowerShell using an external process
       instead of the built-in PowerShell host. Should only be used when
       internal host is failing. Available in 0.9.10+.

     --no-progress
     Do Not Show Progress - Do not show download progress percentages.
       Available in 0.10.4+.

     --proxy=VALUE
     Proxy Location - Explicit proxy location. Overrides the default proxy
       location of ''. Available for config settings in 0.9.9.9+, this CLI
       option available in 0.10.4+.

     --proxy-user=VALUE
     Proxy User Name - Explicit proxy user (optional). Requires explicity
       proxy (`--proxy` or config setting). Overrides the default proxy user of
       '123'. Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-password=VALUE
     Proxy Password - Explicit proxy password (optional) to be used with
       username. Requires explicity proxy (`--proxy` or config setting) and
       user name.  Overrides the default proxy password (encrypted in settings
       if set). Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-bypass-list=VALUE
     ProxyBypassList - Comma separated list of regex locations to bypass on
       proxy. Requires explicity proxy (`--proxy` or config setting). Overrides
       the default proxy bypass list of ''. Available in 0.10.4+.

     --proxy-bypass-on-local
     Proxy Bypass On Local - Bypass proxy for local connections. Requires
       explicity proxy (`--proxy` or config setting). Overrides the default
       proxy bypass on local setting of 'True'. Available in 0.10.4+.

     --log-file=VALUE
     Log File to output to in addition to regular loggers. Available in 0.1-
       0.8+.

 -n, --name=VALUE
     Name - the name of the source. Required with actions other than list.
       Defaults to empty.

 -s, --source=VALUE
     Source - The source. This can be a folder/file share or an http locatio-
       n. If it is a url, it will be a location you can go to in a browser and
       it returns OData with something that says Packages in the browser,
       similar to what you see when you go to https://chocolatey.org/api/v2/.
       Required with add action. Defaults to empty.

 -u, --user=VALUE
     User - used with authenticated feeds. Defaults to empty.

 -p, --password=VALUE
     Password - the user's password to the source. Encrypted in chocolate-
       y.config file.

     --cert=VALUE
     Client certificate - PFX pathname for an x509 authenticated feeds.
       Defaults to empty. Available in 0.9.10+.

     --cp, --certpassword=VALUE
     Certificate Password - the client certificate's password to the source.
       Defaults to empty. Available in 0.9.10+.

     --priority=VALUE
     Priority - The priority order of this source as compared to other
       sources, lower is better. Defaults to 0 (no priority). All priorities
       above 0 will be evaluated first, then zero-based values will be
       evaluated in config file order. Available in 0.9.9.9+.

     --bypassproxy, --bypass-proxy
     Bypass Proxy - Should this source explicitly bypass any explicitly or
       system configured proxies? Defaults to false. Available in 0.10.4+.

     --allowselfservice, --allow-self-service
     Allow Self-Service - Should this source be allowed to be used with self-
       service? Requires business edition (v1.10.0+) with feature
       'useBackgroundServiceWithSelfServiceSourcesOnly' turned on. Defaults to
       false. Available in 0.10.4+.

     --adminonly, --admin-only
     Visible to Administrators Only - Should this source be visible to non-
       administrators? Requires business edition (v1.12.2+). Defaults to false.
       Available in 0.10.8+.


Command Reference
NOTE: This documentation has been automatically generated from choco source -h.












Overview

About
Getting Started Guide
Why Chocolatey
How Chocolatey Works
Security
Privacy Policy
Kickstarter
Partner
Customer Stories




Product

Solution: Self-Service Anywhere
Solution: Quick Deployment Environment (QDE)
Chocolatey for Business
Pro Edition
Open Source
C4B Trial
Pricing
Support
Community Packages
Events




Learn

Resource Library
Events
COVID-19 Resources
Docs
Videos
Case Studies
Courses
Blog 
Media Kit
Sitemap




Connect

Contact Us
Support
Newsletter
Shop
Report a Bug
Status
Careers



Follow Chocolatey Software on Twitter



Follow Chocolatey Software on Facebook



Find Chocolatey Software on GitHub



Subscribe to Chocolatey Software on YouTube









© 2020 Chocolatey Software, Inc.
Deployed from 16d5ee0bdb. You are on web.3. Page generated 25 Sep 2020 08:27:41 +00:00.





Chocolatey.org uses cookies to enhance the user experience of the site.

        I accept
    

        I accept
    









",,"# choco source

> Manage sources for packages with Chocolatey.
> More information: <https://chocolatey.org/docs/commands-source>.

- List currently available sources:

`choco source list`

- Add a new package source:

`choco source add --name {{name}} --source {{url}}`

- Add a new package source with credentials:

`choco source add --name {{name}} --source {{url}} --user {{username}} --password {{password}}`

- Add a new package source with a client certificate:

`choco source add --name {{name}} --source {{url}} --cert {{path/to/certificate}}`

- Enable a package source:

`choco source enable --name {{name}}`

- Disable a package source:

`choco source disable --name {{name}}`

- Remove a package source:

`choco source remove --name {{name}}`
"
systeminfo,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/systeminfo,"





































systeminfo | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















systeminfo


10/16/2017

2 minutes to read













In this article


Displays detailed configuration information about a computer and its operating system, including operating system configuration, security information, product ID, and hardware properties (such as RAM, disk space, and network cards).
Syntax
Systeminfo [/s <Computer> [/u <Domain>\<UserName> [/p <Password>]]] [/fo {TABLE | LIST | CSV}] [/nh]

Parameters



Parameter
Description




/s <Computer>
Specifies the name or IP address of a remote computer (do not use backslashes). The default is the local computer.


/u <Domain><UserName>
Runs the command with the account permissions of the specified user account. If /u is not specified, this command uses the permissions of the user who is currently logged on to the computer that is issuing the command.


/p <Password>
Specifies the password of the user account that is specified in the /u parameter.


/fo <Format>
Specifies the output format with one of the following values:TABLE: Displays output in a table.LIST: Displays output in a list.CSV: Displays output in Comma Separated Values format.


/nh
Suppresses column headers in the output. Valid when the /fo parameter is set to TABLE or CSV.


/?
Displays help at the command prompt.



Examples
To view configuration information for a computer named Srvmain, type:
systeminfo /s srvmain
To remotely view configuration information for a computer named Srvmain2 that is located on the Maindom domain, type:
systeminfo /s srvmain2 /u maindom\hiropln
To remotely view configuration information (in list format) for a computer named Srvmain2 that is located on the Maindom domain, type:
systeminfo /s srvmain2 /u maindom\hiropln /p p@ssW23 /fo list
Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# systeminfo

> Display operating system configuration for a local or remote machine.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/systeminfo>.

- Display system configuration for the local machine:

`systeminfo`

- Display system configuration in a specified output format:

`systeminfo /fo {{table|list|csv}}`

- Display system configuration for a remote machine:

`systeminfo /s {{remote_name}} /u {{username}} /p {{password}}`

- Display detailed usage information:

`systeminfo /?`
"
rmdir,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/rmdir,"





































rmdir | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















rmdir


10/16/2017

2 minutes to read








+1





In this article


Deletes a directory.
The rmdir command can also run from the Windows Recovery Console, using different parameters. For more information, see Windows Recovery Environment (WinRE).

Note
This command is the same as the rd command.

Syntax
rmdir [<drive>:]<path> [/s [/q]]

Parameters



Parameter
Description




[<drive>:]<path>
Specifies the location and the name of the directory that you want to delete. Path is required. If you include a backslash () at the beginning of the specified path, then the path starts at the root directory (regardless of the current directory).


/s
Deletes a directory tree (the specified directory and all its subdirectories, including all files).


/q
Specifies quiet mode. Does not prompt for confirmation when deleting a directory tree. The /q parameter works only if /s is also specified.CAUTION: When you run in quiet mode, the entire directory tree is deleted without confirmation. Make sure that important files are moved or backed up before using the /q command-line option.


/?
Displays help at the command prompt.



Remarks

You can't delete a directory that contains files, including hidden or system files. If you attempt to do so, the following message appears:
The directory is not empty
Use the dir /a command to list all files (including hidden and system files). Then use the attrib command with -h to remove hidden file attributes, -s to remove system file attributes, or -h -s to remove both hidden and system file attributes. After the hidden and file attributes have been removed, you can delete the files.

You can't use the rmdir command to delete the current directory. If you attempt to delete the current directory, the following error message appears:
The process can't access the file because it is being used by another process.
If you receive this error message, you must change to a different directory (not a subdirectory of the current directory), and then try again.


Examples
To change to the parent directory so you can safely remove the desired directory, type:
cd ..

To remove a directory named test (and all its subdirectories and files) from the current directory, type:
rmdir /s test

To run the previous example in quiet mode, type:
rmdir /s /q test

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
RMDIR(1)		  BSD General Commands Manual		      RMDIR(1)

NAME
     rmdir -- remove directories

SYNOPSIS
     rmdir [-p] directory ...

DESCRIPTION
     The rmdir utility removes the directory entry specified by each directory
     argument, provided it is empty.

     Arguments are processed in the order given.  In order to remove both a
     parent directory and a subdirectory of that parent, the subdirectory must
     be specified first so the parent directory is empty when rmdir tries to
     remove it.

     The following option is available:

     -p      Each directory argument is treated as a pathname of which all
	     components will be removed, if they are empty, starting with the
	     last most component.  (See rm(1) for fully non-discriminant
	     recursive removal.)

     The rmdir utility exits with one of the following values:

     0	     Each directory entry specified by a dir operand referred to an
	     empty directory and was removed successfully.

     >0      An error occurred.

SEE ALSO
     rm(1)

STANDARDS
     The rmdir command is expected to be IEEE Std 1003.2 (``POSIX.2'') compat-
     ible.

HISTORY
     A rmdir command appeared in Version 1 AT&T UNIX.

BSD				 May 31, 1993				   BSD
","# rmdir

> Remove a directory and its contents.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/rmdir>.

- Remove an empty directory:

`rmdir {{path/to/directory}}`

- Remove a directory and its contents recursively:

`rmdir {{path/to/directory}} /s`

- Remove a directory and its contents recursively without prompting:

`rmdir {{path/to/directory}} /s /q`
"
choco-apikey,https://chocolatey.org/docs/commands-apikey,"




Chocolatey Software | Commands Apikey






































Here's how we're responding to COVID-19 plus resources to help

×













Resources
Watch videos, read documentation, and hear Chocolatey success stories from companies you trust.
View Resources






Events
Find past and upcoming webinars, workshops, and conferences. New events have recently been added!
View Events






Courses
Step-by-step guides for all things Chocolatey! Earn badges as you learn through interactive digital courses.
View Courses











Tuesday, 22 September 20203 PM BST/GMT+1 / 4 PM CEST / 9 AM Central / 10 AM Eastern

            Standardising tool sets across different Teams is not always easy... especially when different Teams have traditionally used different approaches and methodologies.
            In this webinar we will unpack the advantages of a more standard, consistent approach with Puppet & Chocolatey.
        
Register Now






Webinar Replay fromTuesday, 23 June 2020
Chocolatey Central Management now includes the premiere feature of managing endpoints through a Chocolatey-centered solution aka Deployments. We are excited to share what Deployments is all about!
Learn More
Watch Now



COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.
Find Resources






Chocolatey for Business Feature Video Series

            In this video series, come take a tour of the many features available in our Chocolatey for Business offering.
            Many organizations choose Chocolatey for Business when they want to scale out their solution across thousands of nodes, deploy rapidly and reliably every time,
            mitigate risks with a greatly-simplified patching workflow, and access a Support Team that will guide you on your automation journey.
        
Watch the Series

































id:searchValue search by id only
tag:searchValue search by tags













Overview




 Go Back
Overview




Why Chocolatey?
Chocolatey is a software management solution unlike anything else you've ever experienced on Windows. Chocolatey brings the concepts of true package management to allow you to version things, manage dependencies and installation order, better inventory management, and other features.

How Chocolatey Works




Use Cases
Server
Desktop
Cloud / Containers
Integrations




Customer Stories
Puppet
Yelp
CME Group







Product




 Go Back
Product




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.


Pro Edition
Pro is a personal, named license that grants having licensed versions of Chocolatey on up to 8 machines and provides the ultimate Chocolatey experience!


Open Source
Chocolatey has the largest online registry of Windows packages. Learn how Open Source Chocolatey can support your next project.






Compare Editions
Learn the difference between the Chocolatey Editions and what will fit your needs the best.

Pricing
Try Chocolatey for Business Free

Purchase
I'm ready to get started now!

Support





Events
Find past and upcoming webinars, workshops, and conferences.








Solutions




 Go Back
Solutions




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.






Self-Service Anywhere

                                                Chocolatey provides a unique approach to managing your end-user software (desktops / laptops) and can be combined with your existing solutions.
                                                Chocolatey for Business (C4B) enables better security, enhanced visibility with centralized reporting, and a self-service GUI. Self-Service Anywhere allows non-administrators to easily access and manage IT approved software from the office, from home, or anywhere they have an internet connection.
                                            






Quick Deployment Environment (QDE)

                                                The Quick Deployment Environment (QDE) provides a single virtual machine appliance to be imported into your hypervisor-of-choice, which contains most of the various components of a Chocolatey organizational solution. Deploy recommended architecture in 2-3 hours.
                                            








Community




 Go Back
Community




Community Packages
Search the largest online registry of Windows packages. Chocolatey packages encapsulate everything required to manage a particular piece of software into one deployment artifact by wrapping installers, executables, zips, and scripts into a compiled package file.





Community Resources
Chocolatey on GitHub
Blog





Events
Find past and upcoming webinars, workshops, and conferences.








Learn




 Go Back
Learn




Install Chocolatey
Get step-by-step instructions on how to install Chocolatey.


Getting Started Course
New to Chocolatey? Learn the requirements and how to get Chocolatey up and running in no time!





Resource Library
Docs
Videos
Case Studies
Courses
Media Kit





Events
Find past and upcoming webinars, workshops, and conferences.


COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.


Support
Need help? Read our Support FAQ to find out the next steps.

Blog
Newsletter







Partners




 Go Back
Partners



Overview
Become a Partner




Technology Partners
Resellers







About




 Go Back
About




About Chocolatey
Chocolatey Software is focused on helping our community, customers, and partners with solutions that help fill the gaps that are often ignored. We offer a simple, pragmatic, and open approach to software management.





Careers
Contact







Install Now
Install Now












Videos





Featured Series





Success Stories





Case Studies





Docs





Blog










Documentation Table of Contents


















id:searchValue search by id only
tag:searchValue search by tags





Docs Home
Why Chocolatey?
Security

Features



Free


Create your own packages
Host packages internally
Integrates with everything
Package Shims
Custom Package Templates
Package Extensions




Paid


Self-Service / Background Mode (C4B)
Chocolatey Central Management (C4B)
Package Internalizer (C4B)
Package Builder (C4B)
Package Audit (C4B)
Branding Chocolatey Applications (C4B)
Runtime Malware Protection (Pro+)
Download CDN Cache (Pro+)
Package Reducer (Pro+)
Ubiquitous Install Directory Option (Pro+)
Package Throttle (Pro+)
Package Synchronizer (Pro+ Auto / C4B Sync Command)
Windows Service Management PowerShell Functions (C4B)





General


Release Notes
Licensed Release Notes
Troubleshooting
FAQs
Chocolatey.org Moderation
Chocolatey.org Packages Disclaimer
Software Vendor?


Usage


How to install
How to install licensed edition
Configuration / chocolatey.config
How to uninstall
Getting Started
Proxy Settings

Commands


Passing args to choco
Complete Reference
List / Search
Info
Install
Pin
Outdated
Upgrade
Uninstall
Config
Source / Sources
Feature
Download





Creating Packages


Create Packages
Quick Start

Commands


New
Pack
Apikey
Push




PowerShell References


Function and Variable Reference
Install-ChocolateyPackage
Install-ChocolateyZipPackage
Install-ChocolateyPowershellCommand
Install-ChocolateyVsixPackage
Get-ChocolateyWebFile
Install-ChocolateyInstallPackage



Automatic Packaging


How To's


Use Chocolatey w/Proxy Server
Change Download Cache Location aka Don't use TEMP for downloads
Install/Upgrade a Package w/out running install scripts
Request Package Fixes/Updates
Manually Recompile Packages, Embedding/Internalizing Remote Resources
Request Package
Maintain Packages for My Software
Become a Maintainer
Take Over Package Maintenance Exclusively
Parse Package Parameters
Mount Iso
Create Custom Package Templates
Extend Chocolatey With PowerShell Modules (extensions)
Deprecate a Package
Install licensed edition
Host Your Own Package Repository Server
Set up the Chocolatey.Server
Set up Chocolatey for internal/organizational use
Automate Package Internalizer (MSP/C4B)
C4B Quick Start Guide


Chocolatey GUI


Chocolatey GUI Overview
Chocolatey GUI Branding
Chocolatey GUI Known Issues


Quick Deployment Environment (QDE)


QDE Overview
QDE Setup
QDE Desktop ReadMe Files
QDE SSL/TLS Setup
QDE Firewall Changes
QDE Client Setup
QDE Internet Setup

QDE v1


QDE Setup v1
QDE Desktop ReadMe Files v1
QDE SSL/TLS Setup v1
QDE Firewall Changes v1
QDE Client Setup v1





Chocolatey Central Management (CCM)


Central Management Overview
Central Management Setup
Central Management Client Setup
Central Management Upgrade
Central Management Deployments


Use Cases


Development Environment
Host on MyGet


Learning Resources


Resources
Videos
Presentations


Additional Information


Legal
History









ApiKey Command (choco apikey)
This lists api keys that are set or sets an api key for a particular
source so it doesn't need to be specified every time.
Anything that doesn't contain source and key will list api keys.


Usage
Examples
Connecting to Chocolatey.org (Community Package Repository)
Exit Codes
Options and Switches


Usage
choco apikey [<options/switches>]
choco setapikey [<options/switches>]

Examples
choco apikey
choco apikey -s https://somewhere/out/there
choco apikey -s=""https://somewhere/out/there/"" -k=""value""
choco apikey -s ""https://push.chocolatey.org/"" -k=""123-123123-123""
choco apikey -s ""http://internal_nexus"" -k=""user:password""

For source location, this can be a folder/file share or an
http location. When it comes to urls, they can be different from the packages
url (where packages are searched and installed from). As an example, for
Chocolatey's community package package repository, the package url is
https://chocolatey.org/api/v2, but the push url is https://push.chocolatey.org
(and the deprecated https://chocolatey.org/ as a push url). Check the
documentation for your choice of repository to learn what the push url is.
For the key, this can be an apikey that is provided by your source repository.
With some sources, like Nexus, this can be a NuGet API key or it could be a
user name and password specified as 'user:password' for the API key. Please see
your repository's documentation (for Nexus, please see
https://bit.ly/nexus2apikey).
NOTE: See scripting in how to pass arguments (choco -?) for how to
write proper scripts and integrations.
Connecting to Chocolatey.org (Community Package Repository)
In order to save your API key for https://push.chocolatey.org/,
log in (or register, confirm and then log in) to
https://push.chocolatey.org/, go to https://push.chocolatey.org/account,
copy the API Key, and then use it in the following command:
choco apikey -k <your key here> -s https://push.chocolatey.org/

Exit Codes
Exit codes that normally result from running this command.
Normal:

0: operation was successful, no issues detected
-1 or 1: an error has occurred

If you find other exit codes that we have not yet documented, please
file a ticket so we can document it at
https://github.com/chocolatey/choco/issues/new/choose.
Options and Switches
NOTE: Options and switches apply to all items passed, so if you are
running a command like install that allows installing multiple
packages, and you use --version=1.0.0, it is going to look for and
try to install version 1.0.0 of every package passed. So please split
out multiple package calls when wanting to pass specific options.
Includes default options/switches (included below for completeness).

 -?, --help, -h
     Prints out the help menu.

 -d, --debug
     Debug - Show debug messaging.

 -v, --verbose
     Verbose - Show verbose messaging. Very verbose messaging, avoid using
       under normal circumstances.

     --trace
     Trace - Show trace messaging. Very, very verbose trace messaging. Avoid
       except when needing super low-level .NET Framework debugging. Available
       in 0.10.4+.

     --nocolor, --no-color
     No Color - Do not show colorization in logging output. This overrides
       the feature 'logWithoutColor', set to 'False'. Available in 0.10.9+.

     --acceptlicense, --accept-license
     AcceptLicense - Accept license dialogs automatically. Reserved for
       future use.

 -y, --yes, --confirm
     Confirm all prompts - Chooses affirmative answer instead of prompting.
       Implies --accept-license

 -f, --force
     Force - force the behavior. Do not use force during normal operation -
       it subverts some of the smart behavior for commands.

     --noop, --whatif, --what-if
     NoOp / WhatIf - Don't actually do anything.

 -r, --limitoutput, --limit-output
     LimitOutput - Limit the output to essential information

     --timeout, --execution-timeout=VALUE
     CommandExecutionTimeout (in seconds) - The time to allow a command to
       finish before timing out. Overrides the default execution timeout in the
       configuration of 2700 seconds. '0' for infinite starting in 0.10.4.

 -c, --cache, --cachelocation, --cache-location=VALUE
     CacheLocation - Location for download cache, defaults to %TEMP% or value
       in chocolatey.config file.

     --allowunofficial, --allow-unofficial, --allowunofficialbuild, --allow-unofficial-build
     AllowUnofficialBuild - When not using the official build you must set
       this flag for choco to continue.

     --failstderr, --failonstderr, --fail-on-stderr, --fail-on-standard-error, --fail-on-error-output
     FailOnStandardError - Fail on standard error output (stderr), typically
       received when running external commands during install providers. This
       overrides the feature failOnStandardError.

     --use-system-powershell
     UseSystemPowerShell - Execute PowerShell using an external process
       instead of the built-in PowerShell host. Should only be used when
       internal host is failing. Available in 0.9.10+.

     --no-progress
     Do Not Show Progress - Do not show download progress percentages.
       Available in 0.10.4+.

     --proxy=VALUE
     Proxy Location - Explicit proxy location. Overrides the default proxy
       location of ''. Available for config settings in 0.9.9.9+, this CLI
       option available in 0.10.4+.

     --proxy-user=VALUE
     Proxy User Name - Explicit proxy user (optional). Requires explicity
       proxy (`--proxy` or config setting). Overrides the default proxy user of
       '123'. Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-password=VALUE
     Proxy Password - Explicit proxy password (optional) to be used with
       username. Requires explicity proxy (`--proxy` or config setting) and
       user name.  Overrides the default proxy password (encrypted in settings
       if set). Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-bypass-list=VALUE
     ProxyBypassList - Comma separated list of regex locations to bypass on
       proxy. Requires explicity proxy (`--proxy` or config setting). Overrides
       the default proxy bypass list of ''. Available in 0.10.4+.

     --proxy-bypass-on-local
     Proxy Bypass On Local - Bypass proxy for local connections. Requires
       explicity proxy (`--proxy` or config setting). Overrides the default
       proxy bypass on local setting of 'True'. Available in 0.10.4+.

     --log-file=VALUE
     Log File to output to in addition to regular loggers. Available in 0.1-
       0.8+.

 -s, --source=VALUE
     Source [REQUIRED] - The source location for the key

 -k, --key, --apikey, --api-key=VALUE
     ApiKey - The API key for the source. This is the authentication that
       identifies you and allows you to push to a source. With some sources
       this is either a key or it could be a user name and password specified
       as 'user:password'.

     --rem, --remove
     Removes an API key from Chocolatey


Command Reference
NOTE: This documentation has been automatically generated from choco apikey -h.












Overview

About
Getting Started Guide
Why Chocolatey
How Chocolatey Works
Security
Privacy Policy
Kickstarter
Partner
Customer Stories




Product

Solution: Self-Service Anywhere
Solution: Quick Deployment Environment (QDE)
Chocolatey for Business
Pro Edition
Open Source
C4B Trial
Pricing
Support
Community Packages
Events




Learn

Resource Library
Events
COVID-19 Resources
Docs
Videos
Case Studies
Courses
Blog 
Media Kit
Sitemap




Connect

Contact Us
Support
Newsletter
Shop
Report a Bug
Status
Careers



Follow Chocolatey Software on Twitter



Follow Chocolatey Software on Facebook



Find Chocolatey Software on GitHub



Subscribe to Chocolatey Software on YouTube









© 2020 Chocolatey Software, Inc.
Deployed from 16d5ee0bdb. You are on web.2. Page generated 25 Sep 2020 08:27:43 +00:00.





Chocolatey.org uses cookies to enhance the user experience of the site.

        I accept
    

        I accept
    









",,"# choco-apikey

> Manage API keys for Chocolatey sources.
> More information: <https://chocolatey.org/docs/commands-apikey>.

- Display a list of sources and their API keys:

`choco apikey`

- Display a specific source and its API key:

`choco apikey --source ""{{source_url}}""`

- Set an API key for a source:

`choco apikey --source ""{{source_url}}"" --key ""{{api_key}}""`

- Remove an API key for a source:

`choco apikey --source ""{{source_url}}"" --remove`
"
shutdown,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/shutdown,"





































shutdown | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















shutdown


10/16/2017

3 minutes to read








+3





In this article


Enables you to shut down or restart local or remote computers one at a time.
Syntax
shutdown [/i | /l | /s | /r | /a | /p | /h | /e] [/f] [/m \\<ComputerName>] [/t <XXX>] [/d [p|u:]<XX>:<YY> [/c ""descriptive comment""]]

Parameters



Parameter
Description




/i
Displays the Remote Shutdown Dialog box. The /i option must be the first parameter following the command. If /i is specified, all other options are ignored.


/l
Logs off the current user immediately, with no time-out period. You cannot use /l with /m or /t.


/s
Shuts down the computer.


/r
Restarts the computer after shutdown.


/a
Aborts a system shutdown. Effective only during the timeout period. To use /a, you must also use the /m option.


/p
Turns off the local computer only (not a remote computer)âwith no time-out period or warning. You can use /p only with /d or /f. If your computer does not support power-off functionality, it will shut down when you use /p, but the power to the computer will remain on.


/h
Puts the local computer into hibernation, if hibernation is enabled. You can use /h only with /f.


/e
Enables you to document the reason for the unexpected shutdown on the target computer.


/f
Forces running applications to close without warning users.Caution: Using the /f option might result in loss of unsaved data.


/m \\<ComputerName>
Specifies the target computer. Cannot be used with the /l option.


/t <XXX>
Sets the time-out period or delay to XXX seconds before a restart or shutdown. This causes a warning to display on the local console. You can specify 0-600 seconds. If you do not use /t, the time-out period is 30 seconds by default.


/d [p|u:]<XX>:<YY>
Lists the reason for the system restart or shutdown. The following are the parameter values:p Indicates that the restart or shutdown is planned.u Indicates that the reason is user defined.Note: If p or u are not specified, the restart or shutdown is unplanned.XX Specifies the major reason number (positive integer less than 256).YY Specifies the minor reason number (positive integer less than 65536).


/c <Comment>
Enables you to comment in detail about the reason for the shutdown. You must first provide a reason by using the /d option. You must enclose comments in quotation marks. You can use a maximum of 511 characters.


/?
Displays help at the command prompt, including a list of the major and minor reasons that are defined on your local computer.



Remarks

Users must be assigned the Shut down the system user right to shut down a local or remotely administered computer that is using the shutdown command.
Users must be members of the Administrators group to annotate an unexpected shutdown of a local or remotely administered computer. If the target computer is joined to a domain, members of the Domain Admins group might be able to perform this procedure. For more information, see:

Default local groups
Default groups


If you want to shut down more than one computer at a time, you can call shutdown for each computer by using a script, or you can use shutdown /i to display the Remote Shutdown Dialog box.
If you specify major and minor reason codes, you must first define these reason codes on each computer where you plan to use the reasons. If the reason codes are not defined on the target computer, Shutdown Event Tracker cannot log the correct reason text.
Remember to indicate that a shutdown is planned by using the p: parameter. Omitting p: indicates that a shutdown is unplanned. If you type p: followed by the reason code for an unplanned shutdown, the command will not carry out the shutdown. Conversely, if you omit p: and type in the reason code for a planned shutdown, the command will not carry out the shutdown.

Examples
To force applications to close and restart the local computer after a one-minute delay with the reason Application: Maintenance (Planned) and the comment Reconfiguring myapp.exe type:
shutdown /r /t 60 /c ""Reconfiguring myapp.exe"" /f /d p:4:1

To restart the remote computer \\ServerName with the same parameters, type:
shutdown /r /m \\servername /t 60 /c ""Reconfiguring myapp.exe"" /f /d p:4:1

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
SHUTDOWN(8)		  BSD System Manager's Manual		   SHUTDOWN(8)

NAME
     shutdown -- close down the system at a given time

SYNOPSIS
     shutdown [-] [-h [-u] | -r | -s | -k] [-o [-n]] time
	      [warning-message ...]

DESCRIPTION
     The shutdown utility provides an automated shutdown procedure for super-
     users to nicely notify users when the system is shutting down, saving
     them from system administrators, hackers, and gurus, who would otherwise
     not bother with such niceties.

     The following options are available:

     -h      The system is halted at the specified time.

     -k      Kick everybody off.  The -k option does not actually halt the
	     system, but leaves the system multi-user with logins disabled
	     (for all but super-user).

     -n      If the -o is specified, prevent the file system cache from being
	     flushed by passing -n option to halt(8) or reboot(8).  This
	     option should probably not be used.

     -o      If -h or -r is specified, shutdown will execute halt(8) or
	     reboot(8) instead of sending a signal to launchd(8).

     -r      The system is rebooted at the specified time.

     -s      The system is put to sleep at the specified time.

     -u      The system is halted up until the point of removing system power,
	     but waits before removing power for 5 minutes so that an external
	     UPS (uninterruptible power supply) can forcibly remove power.
	     This simulates a dirty shutdown to permit a later automatic power
	     on. OS X uses this mode automatically with supported UPSs in
	     emergency shutdowns.

     time    Time is the time at which shutdown will bring the system down and
	     may be the word now (indicating an immediate shutdown) or specify
	     a future time in one of two formats: +number, or yymmddhhmm,
	     where the year, month, and day may be defaulted to the current
	     system values.  The first form brings the system down in number
	     minutes and the second at the absolute time specified.

     warning-message
	     Any other arguments comprise the warning message that is broad-
	     cast to users currently logged into the system.

     -	     If `-' is supplied as an option, the warning message is read from
	     the standard input.

     At intervals, becoming more frequent as apocalypse approaches and start-
     ing at ten hours before shutdown, warning messages are displayed on the
     terminals of all users logged in.

     At shutdown time a message is written to the system log, containing the
     time of shutdown, the person who initiated the shutdown and the reason.
     Corresponding signal is then sent to launchd(8) to respectively halt,
     reboot or bring the system down to single-user state (depending on the
     above options).

     A scheduled shutdown can be canceled by killing the shutdown process (a
     SIGTERM should suffice).

SIGTERM TO SIGKILL INTERVAL
     Upon shutdown, all running processes are sent a SIGTERM followed by a
     SIGKILL.  The SIGKILL will follow the SIGTERM by an intentionally inde-
     terminate period of time.	Programs are expected to take only enough time
     to flush all dirty data and exit.	Developers are encouraged to file a
     bug with the OS vendor, should they encounter an issue with this func-
     tionality.

SEE ALSO
     kill(1), login(1), wall(1), halt(8), launchd(8), reboot(8)

BACKWARD COMPATIBILITY
     The hours and minutes in the second time format may be separated by a
     colon (``:'') for backward compatibility.

HISTORY
     The shutdown utility appeared in 4.0BSD.

BSD			       December 11, 1998			   BSD
","# shutdown

> A tool for shutting down, restarting or logging off a machine.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/shutdown>.

- Shutdown the current machine:

`shutdown /s`

- Shutdown the current machine force-closing all apps:

`shutdown /s /f`

- Restart the current machine:

`shutdown /r`

- Hibernate the current machine:

`shutdown /h`

- Log off the current machine:

`shutdown /l`

- Specify a timeout in seconds to wait before shutting down:

`shutdown /s /t {{seconds}}`

- Specify a comment for the shutdown reason:

`shutdown /s /c ""{{reason}}""`

- Abort a shutdown sequence whose timeout is yet to expire:

`shutdown /a`

- Shutdown a remote machine:

`shutdown /m {{\\hostname}}`
"
driverquery,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/driverquery,"





































driverquery | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















driverquery


10/16/2017

2 minutes to read








+1





In this article


Enables an administrator to display a list of installed device drivers and their properties. If used without parameters, driverquery runs on the local computer.
Syntax
driverquery [/s <system> [/u [<domain>\]<username> [/p <password>]]] [/fo {table | list | csv}] [/nh] [/v | /si]

Parameters



Parameter
Description




/s <system>
Specifies the name or IP address of a remote computer. Do not use backslashes. The default is the local computer.


/u [<domain>]<username>
Runs the command with the credentials of the user account as specified by user or domain\user. By default, /s uses the credentials of the user who is currently logged on to the computer that is issuing the command. /u can't be used unless /s is specified.


/p <password>
Specifies the password of the user account that is specified in the /u parameter. /p cannot be used unless /u is specified.


/fo table
Formats the output as a table. This is the default.


/fo list
Formats the output as a list.


/fo csv
Formats the output with comma-separated values.


/nh
Omits the header row from the displayed driver information. Not valid if the /fo parameter is set to list.


/v
Displays verbose output. /v is not valid for signed drivers.


/si
Provides information about signed drivers.


/?
Displays help at the command prompt.



Examples
To display a list of installed device drivers on the local computer, type:
driverquery

To display the output in a comma-separated values (CSV) format, type:
driverquery /fo csv

To hide the header row in the output, type:
driverquery /nh

To use the driverquery command on a remote server named server1 using your current credentials on the local computer, type:
driverquery /s server1

To use the driverquery command on a remote server named server1 using the credentials for user1 on the domain maindom, type:
driverquery /s server1 /u maindom\user1 /p p@ssw3d

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# driverquery

> Display information about installed device drivers.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/driverquery>.

- Display a list of all installed device drivers:

`driverquery`

- Display a list of drivers in the specified format:

`driverquery /fo {{table|list|csv}}`

- Display a list of drivers with a column to indicate if they are signed:

`driverquery /si`

- Exclude the header in the output list:

`driverquery /nh`

- Display a list of drivers for a remote machine:

`driverquery /s {{hostname}} /u {{username}} /p {{password}}`

- Display a list of drivers with verbose information:

`driverquery /v`

- Display detailed usage information:

`driverquery /?`
"
logoff,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/logoff,"





































logoff | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















logoff


10/16/2017

2 minutes to read













In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

Logs off a user from a session on a Remote Desktop Session Host server and deletes the session.
Syntax
logoff [<sessionname> | <sessionID>] [/server:<servername>] [/v]

Parameters



Parameter
Description




<sessionname>
Specifies the name of the session. This must be an active session.


<sessionID>
Specifies the numeric ID which identifies the session to the server.


/server:<servername>
Specifies the Remote Desktop Session Host server that contains the session whose user you want to log off. If unspecified, the server on which you are currently active is used.


/v
Displays information about the actions being performed.


/?
Displays help at the command prompt.



Remarks

You can always log off yourself from the session to which you are currently logged on. You must, however, have Full Control permission to log off users from other sessions.

Logging off a user from a session without warning can result in loss of data at the user's session. You should send a message to the user by using the msg command to warn the user before taking this action.

If <sessionID> or <sessionname> isn't specified, logoff logs the user off from the current session.

After you log off a user, all processes end and the session is deleted from the server.

You can't log off a user from the console session.


Examples
To log off a user from the current session, type:
logoff

To log off a user from a session by using the session's ID, for example session 12, type:
logoff 12

To log off a user from a session by using the name of the session and server, for example session TERM04 on Server1, type:
logoff TERM04 /server:Server1

Additional References

Command-Line Syntax Key

Remote Desktop Services (Terminal Services) Command Reference









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# logoff

> Terminate a login session.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/logoff>.

- Terminate the current session:

`logoff`

- Terminate a session by its name or id:

`logoff {{session_name|session_id}}`

- Terminate a session on a specific server connected through RDP:

`logoff {{session_name|session_id}} /server:{{servername}}`
"
ftype,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/ftype,"





































ftype | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















ftype


10/16/2017

2 minutes to read








+1





In this article


Displays or modifies file types that are used in file name extension associations. If used without an assignment operator (=), this command displays the current open command string for the specified file type. If used without parameters, this command displays the file types that have open command strings defined.

Note
This command is only supported within cmd.exe and is not available from PowerShell.
Though you can use cmd /c ftype as a workaround.

Syntax
ftype [<filetype>[=[<opencommandstring>]]]

Parameters



Parameter
Description




<filetype>
Specifies the file type to display or change.


<opencommandstring>
Specifies the open command string to use when opening files of the specified file type.


/?
Displays help at the command prompt.



Remarks
The following table describes how ftype substitutes variables within an open command string:



Variable
Replacement value




%0 or %1
Gets substituted with the file name being launched through the association.


%*
Gets all of the parameters.


%2, %3, ...
Gets the first parameter (%2), the second parameter (%3), and so on.


%~<n>
Gets all of the remaining parameters starting with the nth parameter, where n can be any number from 2 to 9.



Examples
To display the current file types that have open command strings defined, type:
ftype

To display the current open command string for the txtfile file type, type:
ftype txtfile

This command produces output similar to the following:
txtfile=%SystemRoot%\system32\NOTEPAD.EXE %1
To delete the open command string for a file type called example, type:
ftype example=

To associate the .pl file name extension with the PerlScript file type and enable the PerlScript file type to run PERL.EXE, type the following commands:
assoc .pl=PerlScript
ftype PerlScript=perl.exe %1 %*

To eliminate the need to type the .pl file name extension when invoking a Perl script, type:
set PATHEXT=.pl;%PATHEXT%

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# ftype

> Display or modify file types used for file extension association.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/ftype>.

- Display a list of all file types:

`ftype`

- Display the associated program for a specific file type:

`ftype {{file_type}}`

- Set the associated program for a specific file type:

`ftype {{file_type}}=""{{path/to/executable_command}}""`
"
choco,https://chocolatey.org,"




Chocolatey Software | Chocolatey - The package manager for Windows




































Here's how we're responding to COVID-19 plus resources to help

×













Resources
Watch videos, read documentation, and hear Chocolatey success stories from companies you trust.
View Resources






Events
Find past and upcoming webinars, workshops, and conferences. New events have recently been added!
View Events






Courses
Step-by-step guides for all things Chocolatey! Earn badges as you learn through interactive digital courses.
View Courses











Tuesday, 22 September 20203 PM BST/GMT+1 / 4 PM CEST / 9 AM Central / 10 AM Eastern

            Standardising tool sets across different Teams is not always easy... especially when different Teams have traditionally used different approaches and methodologies.
            In this webinar we will unpack the advantages of a more standard, consistent approach with Puppet & Chocolatey.
        
Register Now






Webinar Replay fromTuesday, 23 June 2020
Chocolatey Central Management now includes the premiere feature of managing endpoints through a Chocolatey-centered solution aka Deployments. We are excited to share what Deployments is all about!
Learn More
Watch Now



COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.
Find Resources






Chocolatey for Business Feature Video Series

            In this video series, come take a tour of the many features available in our Chocolatey for Business offering.
            Many organizations choose Chocolatey for Business when they want to scale out their solution across thousands of nodes, deploy rapidly and reliably every time,
            mitigate risks with a greatly-simplified patching workflow, and access a Support Team that will guide you on your automation journey.
        
Watch the Series

































id:searchValue search by id only
tag:searchValue search by tags













Overview




 Go Back
Overview




Why Chocolatey?
Chocolatey is a software management solution unlike anything else you've ever experienced on Windows. Chocolatey brings the concepts of true package management to allow you to version things, manage dependencies and installation order, better inventory management, and other features.

How Chocolatey Works




Use Cases
Server
Desktop
Cloud / Containers
Integrations




Customer Stories
Puppet
Yelp
CME Group







Product




 Go Back
Product




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.


Pro Edition
Pro is a personal, named license that grants having licensed versions of Chocolatey on up to 8 machines and provides the ultimate Chocolatey experience!


Open Source
Chocolatey has the largest online registry of Windows packages. Learn how Open Source Chocolatey can support your next project.






Compare Editions
Learn the difference between the Chocolatey Editions and what will fit your needs the best.

Pricing
Try Chocolatey for Business Free

Purchase
I'm ready to get started now!

Support





Events
Find past and upcoming webinars, workshops, and conferences.








Solutions




 Go Back
Solutions




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.






Self-Service Anywhere

                                                Chocolatey provides a unique approach to managing your end-user software (desktops / laptops) and can be combined with your existing solutions.
                                                Chocolatey for Business (C4B) enables better security, enhanced visibility with centralized reporting, and a self-service GUI. Self-Service Anywhere allows non-administrators to easily access and manage IT approved software from the office, from home, or anywhere they have an internet connection.
                                            






Quick Deployment Environment (QDE)

                                                The Quick Deployment Environment (QDE) provides a single virtual machine appliance to be imported into your hypervisor-of-choice, which contains most of the various components of a Chocolatey organizational solution. Deploy recommended architecture in 2-3 hours.
                                            








Community




 Go Back
Community




Community Packages
Search the largest online registry of Windows packages. Chocolatey packages encapsulate everything required to manage a particular piece of software into one deployment artifact by wrapping installers, executables, zips, and scripts into a compiled package file.





Community Resources
Chocolatey on GitHub
Blog





Events
Find past and upcoming webinars, workshops, and conferences.








Learn




 Go Back
Learn




Install Chocolatey
Get step-by-step instructions on how to install Chocolatey.


Getting Started Course
New to Chocolatey? Learn the requirements and how to get Chocolatey up and running in no time!





Resource Library
Docs
Videos
Case Studies
Courses
Media Kit





Events
Find past and upcoming webinars, workshops, and conferences.


COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.


Support
Need help? Read our Support FAQ to find out the next steps.

Blog
Newsletter







Partners




 Go Back
Partners



Overview
Become a Partner




Technology Partners
Resellers







About




 Go Back
About




About Chocolatey
Chocolatey Software is focused on helping our community, customers, and partners with solutions that help fill the gaps that are often ignored. We offer a simple, pragmatic, and open approach to software management.





Careers
Contact






















id:searchValue search by id only
tag:searchValue search by tags











Install Now
Install Now









The Package Manager for Windows
Modern Software Automation
Why Chocolatey
Get Started
Find Packages





Chocolatey Central Management Deployments
Learn More About Chocolatey for Business







Groups / Collections
Target collections of computers and sub-groups of computers to manage







Multi-Step
Manage multiple steps across different computers with Chocolatey packages and full PowerShell scripts







Reports
Monitor deployment progress live and capture reports after completion suitable for all organization staff levels











WEBINAR
Chocolatey Deployments -Easily Orchestrate Amazing Things!
Chocolatey Deployments -Easily Orchestrate Amazing Things!





Gary Ewan Park
Senior Software Engineer at Chocolatey












Rob Reynolds
Chocolatey Founder





                Chocolatey Central Management now includes the premiere feature of managing endpoints through a Chocolatey-centered solution aka Deployments. We are excited to share what Deployments is all about!
            

Watch On-Demand Now
Read The Blog | Learn More

















Choose from Thousands of Community Packages


Chocolatey has the largest online registry of Windows packages. Chocolatey packages encapsulate everything required to manage a particular piece of software into one deployment artifact by wrapping installers, executables, zips, and/or scripts into a compiled package file.
Package submissions go through a rigorous moderation review process, including automatic virus scanning. The community repository has a strict policy on malicious and pirated software. Read more.

Search Chocolatey Packages





/
Unique Packages / Total Packages





Total Community Package Installs





Known Good Packages












Chocolatey for Business (C4B)


Chocolatey for Business (C4B) is Complete Software Management focused on three value-added areas - improved security, enhanced productivity features, and enabling more visibility. C4B is also backed with dedicated support, services, and roadmap.

Closely aligned to organizational use cases – rapid deployment & highly scalable
More visual interfaces (GUIs) & smoother user experience
Special advanced functionality i.e Package Creation, Package Internalizer, Package Audit, Package Synchronizer, Self-Service Installer
Easy migration path from open source
Deep integration with leading technologies

Chocolatey for Business (C4B) has helped hundreds of system admins save time, reduce downtime, and accelerate deployment.

Start Free Trial












×










The two things I love the most are Package Builder and Package Internalizer. Both have saved us time and effort to bring the tools in to a non-interconnected area.
Qualcomm
Dwight Bragdon, Senior Staff IT Engineer













The Sane Way to Manage Software on Windows


System engineers spend hours deploying & configuring Windows software manually. Traditional tools are not built for modern automation and a DevOps approach, which can make achieving consistency and gaining insights across your environment difficult.
There are a lot of different installer formats and multiple approaches to deploying Windows software. Deploying software without package management on Windows can be complicated and time-consuming.
Chocolatey simplifies this through a simple, repeatable, and automated approach, by using a universal packaging format for managing all Windows software. It doesn't matter if you are using native installers, zips, scripts, binaries or in-house developed applications and tools – Chocolatey treats them as all 1st class citizens.
Write once, deploy anywhere, with anything, and then simply track & manage.

See Integrations





&times

-


                                    > choco install docker-desktop








Previous



Next








Businesses Trust Chocolatey Software

            Many organizations face the ongoing challenge of deploying and supporting various versions of software. Chocolatey allows organizations to automate and simplify
            the management of their complex Windows environments. Our customers have experienced a massive reduction in effort, improved speed of deployment, high reliability, and comprehensive reporting.
        


























Ryan de Temple
Client Platform Manager at Yelp


We wanted to make sure our user experience was seamless. We wanted to provide a service, software, configuration- without user intervention, without restarts... Chocolatey allowed our engineers to build the products, to build the pipeline and deliver just that.






















Mike Lombardi
Software Engineer at Puppet


The single biggest thing I love about Chocolatey has to be the ease of use and reusablility. That has made all the difference for me. I don't have to remember 37 different ways to interact with my software... just the one- and that's it!










Previous



Next

















































































View Customer Stories








Keep Up with the Latest Chocolatey Resources






Case Study








How I Completely Automated Managing Windows Desktop Software...Forever









Video








What is Chocolatey?









Customer Success Story








Puppet
Mike Lombardi, Software Engineer






View All Resources












Chocolatey Courses


                Whether you are looking to create your first package or planning to fully automate your entire Windows Lifecycle. Its time to step out of the dark ages and stop doing things manually. 
                Reduce complexity, save yourself time, and get up to speed on the latest technologies and approaches.
            
Even if you are new to automation or a Chocolatey expert, our courses are designed to get you up to speed easily.

Interactive courses with quizzes on each module
Self-paced with practical exercises
Earn badges for each course you have completed, and share on your profile

Start Learning










Signup for the Newsletter!








Subscribe




Be the first to know about upcoming features, security releases, and news about Chocolatey.







Overview

About
Getting Started Guide
Why Chocolatey
How Chocolatey Works
Security
Privacy Policy
Kickstarter
Partner
Customer Stories




Product

Solution: Self-Service Anywhere
Solution: Quick Deployment Environment (QDE)
Chocolatey for Business
Pro Edition
Open Source
C4B Trial
Pricing
Support
Community Packages
Events




Learn

Resource Library
Events
COVID-19 Resources
Docs
Videos
Case Studies
Courses
Blog 
Media Kit
Sitemap




Connect

Contact Us
Support
Newsletter
Shop
Report a Bug
Status
Careers



Follow Chocolatey Software on Twitter



Follow Chocolatey Software on Facebook



Find Chocolatey Software on GitHub



Subscribe to Chocolatey Software on YouTube









© 2020 Chocolatey Software, Inc.
Deployed from 16d5ee0bdb. You are on web.2. Page generated 25 Sep 2020 05:14:36 +00:00.





Chocolatey.org uses cookies to enhance the user experience of the site.

        I accept
    

        I accept
    





",,"# choco

> A command line interface for the Chocolatey package manager.
> See `choco install`, `choco upgrade` and other pages for additional information.
> More information: <https://chocolatey.org>.

- Execute Chocolatey command:

`choco {{command}}`

- Call general help:

`choco -?`

- Call help on a specific command:

`choco {{command}} -?`

- Check the Chocolatey version:

`choco --version`
"
reg-flags,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-flags,"




























404 - Content Not Found | Microsoft Docs












Skip to main content














 













				404 - Page not found
			
Hmm, we couldn't find this link, but here are some related  search results that may be helpful.






























































Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# reg flags

> Display or set flags on registry keys.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-flags>.

- Display current flags for a specific key:

`reg flags {{key_name}} query`

- Display help and available flag types:

`reg flags /?`

- Set specified space-separated flags, and unset unmentioned flags, for a specific key:

`reg flags {{key_name}} set {{flag_names}}`

- Set specified flags for a specific key and its sub keys:

`reg flags {{key_name}} set {{flag_names}} /s`
"
type,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/type,"




































type | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















type


9/9/2020

2 minutes to read








+2





In this article


In the Windows Command shell, type is a built in command which displays the contents of a text file. Use the type command to view a text file without modifying it.
In PowerShell, type is a built-in alias to the Get-Content cmdlet which also displays the contents of a file, but with a different syntax.
Syntax
type [<Drive>:][<Path>]<FileName>

Parameters



Parameter
Description




[<Drive>:][<Path>]<FileName>
Specifies the location and name of the file or files that you want to view. Separate multiple file names with spaces.


/?
Displays help at the command prompt.



Remarks

If FileName contains spaces, enclose it in quotation marks (for example, File Name Containing Spaces.txt).
If you display a binary file or a file that is created by a program, you may see strange characters on the screen, including formfeed characters and escape-sequence symbols. These characters represent control codes that are used in the binary file. In general, avoid using the type command to display binary files.

Examples
To display the contents of a file named Holiday.mar, type:
type holiday.mar

To display the contents of a lengthy file named Holiday.mar one screen at a time, type:
type holiday.mar | more

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
BUILTIN(1)		  BSD General Commands Manual		    BUILTIN(1)

NAME
     builtin, !, %, ., :, @, {, }, alias, alloc, bg, bind, bindkey, break,
     breaksw, builtins, case, cd, chdir, command, complete, continue, default,
     dirs, do, done, echo, echotc, elif, else, end, endif, endsw, esac, eval,
     exec, exit, export, false, fc, fg, filetest, fi, for, foreach, getopts,
     glob, goto, hash, hashstat, history, hup, if, jobid, jobs, kill, limit,
     local, log, login, logout, ls-F, nice, nohup, notify, onintr, popd,
     printenv, pushd, pwd, read, readonly, rehash, repeat, return, sched, set,
     setenv, settc, setty, setvar, shift, source, stop, suspend, switch,
     telltc, test, then, time, times, trap, true, type, ulimit, umask,
     unalias, uncomplete, unhash, unlimit, unset, unsetenv, until, wait,
     where, which, while -- shell built-in commands

SYNOPSIS
     builtin [-options] [args ...]

DESCRIPTION
     Shell builtin commands are commands that can be executed within the run-
     ning shell's process.  Note that, in the case of csh(1) builtin commands,
     the command is executed in a subshell if it occurs as any component of a
     pipeline except the last.

     If a command specified to the shell contains a slash ``/'', the shell
     will not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying ``echo'' causes a builtin command to be executed under shells
     that support the echo builtin command, specifying ``/bin/echo'' or
     ``./echo'' does not.

     While some builtin commands may exist in more than one shell, their oper-
     ation may be different under each shell which supports them.  Below is a
     table which lists shell builtin commands, the standard shells that sup-
     port them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.	Beware that the sh(1) manual page, at least, calls some of
     these commands ``built-in commands'' and some of them ``reserved words''.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked ``No**'' under External do exist externally, but are
     implemented as scripts using a builtin command of the same name.

	   Command	 External    csh(1)    sh(1)
	   !		 No	     No        Yes
	   %		 No	     Yes       No
	   .		 No	     No        Yes
	   :		 No	     Yes       Yes
	   @		 No	     Yes       Yes
	   {		 No	     No        Yes
	   }		 No	     No        Yes
	   alias	 No**	     Yes       Yes
	   alloc	 No	     Yes       No
	   bg		 No**	     Yes       Yes
	   bind 	 No	     No        Yes
	   bindkey	 No	     Yes       No
	   break	 No	     Yes       Yes
	   breaksw	 No	     Yes       No
	   builtin	 No	     No        Yes
	   builtins	 No	     Yes       No
	   case 	 No	     Yes       Yes
	   cd		 No**	     Yes       Yes
	   chdir	 No	     Yes       Yes
	   command	 No**	     No        Yes
	   complete	 No	     Yes       No
	   continue	 No	     Yes       Yes
	   default	 No	     Yes       No
	   dirs 	 No	     Yes       No
	   do		 No	     No        Yes
	   done 	 No	     No        Yes
	   echo 	 Yes	     Yes       Yes
	   echotc	 No	     Yes       No
	   elif 	 No	     No        Yes
	   else 	 No	     Yes       Yes
	   end		 No	     Yes       No
	   endif	 No	     Yes       No
	   endsw	 No	     Yes       No
	   esac 	 No	     No        Yes
	   eval 	 No	     Yes       Yes
	   exec 	 No	     Yes       Yes
	   exit 	 No	     Yes       Yes
	   export	 No	     No        Yes
	   false	 Yes	     No        Yes
	   fc		 No**	     No        Yes
	   fg		 No**	     Yes       Yes
	   filetest	 No	     Yes       No
	   fi		 No	     No        Yes
	   for		 No	     No        Yes
	   foreach	 No	     Yes       No
	   getopts	 No**	     No        Yes
	   glob 	 No	     Yes       No
	   goto 	 No	     Yes       No
	   hash 	 No	     No        Yes
	   hashstat	 No	     Yes       No
	   history	 No	     Yes       No
	   hup		 No	     Yes       No
	   if		 No	     Yes       Yes
	   jobid	 No	     No        Yes
	   jobs 	 No**	     Yes       Yes
	   kill 	 Yes	     Yes       No
	   limit	 No	     Yes       No
	   local	 No	     No        Yes
	   log		 No	     Yes       No
	   login	 Yes	     Yes       No
	   logout	 No	     Yes       No
	   ls-F 	 No	     Yes       No
	   nice 	 Yes	     Yes       No
	   nohup	 Yes	     Yes       No
	   notify	 No	     Yes       No
	   onintr	 No	     Yes       No
	   popd 	 No	     Yes       No
	   printenv	 Yes	     Yes       No
	   pushd	 No	     Yes       No
	   pwd		 Yes	     No        Yes
	   read 	 No**	     No        Yes
	   readonly	 No	     No        Yes
	   rehash	 No	     Yes       No
	   repeat	 No	     Yes       No
	   return	 No	     No        Yes
	   sched	 No	     Yes       No
	   set		 No	     Yes       Yes
	   setenv	 No	     Yes       No
	   settc	 No	     Yes       No
	   setty	 No	     Yes       No
	   setvar	 No	     No        Yes
	   shift	 No	     Yes       Yes
	   source	 No	     Yes       No
	   stop 	 No	     Yes       No
	   suspend	 No	     Yes       No
	   switch	 No	     Yes       No
	   telltc	 No	     Yes       No
	   test 	 Yes	     No        Yes
	   then 	 No	     No        Yes
	   time 	 Yes	     Yes       No
	   times	 No	     No        Yes
	   trap 	 No	     No        Yes
	   true 	 Yes	     No        Yes
	   type 	 No	     No        Yes
	   ulimit	 No	     No        Yes
	   umask	 No**	     Yes       Yes
	   unalias	 No**	     Yes       Yes
	   uncomplete	 No	     Yes       No
	   unhash	 No	     Yes       No
	   unlimit	 No	     Yes       No
	   unset	 No	     Yes       Yes
	   unsetenv	 No	     Yes       No
	   until	 No	     No        Yes
	   wait 	 No**	     Yes       Yes
	   where	 No	     Yes       No
	   which	 Yes	     Yes       No
	   while	 No	     Yes       Yes

SEE ALSO
     csh(1), echo(1), false(1), info(1), kill(1), login(1), nice(1), nohup(1),
     printenv(1), pwd(1), sh(1), test(1), time(1), true(1), which(1)

HISTORY
     The builtin manual page first appeared in FreeBSD 3.4.

AUTHORS
     This manual page was written by Sheldon Hearn <sheldonh@FreeBSD.org>.

BSD			       February 23, 2005			   BSD
","# type

> Display the contents of a file.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/type>.

- Display the contents of a specific file:

`type {{path/to/file}}`
"
getmac,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/getmac,"





































getmac | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















getmac


10/16/2017

2 minutes to read













In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

Returns the media access control (MAC) address and list of network protocols associated with each address for all network cards in each computer, either locally or across a network. This command is particularly useful either when you want to enter the MAC address into a network analyzer, or when you need to know what protocols are currently in use on each network adapter on a computer.
Syntax
getmac[.exe][/s <computer> [/u <domain\<user> [/p <password>]]][/fo {table | list | csv}][/nh][/v]

Parameters



Parameter
Description






/s <computer>
Specifies the name or IP address of a remote computer (do not use backslashes). The default is the local computer.




/u <domain>\<user>
Runs the command with the account permissions of the user specified by user or domain\user. The default is the permissions of the current logged on user on the computer issuing the command.




/p <password>
Specifies the password of the user account that is specified in the /u parameter.




/fo {table
list
csv}
Specifies the format to use for the query output. Valid values are table, list, and csv. The default format for output is table.


/nh
Suppresses column header in output. Valid when the /fo parameter is set to table or csv.




/v
Specifies that the output display verbose information.




/?
Displays help at the command prompt.





Examples
The following examples show how you can use the getmac command:
getmac /fo table /nh /v

getmac /s srvmain

getmac /s srvmain /u maindom\hiropln

getmac /s srvmain /u maindom\hiropln /p p@ssW23

getmac /s srvmain /u maindom\hiropln /p p@ssW23 /fo list /v

getmac /s srvmain /u maindom\hiropln /p p@ssW23 /fo table /nh

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# getmac

> Display the MAC addresses of a system.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/getmac>.

- Display the MAC addresses for the current system:

`getmac`

- Display the details in a specific format:

`getmac /fo {{table|list|csv}}`

- Exclude the header in the output list:

`getmac /nh`

- Display the MAC addresses for a remote machine:

`getmac /s {{hostname}} /u {{username}} /p {{password}}`

- Display the MAC addresses with verbose information:

`getmac /v`

- Display detailed usage information:

`getmac /?`
"
reg-save,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-save,"





































reg save | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















reg save


10/16/2017

2 minutes to read













In this article


Saves a copy of specified subkeys, entries, and values of the registry in a specified file.
Syntax
reg save <keyname> <filename> [/y]

Parameters



Parameter
Description




<keyname>
Specifies the full path of the subkey. To specify a remote computer, include the computer name (in the format \\<computername>\) as part of the keyname. Omitting \\<computername>\ causes the operation to default to the local computer. The keyname must include a valid root key. Valid root keys for the local computer are: HKLM, HKCU, HKCR, HKU, and HKCC. If a remote computer is specified, valid root keys are: HKLM and HKU. If the registry key name contains a space, enclose the key name in quotes.


<filename>
Specifies the name and path of the created file. If no path is specified, the current path is used.


/y
Overwrites an existing file with the name filename without prompting for confirmation.


/?
Displays help at the command prompt.



Remarks

Before editing any registry entries, you must save the parent subkey using the reg save command. If the edit fails, you can then restore the original subkey using the reg restore operation.

The return values for the reg save operation are:



Value
Description




0
Success


1
Failure





Examples
To save the hive MyApp into the current folder as a file named AppBkUp.hiv, type:
reg save HKLM\Software\MyCo\MyApp AppBkUp.hiv

Additional References

Command-Line Syntax Key

reg restore command









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# reg save

> Save a registry key, its sub keys and values to a file.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/reg-save>.

- Save a registry key, its sub keys and values to a specific file:

`reg save {{key_name}} {{path/to/file}}`

- Forcefully overwrite an existing file without a prompt:

`reg save {{key_name}} {{path/to/file}} /y`
"
sigverif,,,,"# sigverif

> A GUI signature verification tool for checking system files.

- Open the File Signature Verification interface:

`sigverif`
"
wsl,https://docs.microsoft.com/en-us/windows/wsl/reference,"





































Windows Subsystem for Linux Command Reference | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















Command Reference for Windows Subsystem for Linux


09/15/2020

3 minutes to read








+2





In this article


The best way to interact with the Windows Subsystem for Linux is to use the wsl.exe command.
Set WSL 2 as your default version
Run the following command in Powershell to set WSL 2 as the default version when installing a new Linux distribution:
wsl --set-default-version 2

Set your distribution version to WSL 1 or WSL 2
You can check the WSL version assigned to each of the Linux distributions you have installed by opening the PowerShell command line and entering the command (only available in Windows Build 19041 or higher): wsl -l -v
wsl --list --verbose

To set a distribution to be backed by either version of WSL please run:
wsl --set-version <distribution name> <versionNumber>

Make sure to replace <distribution name> with the actual name of your distribution and <versionNumber> with the number '1' or '2'. You can change back to WSL 1 at anytime by running the same command as above but replacing the '2' with a '1'.
Additionally, if you want to make WSL 2 your default architecture you can do so with this command:
wsl --set-default-version 2

This will set the version of any new distribution installed to WSL 2.
wsl.exe
Below is a list containing all options when using wsl.exe as of Windows Version 1903.
Using: wsl [Argument] [Options...] [CommandLine]
Arguments for running Linux commands

Without arguments
If no command line is provided, wsl.exe launches the default shell.

--exec, -e <CommandLine>
Execute the specified command without using the default Linux shell.

--
Pass the remaining command line as is.


The above commands also accept the following options:

--distribution, -d <Distro>
Run the specified distribution.

--user, -u <UserName>
Run as the specified user.


Arguments for managing Windows Subsystem for Linux

--export <Distro> <FileName>
Exports the distribution to a tar file. The filename can be - for standard output.

--import <Distro> <InstallLocation> <FileName>
Imports the specified tar file as a new distribution. The filename can be - for standard input.

--list, -l [Options]
Lists distributions.
Options:

--all
List all distributions, including distributions that are currently being installed or uninstalled.

--running
List only distributions that are currently running.



--set-default, -s <Distro>
Sets the distribution as the default.

--terminate, -t <Distro>
Terminates the specified distribution.

--unregister <Distro>
Un-register the distribution.

--help
Display usage information.


Additional Commands
There are also historic commands to interact with the Windows Subsystem for Linux. Their functionality is encompassed within wsl.exe, but they are still available for use.
wslconfig.exe
This command lets you configure your WSL distribution. Below is a list of its options.
Using: wslconfig [Argument] [Options...]
Arguments

/l, /list [Options]
Lists registered distributions.


Options:

/all
Optionally list all distributions, including distributions that are currently being installed or uninstalled.

/running
List only distributions that are currently running.

/s, /setdefault <Distro>
Sets the distribution as the default.

/t, /terminate <Distro>
Terminates the distribution.

/u, /unregister <Distro>
Un-registers the distribution.

/upgrade <Distro>
Upgrades the distribution to the WslFs file system format.


bash.exe
This command is used to start a bash shell. Below are the options you can use with this command.
Using: bash [Options...]

No Option given
Launches the Bash shell in the current directory. If the Bash shell is not installed automatically runs lxrun /install

~
bash ~ launches the bash shell into the user's home directory.  Similar to running cd ~.

-c ""<command>""
Runs the command, prints the output and exits back to the Windows command prompt.
Example:  bash -c ""ls"".


Deprecated Commands
The lxrun.exe was the first command used to install and manage the Windows Subsystem for Linux. It is deprecated as of Windows 10 1803 and later.
The command lxrun.exe can be used to interact with the Windows Subsystem for Linux (WSL) directly.  These commands are installed into the \Windows\System32 directory and may be run within a Windows command prompt or in PowerShell.



Command
Description




lxrun
The lxrun command is used to manage the WSL instance.


lxrun /install
Starts the download and install process.  /y may be added to bypass all prompts.  The confirmation prompt is automatically accepted and the default user is set to root.


lxrun /uninstall
Uninstalls and deletes the Ubuntu image.  By default this does not remove the user's Ubuntu home directory.  /y may be added to automatically accept the confirmation prompt /full uninstalls and deletes the user's Ubuntu home directory


lxrun /setdefaultuser <userName>
Sets the default Bash on Ubuntu user. Will prompt for a password if the specified user does not exist.  For more information visit: https://aka.ms/wslusers.  /y Bypasses promping for the password.  The user will be created without a password.


lxrun /update
Updates the subsystem's package index










Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# wsl

> Manage the Windows Subsystem for Linux from the command line.
> More information: <https://docs.microsoft.com/en-us/windows/wsl/reference>.

- Start a Linux shell (in the default distribution):

`wsl {{shell_command}}`

- Run a Linux command without using a shell:

`wsl --exec {{command}} {{command_arguments}}`

- Specify a particular distribution:

`wsl --distribution {{distribution}} {{shell_command}}`

- List available distributions:

`wsl --list`

- Export a distribution to a .tar file:

`wsl --export {{distribution}} {{path/to/distro_fs.tar}}`

- Import a distribution from a .tar file:

`wsl --import {{distribution}} {{path/to/install_location}} {{path/to/distro_fs.tar}}`

- Shut down Windows Subsystem for Linux:

`wsl --shutdown`
"
cls,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/cls,"





































cls | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















cls


10/16/2017

2 minutes to read













In this article


Clears the Command Prompt window.
Syntax
cls

Parameters



Parameter
Description




/?
Displays help at the command prompt.



Examples
To clear all information that appears in the Command Prompt window and return to a blank window, type:
cls

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# cls

> Clears the screen.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/cls>.

- Clear the screen:

`cls`
"
choco-info,https://chocolatey.org/docs/commands-info,"




Chocolatey Software | Commands Info






































Here's how we're responding to COVID-19 plus resources to help

×













Resources
Watch videos, read documentation, and hear Chocolatey success stories from companies you trust.
View Resources






Events
Find past and upcoming webinars, workshops, and conferences. New events have recently been added!
View Events






Courses
Step-by-step guides for all things Chocolatey! Earn badges as you learn through interactive digital courses.
View Courses











Tuesday, 22 September 20203 PM BST/GMT+1 / 4 PM CEST / 9 AM Central / 10 AM Eastern

            Standardising tool sets across different Teams is not always easy... especially when different Teams have traditionally used different approaches and methodologies.
            In this webinar we will unpack the advantages of a more standard, consistent approach with Puppet & Chocolatey.
        
Register Now






Webinar Replay fromTuesday, 23 June 2020
Chocolatey Central Management now includes the premiere feature of managing endpoints through a Chocolatey-centered solution aka Deployments. We are excited to share what Deployments is all about!
Learn More
Watch Now



COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.
Find Resources






Chocolatey for Business Feature Video Series

            In this video series, come take a tour of the many features available in our Chocolatey for Business offering.
            Many organizations choose Chocolatey for Business when they want to scale out their solution across thousands of nodes, deploy rapidly and reliably every time,
            mitigate risks with a greatly-simplified patching workflow, and access a Support Team that will guide you on your automation journey.
        
Watch the Series

































id:searchValue search by id only
tag:searchValue search by tags













Overview




 Go Back
Overview




Why Chocolatey?
Chocolatey is a software management solution unlike anything else you've ever experienced on Windows. Chocolatey brings the concepts of true package management to allow you to version things, manage dependencies and installation order, better inventory management, and other features.

How Chocolatey Works




Use Cases
Server
Desktop
Cloud / Containers
Integrations




Customer Stories
Puppet
Yelp
CME Group







Product




 Go Back
Product




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.


Pro Edition
Pro is a personal, named license that grants having licensed versions of Chocolatey on up to 8 machines and provides the ultimate Chocolatey experience!


Open Source
Chocolatey has the largest online registry of Windows packages. Learn how Open Source Chocolatey can support your next project.






Compare Editions
Learn the difference between the Chocolatey Editions and what will fit your needs the best.

Pricing
Try Chocolatey for Business Free

Purchase
I'm ready to get started now!

Support





Events
Find past and upcoming webinars, workshops, and conferences.








Solutions




 Go Back
Solutions




Chocolatey for Business
Chocolatey for Business (C4B) is the enterprise offering that enables companies to adopt a DevOps approach to managing their Windows environment, allowing you to deliver applications to your users more reliably and faster.






Self-Service Anywhere

                                                Chocolatey provides a unique approach to managing your end-user software (desktops / laptops) and can be combined with your existing solutions.
                                                Chocolatey for Business (C4B) enables better security, enhanced visibility with centralized reporting, and a self-service GUI. Self-Service Anywhere allows non-administrators to easily access and manage IT approved software from the office, from home, or anywhere they have an internet connection.
                                            






Quick Deployment Environment (QDE)

                                                The Quick Deployment Environment (QDE) provides a single virtual machine appliance to be imported into your hypervisor-of-choice, which contains most of the various components of a Chocolatey organizational solution. Deploy recommended architecture in 2-3 hours.
                                            








Community




 Go Back
Community




Community Packages
Search the largest online registry of Windows packages. Chocolatey packages encapsulate everything required to manage a particular piece of software into one deployment artifact by wrapping installers, executables, zips, and scripts into a compiled package file.





Community Resources
Chocolatey on GitHub
Blog





Events
Find past and upcoming webinars, workshops, and conferences.








Learn




 Go Back
Learn




Install Chocolatey
Get step-by-step instructions on how to install Chocolatey.


Getting Started Course
New to Chocolatey? Learn the requirements and how to get Chocolatey up and running in no time!





Resource Library
Docs
Videos
Case Studies
Courses
Media Kit





Events
Find past and upcoming webinars, workshops, and conferences.


COVID-19 Resources
Chocolatey Software is working harder than ever to provide solutions and resources for our customers and community. We'll continue to add to this area so check back often.


Support
Need help? Read our Support FAQ to find out the next steps.

Blog
Newsletter







Partners




 Go Back
Partners



Overview
Become a Partner




Technology Partners
Resellers







About




 Go Back
About




About Chocolatey
Chocolatey Software is focused on helping our community, customers, and partners with solutions that help fill the gaps that are often ignored. We offer a simple, pragmatic, and open approach to software management.





Careers
Contact







Install Now
Install Now












Videos





Featured Series





Success Stories





Case Studies





Docs





Blog










Documentation Table of Contents


















id:searchValue search by id only
tag:searchValue search by tags





Docs Home
Why Chocolatey?
Security

Features



Free


Create your own packages
Host packages internally
Integrates with everything
Package Shims
Custom Package Templates
Package Extensions




Paid


Self-Service / Background Mode (C4B)
Chocolatey Central Management (C4B)
Package Internalizer (C4B)
Package Builder (C4B)
Package Audit (C4B)
Branding Chocolatey Applications (C4B)
Runtime Malware Protection (Pro+)
Download CDN Cache (Pro+)
Package Reducer (Pro+)
Ubiquitous Install Directory Option (Pro+)
Package Throttle (Pro+)
Package Synchronizer (Pro+ Auto / C4B Sync Command)
Windows Service Management PowerShell Functions (C4B)





General


Release Notes
Licensed Release Notes
Troubleshooting
FAQs
Chocolatey.org Moderation
Chocolatey.org Packages Disclaimer
Software Vendor?


Usage


How to install
How to install licensed edition
Configuration / chocolatey.config
How to uninstall
Getting Started
Proxy Settings

Commands


Passing args to choco
Complete Reference
List / Search
Info
Install
Pin
Outdated
Upgrade
Uninstall
Config
Source / Sources
Feature
Download





Creating Packages


Create Packages
Quick Start

Commands


New
Pack
Apikey
Push




PowerShell References


Function and Variable Reference
Install-ChocolateyPackage
Install-ChocolateyZipPackage
Install-ChocolateyPowershellCommand
Install-ChocolateyVsixPackage
Get-ChocolateyWebFile
Install-ChocolateyInstallPackage



Automatic Packaging


How To's


Use Chocolatey w/Proxy Server
Change Download Cache Location aka Don't use TEMP for downloads
Install/Upgrade a Package w/out running install scripts
Request Package Fixes/Updates
Manually Recompile Packages, Embedding/Internalizing Remote Resources
Request Package
Maintain Packages for My Software
Become a Maintainer
Take Over Package Maintenance Exclusively
Parse Package Parameters
Mount Iso
Create Custom Package Templates
Extend Chocolatey With PowerShell Modules (extensions)
Deprecate a Package
Install licensed edition
Host Your Own Package Repository Server
Set up the Chocolatey.Server
Set up Chocolatey for internal/organizational use
Automate Package Internalizer (MSP/C4B)
C4B Quick Start Guide


Chocolatey GUI


Chocolatey GUI Overview
Chocolatey GUI Branding
Chocolatey GUI Known Issues


Quick Deployment Environment (QDE)


QDE Overview
QDE Setup
QDE Desktop ReadMe Files
QDE SSL/TLS Setup
QDE Firewall Changes
QDE Client Setup
QDE Internet Setup

QDE v1


QDE Setup v1
QDE Desktop ReadMe Files v1
QDE SSL/TLS Setup v1
QDE Firewall Changes v1
QDE Client Setup v1





Chocolatey Central Management (CCM)


Central Management Overview
Central Management Setup
Central Management Client Setup
Central Management Upgrade
Central Management Deployments


Use Cases


Development Environment
Host on MyGet


Learning Resources


Resources
Videos
Presentations


Additional Information


Legal
History









Info Command (choco info)
Chocolatey will perform a search for a package local or remote and provide
detailed information about that package. This is a synonym for
choco search <pkgname> --exact --detailed.
NOTE: New as of 0.9.10.0.


Usage
Examples
Exit Codes
Options and Switches


Usage
choco info [<options/switches>]

Examples
choco info chocolatey
choco info googlechrome
choco info powershell

NOTE: See scripting in how to pass arguments (choco -?) for how to
write proper scripts and integrations.
Exit Codes
Exit codes that normally result from running this command.
Normal:

0: operation was successful, no issues detected
-1 or 1: an error has occurred

Enhanced:

0: operation was successful, no issues detected
-1 or 1: an error has occurred
2: no results (enhanced)

NOTE: Starting in v0.10.12, if you have the feature 'useEnhancedExitCodes'
turned on, then choco will provide enhanced exit codes that allow
better integration and scripting.
If you find other exit codes that we have not yet documented, please
file a ticket so we can document it at
https://github.com/chocolatey/choco/issues/new/choose.
Options and Switches
NOTE: Options and switches apply to all items passed, so if you are
running a command like install that allows installing multiple
packages, and you use --version=1.0.0, it is going to look for and
try to install version 1.0.0 of every package passed. So please split
out multiple package calls when wanting to pass specific options.
Includes default options/switches (included below for completeness).

 -?, --help, -h
     Prints out the help menu.

 -d, --debug
     Debug - Show debug messaging.

 -v, --verbose
     Verbose - Show verbose messaging. Very verbose messaging, avoid using
       under normal circumstances.

     --trace
     Trace - Show trace messaging. Very, very verbose trace messaging. Avoid
       except when needing super low-level .NET Framework debugging. Available
       in 0.10.4+.

     --nocolor, --no-color
     No Color - Do not show colorization in logging output. This overrides
       the feature 'logWithoutColor', set to 'False'. Available in 0.10.9+.

     --acceptlicense, --accept-license
     AcceptLicense - Accept license dialogs automatically. Reserved for
       future use.

 -y, --yes, --confirm
     Confirm all prompts - Chooses affirmative answer instead of prompting.
       Implies --accept-license

 -f, --force
     Force - force the behavior. Do not use force during normal operation -
       it subverts some of the smart behavior for commands.

     --noop, --whatif, --what-if
     NoOp / WhatIf - Don't actually do anything.

 -r, --limitoutput, --limit-output
     LimitOutput - Limit the output to essential information

     --timeout, --execution-timeout=VALUE
     CommandExecutionTimeout (in seconds) - The time to allow a command to
       finish before timing out. Overrides the default execution timeout in the
       configuration of 2700 seconds. '0' for infinite starting in 0.10.4.

 -c, --cache, --cachelocation, --cache-location=VALUE
     CacheLocation - Location for download cache, defaults to %TEMP% or value
       in chocolatey.config file.

     --allowunofficial, --allow-unofficial, --allowunofficialbuild, --allow-unofficial-build
     AllowUnofficialBuild - When not using the official build you must set
       this flag for choco to continue.

     --failstderr, --failonstderr, --fail-on-stderr, --fail-on-standard-error, --fail-on-error-output
     FailOnStandardError - Fail on standard error output (stderr), typically
       received when running external commands during install providers. This
       overrides the feature failOnStandardError.

     --use-system-powershell
     UseSystemPowerShell - Execute PowerShell using an external process
       instead of the built-in PowerShell host. Should only be used when
       internal host is failing. Available in 0.9.10+.

     --no-progress
     Do Not Show Progress - Do not show download progress percentages.
       Available in 0.10.4+.

     --proxy=VALUE
     Proxy Location - Explicit proxy location. Overrides the default proxy
       location of ''. Available for config settings in 0.9.9.9+, this CLI
       option available in 0.10.4+.

     --proxy-user=VALUE
     Proxy User Name - Explicit proxy user (optional). Requires explicity
       proxy (`--proxy` or config setting). Overrides the default proxy user of
       '123'. Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-password=VALUE
     Proxy Password - Explicit proxy password (optional) to be used with
       username. Requires explicity proxy (`--proxy` or config setting) and
       user name.  Overrides the default proxy password (encrypted in settings
       if set). Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-bypass-list=VALUE
     ProxyBypassList - Comma separated list of regex locations to bypass on
       proxy. Requires explicity proxy (`--proxy` or config setting). Overrides
       the default proxy bypass list of ''. Available in 0.10.4+.

     --proxy-bypass-on-local
     Proxy Bypass On Local - Bypass proxy for local connections. Requires
       explicity proxy (`--proxy` or config setting). Overrides the default
       proxy bypass on local setting of 'True'. Available in 0.10.4+.

     --log-file=VALUE
     Log File to output to in addition to regular loggers. Available in 0.1-
       0.8+.

 -s, --source=VALUE
     Source - Source location for install. Can use special 'webpi' or
       'windowsfeatures' sources. Defaults to sources.

 -l, --lo, --localonly, --local-only
     LocalOnly - Only search against local machine items.

     --version=VALUE
     Version - Specific version of a package to return.

     --pre, --prerelease
     Prerelease - Include Prereleases? Defaults to false.

 -u, --user=VALUE
     User - used with authenticated feeds. Defaults to empty.

 -p, --password=VALUE
     Password - the user's password to the source. Defaults to empty.

     --cert=VALUE
     Client certificate - PFX pathname for an x509 authenticated feeds.
       Defaults to empty. Available in 0.9.10+.

     --cp, --certpassword=VALUE
     Certificate Password - the client certificate's password to the source.
       Defaults to empty. Available in 0.9.10+.


Command Reference
NOTE: This documentation has been automatically generated from choco info -h.












Overview

About
Getting Started Guide
Why Chocolatey
How Chocolatey Works
Security
Privacy Policy
Kickstarter
Partner
Customer Stories




Product

Solution: Self-Service Anywhere
Solution: Quick Deployment Environment (QDE)
Chocolatey for Business
Pro Edition
Open Source
C4B Trial
Pricing
Support
Community Packages
Events




Learn

Resource Library
Events
COVID-19 Resources
Docs
Videos
Case Studies
Courses
Blog 
Media Kit
Sitemap




Connect

Contact Us
Support
Newsletter
Shop
Report a Bug
Status
Careers



Follow Chocolatey Software on Twitter



Follow Chocolatey Software on Facebook



Find Chocolatey Software on GitHub



Subscribe to Chocolatey Software on YouTube









© 2020 Chocolatey Software, Inc.
Deployed from 16d5ee0bdb. You are on web.3. Page generated 25 Sep 2020 08:27:44 +00:00.





Chocolatey.org uses cookies to enhance the user experience of the site.

        I accept
    

        I accept
    









",,"# choco info

> Display detailed information about a package with Chocolatey.
> More information: <https://chocolatey.org/docs/commands-info>.

- Display information on a specific package:

`choco info {{package}}`

- Display information for a local package only:

`choco info {{package}} --local-only`

- Specify a custom source to receive packages information from:

`choco info {{package}} --source {{source_url|alias}}`

- Provide a username and password for authentication:

`choco info {{package}} --user {{username}} --password {{password}}`
"
pwlauncher,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/pwlauncher,"





































pwlauncher | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















pwlauncher


10/16/2017

2 minutes to read








+1





In this article


Enables or disables the Windows To Go Startup Options (pwlauncher). The pwlauncher command-line tool allows you to configure the computer to boot into a Windows To Go workspace automatically (assuming one is present), without requiring you to enter your firmware or change your startup options.
Windows To Go Startup Options allow a user to configure their computer to boot from USB from within Windows-without ever entering their firmware, as long as their firmware supports booting from USB. Enabling a system to always boot from USB first has implications that you should consider. For example, a USB device that includes malware could be booted inadvertently to compromise the system, or multiple USB drives could be plugged in to cause a boot conflict. For this reason, the default configuration has the Windows To Go Startup Options disabled by default. In addition, administrator privileges are required to configure Windows To Go Startup Options. If you enable the Windows To Go startup options using the pwlauncher command-line tool or the Change Windows To Go Startup Options app the computer will attempt to boot from any USB device that is inserted into the computer before it is started.
Syntax
pwlauncher {/enable | /disable}

Parameters



Parameter
Description




/enable
Enables Windows To Go startup options, so the computer will automatically boot from a USB device when present.


/disable
Disables Windows To Go startup options, so the computer can't be booted from a USB device unless configured manually in the firmware.


/?
Displays help at the command prompt.



Examples
To enable boot from USB:
pwlauncher /enable

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# pwlauncher

> A command line tool for managing the Windows To Go startup options.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/pwlauncher>.

- Display the current Windows To Go status:

`pwlauncher`

- Enable or disable the Windows To Go startup options:

`pwlauncher /{{enable|disable}}`
"
where,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/where,"




























404 - Content Not Found | Microsoft Docs












Skip to main content














 













				404 - Page not found
			
Hmm, we couldn't find this link, but here are some related  search results that may be helpful.






























































Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
BUILTIN(1)		  BSD General Commands Manual		    BUILTIN(1)

NAME
     builtin, !, %, ., :, @, {, }, alias, alloc, bg, bind, bindkey, break,
     breaksw, builtins, case, cd, chdir, command, complete, continue, default,
     dirs, do, done, echo, echotc, elif, else, end, endif, endsw, esac, eval,
     exec, exit, export, false, fc, fg, filetest, fi, for, foreach, getopts,
     glob, goto, hash, hashstat, history, hup, if, jobid, jobs, kill, limit,
     local, log, login, logout, ls-F, nice, nohup, notify, onintr, popd,
     printenv, pushd, pwd, read, readonly, rehash, repeat, return, sched, set,
     setenv, settc, setty, setvar, shift, source, stop, suspend, switch,
     telltc, test, then, time, times, trap, true, type, ulimit, umask,
     unalias, uncomplete, unhash, unlimit, unset, unsetenv, until, wait,
     where, which, while -- shell built-in commands

SYNOPSIS
     builtin [-options] [args ...]

DESCRIPTION
     Shell builtin commands are commands that can be executed within the run-
     ning shell's process.  Note that, in the case of csh(1) builtin commands,
     the command is executed in a subshell if it occurs as any component of a
     pipeline except the last.

     If a command specified to the shell contains a slash ``/'', the shell
     will not execute a builtin command, even if the last component of the
     specified command matches the name of a builtin command.  Thus, while
     specifying ``echo'' causes a builtin command to be executed under shells
     that support the echo builtin command, specifying ``/bin/echo'' or
     ``./echo'' does not.

     While some builtin commands may exist in more than one shell, their oper-
     ation may be different under each shell which supports them.  Below is a
     table which lists shell builtin commands, the standard shells that sup-
     port them and whether they exist as standalone utilities.

     Only builtin commands for the csh(1) and sh(1) shells are listed here.
     Consult a shell's manual page for details on the operation of its builtin
     commands.	Beware that the sh(1) manual page, at least, calls some of
     these commands ``built-in commands'' and some of them ``reserved words''.
     Users of other shells may need to consult an info(1) page or other
     sources of documentation.

     Commands marked ``No**'' under External do exist externally, but are
     implemented as scripts using a builtin command of the same name.

	   Command	 External    csh(1)    sh(1)
	   !		 No	     No        Yes
	   %		 No	     Yes       No
	   .		 No	     No        Yes
	   :		 No	     Yes       Yes
	   @		 No	     Yes       Yes
	   {		 No	     No        Yes
	   }		 No	     No        Yes
	   alias	 No**	     Yes       Yes
	   alloc	 No	     Yes       No
	   bg		 No**	     Yes       Yes
	   bind 	 No	     No        Yes
	   bindkey	 No	     Yes       No
	   break	 No	     Yes       Yes
	   breaksw	 No	     Yes       No
	   builtin	 No	     No        Yes
	   builtins	 No	     Yes       No
	   case 	 No	     Yes       Yes
	   cd		 No**	     Yes       Yes
	   chdir	 No	     Yes       Yes
	   command	 No**	     No        Yes
	   complete	 No	     Yes       No
	   continue	 No	     Yes       Yes
	   default	 No	     Yes       No
	   dirs 	 No	     Yes       No
	   do		 No	     No        Yes
	   done 	 No	     No        Yes
	   echo 	 Yes	     Yes       Yes
	   echotc	 No	     Yes       No
	   elif 	 No	     No        Yes
	   else 	 No	     Yes       Yes
	   end		 No	     Yes       No
	   endif	 No	     Yes       No
	   endsw	 No	     Yes       No
	   esac 	 No	     No        Yes
	   eval 	 No	     Yes       Yes
	   exec 	 No	     Yes       Yes
	   exit 	 No	     Yes       Yes
	   export	 No	     No        Yes
	   false	 Yes	     No        Yes
	   fc		 No**	     No        Yes
	   fg		 No**	     Yes       Yes
	   filetest	 No	     Yes       No
	   fi		 No	     No        Yes
	   for		 No	     No        Yes
	   foreach	 No	     Yes       No
	   getopts	 No**	     No        Yes
	   glob 	 No	     Yes       No
	   goto 	 No	     Yes       No
	   hash 	 No	     No        Yes
	   hashstat	 No	     Yes       No
	   history	 No	     Yes       No
	   hup		 No	     Yes       No
	   if		 No	     Yes       Yes
	   jobid	 No	     No        Yes
	   jobs 	 No**	     Yes       Yes
	   kill 	 Yes	     Yes       No
	   limit	 No	     Yes       No
	   local	 No	     No        Yes
	   log		 No	     Yes       No
	   login	 Yes	     Yes       No
	   logout	 No	     Yes       No
	   ls-F 	 No	     Yes       No
	   nice 	 Yes	     Yes       No
	   nohup	 Yes	     Yes       No
	   notify	 No	     Yes       No
	   onintr	 No	     Yes       No
	   popd 	 No	     Yes       No
	   printenv	 Yes	     Yes       No
	   pushd	 No	     Yes       No
	   pwd		 Yes	     No        Yes
	   read 	 No**	     No        Yes
	   readonly	 No	     No        Yes
	   rehash	 No	     Yes       No
	   repeat	 No	     Yes       No
	   return	 No	     No        Yes
	   sched	 No	     Yes       No
	   set		 No	     Yes       Yes
	   setenv	 No	     Yes       No
	   settc	 No	     Yes       No
	   setty	 No	     Yes       No
	   setvar	 No	     No        Yes
	   shift	 No	     Yes       Yes
	   source	 No	     Yes       No
	   stop 	 No	     Yes       No
	   suspend	 No	     Yes       No
	   switch	 No	     Yes       No
	   telltc	 No	     Yes       No
	   test 	 Yes	     No        Yes
	   then 	 No	     No        Yes
	   time 	 Yes	     Yes       No
	   times	 No	     No        Yes
	   trap 	 No	     No        Yes
	   true 	 Yes	     No        Yes
	   type 	 No	     No        Yes
	   ulimit	 No	     No        Yes
	   umask	 No**	     Yes       Yes
	   unalias	 No**	     Yes       Yes
	   uncomplete	 No	     Yes       No
	   unhash	 No	     Yes       No
	   unlimit	 No	     Yes       No
	   unset	 No	     Yes       Yes
	   unsetenv	 No	     Yes       No
	   until	 No	     No        Yes
	   wait 	 No**	     Yes       Yes
	   where	 No	     Yes       No
	   which	 Yes	     Yes       No
	   while	 No	     Yes       Yes

SEE ALSO
     csh(1), echo(1), false(1), info(1), kill(1), login(1), nice(1), nohup(1),
     printenv(1), pwd(1), sh(1), test(1), time(1), true(1), which(1)

HISTORY
     The builtin manual page first appeared in FreeBSD 3.4.

AUTHORS
     This manual page was written by Sheldon Hearn <sheldonh@FreeBSD.org>.

BSD			       February 23, 2005			   BSD
","# where

> Display the location of files that match the search pattern.
> Defaults to current work directory and paths in the PATH environment variable.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/where>.

- Display the location of file pattern:

`where {{file_pattern}}`

- Display the location of file pattern including file size and date:

`where /T {{file_pattern}}`

- Recursively search for file pattern at specified path:

`where /R {{path/to/directory}} {{file_pattern}}`

- Display only the error code for the location of file pattern:

`where /Q {{file_pattern}}`
"
ipconfig,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/ipconfig,"





































ipconfig | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















ipconfig


10/16/2017

4 minutes to read








+3





In this article


Displays all current TCP/IP network configuration values and refreshes Dynamic Host Configuration Protocol (DHCP) and Domain Name System (DNS) settings. Used without parameters, ipconfig displays Internet Protocol version 4 (IPv4) and IPv6 addresses, subnet mask, and default gateway for all adapters.
Syntax
ipconfig [/allcompartments] [/all] [/renew [<adapter>]] [/release [<adapter>]] [/renew6[<adapter>]] [/release6 [<adapter>]] [/flushdns] [/displaydns] [/registerdns] [/showclassid <adapter>] [/setclassid <adapter> [<classID>]]

Parameters



Parameter
Description




/all
Displays the full TCP/IP configuration for all adapters. Adapters can represent physical interfaces, such as installed network adapters, or logical interfaces, such as dial-up connections.


/displaydns
Displays the contents of the DNS client resolver cache, which includes both entries preloaded from the local Hosts file and any recently obtained resource records for name queries resolved by the computer. The DNS Client service uses this information to resolve frequently queried names quickly, before querying its configured DNS servers.


/flushdns
Flushes and resets the contents of the DNS client resolver cache. During DNS troubleshooting, you can use this procedure to discard negative cache entries from the cache, as well as any other entries that have been added dynamically.


/registerdns
Initiates manual dynamic registration for the DNS names and IP addresses that are configured at a computer. You can use this parameter to troubleshoot a failed DNS name registration or resolve a dynamic update problem between a client and the DNS server without rebooting the client computer. The DNS settings in the advanced properties of the TCP/IP protocol determine which names are registered in DNS.


/release [<adapter>]
Sends a DHCPRELEASE message to the DHCP server to release the current DHCP configuration and discard the IP address configuration for either all adapters (if an adapter is not specified) or for a specific adapter if the adapter parameter is included. This parameter disables TCP/IP for adapters configured to obtain an IP address automatically. To specify an adapter name, type the adapter name that appears when you use ipconfig without parameters.


/release6[<adapter>]
Sends a DHCPRELEASE message to the DHCPv6 server to release the current DHCP configuration and discard the IPv6 address configuration for either all adapters (if an adapter is not specified) or for a specific adapter if the adapter parameter is included. This parameter disables TCP/IP for adapters configured to obtain an IP address automatically. To specify an adapter name, type the adapter name that appears when you use ipconfig without parameters.


/renew [<adapter>]
Renews DHCP configuration for all adapters (if an adapter is not specified) or for a specific adapter if the adapter parameter is included. This parameter is available only on computers with adapters that are configured to obtain an IP address automatically. To specify an adapter name, type the adapter name that appears when you use ipconfig without parameters.


/renew6 [<adapter>]
Renews DHCPv6 configuration for all adapters (if an adapter is not specified) or for a specific adapter if the adapter parameter is included. This parameter is available only on computers with adapters that are configured to obtain an IPv6 address automatically. To specify an adapter name, type the adapter name that appears when you use ipconfig without parameters.


/setclassid <adapter>[<classID>]
Configures the DHCP class ID for a specified adapter. To set the DHCP class ID for all adapters, use the asterisk (*) wildcard character in place of adapter. This parameter is available only on computers with adapters that are configured to obtain an IP address automatically. If a DHCP class ID is not specified, the current class ID is removed.


/showclassid <adapter>
Displays the DHCP class ID for a specified adapter. To see the DHCP class ID for all adapters, use the asterisk (*) wildcard character in place of adapter. This parameter is available only on computers with adapters that are configured to obtain an IP address automatically.


/?
Displays Help at the command prompt.



Remarks

This command is most useful on computers that are configured to obtain an IP address automatically. This enables users to determine which TCP/IP configuration values have been configured by DHCP, Automatic Private IP Addressing (APIPA), or an alternate configuration.

If the name you supply for adapter contains any spaces, use quotation marks around the adapter name (for example, ""adapter name"").

For adapter names, ipconfig supports the use of the asterisk (*) wildcard character to specify either adapters with names that begin with a specified string or adapters with names that contain a specified string. For example, Local* matches all adapters that start with the string Local and *Con* matches all adapters that contain the string Con.


Examples
To display the basic TCP/IP configuration for all adapters, type:
ipconfig

To display the full TCP/IP configuration for all adapters, type:
ipconfig /all

To renew a DHCP-assigned IP address configuration for only the Local Area Connection adapter, type:
ipconfig /renew Local Area Connection

To flush the DNS resolver cache when troubleshooting DNS name resolution problems, type:
ipconfig /flushdns

To display the DHCP class ID for all adapters with names that start with Local, type:
ipconfig /showclassid Local*

To set the DHCP class ID for the Local Area Connection adapter to TEST, type:
ipconfig /setclassid Local Area Connection TEST

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






","
IPCONFIG(8)		  BSD System Manager's Manual		   IPCONFIG(8)

NAME
     ipconfig -- view and control IP configuration state

SYNOPSIS
     ipconfig waitall
     ipconfig getifaddr interface-name
     ipconfig ifcount
     ipconfig getoption interface-name (option-name | option-code)
     ipconfig getpacket interface-name
     ipconfig getv6packet interface-name
     ipconfig setverbose level
     ipconfig set interface-name NONE
     ipconfig set interface-name (DHCP | BOOTP)
     ipconfig set interface-name (MANUAL | INFORM) ip-address subnet-mask
     ipconfig set interface-name NONE-V6
     ipconfig set interface-name AUTOMATIC-V6
     ipconfig set interface-name MANUAL-V6 ipv6-address prefix-length
     ipconfig set interface-name 6TO4

DESCRIPTION
     ipconfig is a utility that communicates with the IPConfiguration agent to
     retrieve and set IP configuration parameters.  It should only be used in
     a test and debug context.	Using it for any other purpose is strongly
     discouraged.  Public API's in the SystemConfiguration framework are cur-
     rently the only supported way to access and control the state of IPCon-
     figuration.

     The IPConfiguration agent is responsible for configuring and managing the
     IP addresses on direct, connectionless interfaces such as IEEE 802.3 Eth-
     ernet and IEEE 1394 FireWire.  The IPConfiguration agent is a program
     bundle that is loaded and executed by the configd(8) process.

     The IPConfiguration agent implements the client side of the DHCP and
     BOOTP protocols described in RFC951, RFC1542, RFC2131, and RFC2132.  It
     also assigns and maintains static IP addresses.  It may also allocate and
     assign a link-local IP address if DHCP fails to acquire an IP address.

     In all cases, the IPConfiguration agent performs IP address conflict
     detection before assigning an IP address to an interface.

COMMANDS
     The ipconfig utility provides several commands:

     waitall	 Blocks until all network services have completed configuring,
		 or have timed out in the process of configuring.  This is
		 only useful for initial system start-up time synchronization
		 for legacy network services that are incapable of dealing
		 with dynamic network configuration changes.

     getifaddr interface-name
		 Prints to standard output the IP address for the first net-
		 work service associated with the given interface.  The output
		 will be empty if no service is currently configured or active
		 on the interface.

     ifcount	 Prints the number of interfaces that IPConfiguration is capa-
		 ble of configuring.  The value that's printed will not change
		 unless relevant network interfaces are either added to or
		 removed from the system.

     getoption interface-name (option-name | option-code)
		 Prints the BOOTP/DHCP option with the given name or option
		 code integer value.  See bootpd(8) for option code names.  If
		 an option has multiple values e.g. domain_name_server, only
		 the first value is printed.

     getpacket interface-name
		 Prints to standard output the DHCP/BOOTP packet that the
		 client accepted from the DHCP/BOOTP server.  This command is
		 useful to check what the server provided, and whether the
		 values are sensible.  This command outputs nothing if
		 DHCP/BOOTP is not active on the interface, or the attempt to
		 acquire an IP address was unsuccessful.

     getv6packet interface-name
		 Prints to standard output the latest DHCPv6 packet that the
		 client accepted from the DHCPv6 server.  In the case of
		 stateful DHCPv6, it corresponds to the last packet from the
		 server that contained addressing information.	This command
		 is useful to check what the server provided, and whether the
		 values are sensible.  This command outputs nothing if DHCPv6
		 is not active on the interface.

     set interface-name NONE
     set interface-name (DHCP | BOOTP)
     set interface-name (MANUAL | INFORM) ip-address subnet-mask
     set interface-name NONE-V6
     set interface-name AUTOMATIC-V6
     set interface-name MANUAL-V6 ipv6-address prefix-length
     set interface-name 6TO4
		 Sets the interface to have a new temporary network service of
		 the given type.  Any existing services on the interface for
		 the particular protocol (IPv4 or IPv6) are first de-config-
		 ured before the new service is instantiated.

		 If NONE is specified, all existing IPv4 services are de-con-
		 figured.  If NONE-V6 is specified, all existing IPv6 services
		 are de-configured.

		 DHCP and BOOTP require no additional arguments. The IP
		 address, subnet mask, router, and DNS information are
		 retrieved automatically.

		 Both MANUAL and INFORM require the specification of an IP
		 address ip-address and a subnet mask subnet-mask.

		 The INFORM service configures the IP address statically like
		 MANUAL, but then broadcasts DHCP INFORM packets to retrieve
		 DHCP option information. If the DHCP server responds and sup-
		 plies a subnet mask, that subnet mask is used instead of the
		 specified subnet-mask.

		 AUTOMATIC-V6 requires no additional arguments.  The IPv6
		 address, prefix length and router are retrieved automati-
		 cally.

		 MANUAL-V6 requires the specification of the IPv6 address
		 ipv6-address and a prefix length prefix-length.

		 6TO4 only works on Six To Four (IFT_STF) interfaces e.g.
		 stf0.	If it is specified on a non-IFT_STF interface, it has
		 the same effect as specifying NONE-V6.

		 The set command requires root privileges.

		 Note: The set command is very useful for debugging, but it
		 can't be used to configure a persistent service.  The tempo-
		 rary services that are created only remain until the next
		 network configuration change occurs. See scselect(8).

     setverbose level
		 Enables or disables verbose mode logging in the IPConfigura-
		 tion agent. Specify a level value of 0 to disable verbose
		 logging, the default.	Specify a value of 1 to enable verbose
		 logging. This setting is persistent across boots of the oper-
		 ating system.

		 When enabled, verbose log files are generated in the direc-
		 tory /Library/Logs/CrashReporter.  The filenames follow the
		 naming convention com.apple.networking.IPConfigura-
		 tion.log.<timestamp>.

		 The setverbose command requires root privileges.

EXAMPLES
     # ipconfig getpacket en0
     op = BOOTREPLY
     htype = 1
     dp_flags = 0
     hlen = 6
     hops = 0
     xid = 1956115059
     secs = 0
     ciaddr = 0.0.0.0
     yiaddr = 192.168.4.10
     siaddr = 192.168.4.1
     giaddr = 0.0.0.0
     chaddr = 0:3:93:7a:d7:5c
     sname = dhcp.mycompany.net
     file =
     options:
     Options count is 10
     dhcp_message_type (uint8): ACK 0x5
     server_identifier (ip): 192.168.4.1
     lease_time (uint32): 0x164a
     subnet_mask (ip): 255.255.255.0
     router (ip_mult): {192.168.4.1}
     domain_name_server (ip_mult): {192.168.4.1}
     domain_name (string): mycompany.net
     end (none):

     # ipconfig getoption en0 router
     192.168.4.1

SEE ALSO
     configd(8), bootpd(8), scselect(8)

HISTORY
     The ipconfig command first appeared in Mac OS X Version 10.0 Public Beta.

Mac OS X			March 27, 2013			      Mac OS X
","# ipconfig

> Display and manage the network configuration of Windows.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/ipconfig>.

- Show a list of network adapters:

`ipconfig`

- Show a detailed list of network adapters:

`ipconfig /all`

- Renew the IP addresses for a network adapter:

`ipconfig /renew {{adapter}}`

- Free up the IP addresses for a network adapter:

`ipconfig /release {{adapter}}`

- Remove all data from the DNS cache:

`ipconfig /flushdns`
"
cmstp,https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/cmstp,"





































cmstp | Microsoft Docs












Skip to main content














 








Contents



Exit focus mode









Bookmark







Feedback







Edit








Share








Twitter







LinkedIn







Facebook







Email




 





Table of contents






















cmstp


10/16/2017

2 minutes to read












In this article



Applies to: Windows Server (Semi-Annual Channel), Windows Server 2019, Windows Server 2016, Windows Server 2012 R2, Windows Server 2012

Installs or removes a Connection Manager service profile. Used without optional parameters, cmstp installs a service profile with default settings appropriate to the operating system and to the user's permissions.
Syntax
Syntax 1 - This is the typical syntax used in a custom installation application. To use this syntax, you must run cmstp from the directory that contains the <serviceprofilefilename>.exe file.
<serviceprofilefilename>.exe /q:a /c:cmstp.exe <serviceprofilefilename>.inf [/nf] [/s] [/u]

Syntax 2
cmstp.exe [/nf] [/s] [/u] [drive:][path]serviceprofilefilename.inf

Parameters



Parameter
Description




<serviceprofilefilename>.exe
Specifies, by name, the installation package that contains the profile that you want to install.Required for Syntax 1, but not valid for Syntax 2.


/q:a
Specifies that the profile should be installed without prompting the user. The verification message that the installation has succeeded will still appear.Required for Syntax 1, but not valid for Syntax 2.


[drive:][path] <serviceprofilefilename>.inf
Required. Specifies, by name, the configuration file that determines how the profile should be installed.The [drive:][path] parameter isn't valid for Syntax 1.


/nf
Specifies that the support files should not be installed.


/s
Specifies that the service profile should be installed or uninstalled silently (without prompting for user response or displaying verification message). This is the only parameter that you can use in combination with /u.


/u
Specifies that the service profile should be uninstalled.


/?
Displays help at the command prompt.



Examples
To install the fiction service profile without any support files, type:
fiction.exe /c:cmstp.exe fiction.inf /nf

To silently install the fiction service profile for a single user, type:
fiction.exe /c:cmstp.exe fiction.inf /s /su

To silently uninstall the fiction service profile, type:
fiction.exe /c:cmstp.exe fiction.inf /s /u

Additional References

Command-Line Syntax Key








Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 



Feedback

Submit and view feedback for


This product




This page






View all page feedback

















Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020









Is this page helpful?



Yes



No





Any additional feedback?



Skip
Submit




Thank you.

 
In this article























Theme




















Light					



















Dark					



















High contrast					




 


Previous Version Docs
Blog
Contribute
Privacy & Cookies
Terms of Use
Site Feedback
Trademarks
© Microsoft 2020






",,"# cmstp

> A command line tool for managing connection service profiles.
> More information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/cmstp>.

- Install a specific profile:

`cmstp ""{{path/to/profile}}""`

- Install without creating a desktop shortcut:

`cmstp /ns ""{{path/to/profile}}""`

- Install without checking for dependencies:

`cmstp /nf ""{{path/to/profile}}""`

- Only install for the current user:

`cmstp /su ""{{path/to/profile}}""`

- Install for all users (requires administrator privileges):

`cmstp /au ""{{path/to/profile}}""`

- Install silently without any prompts:

`cmstp /s ""{{path/to/profile}}""`

- Uninstall a specific profile:

`cmstp /u ""{{path/to/profile}}""`

- Uninstall silently without a confirmation prompt:

`cmstp /u /s ""{{path/to/profile}}""`
"
